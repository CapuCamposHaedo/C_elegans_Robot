

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Nov 23 13:45:37 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F1455
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,inline,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,inline,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,inline,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,inline,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text35,local,class=CODE,merge=1,delta=2
    47                           	psect	text36,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	psect	text38,local,class=CODE,merge=1,delta=2
    50                           	psect	text39,local,class=CODE,merge=1,delta=2
    51                           	psect	text40,local,class=CODE,merge=1,delta=2
    52                           	psect	text41,local,class=CODE,merge=1,delta=2
    53                           	psect	text42,local,class=CODE,merge=1,delta=2
    54                           	psect	text43,local,class=CODE,merge=1,delta=2
    55                           	psect	text44,local,class=CODE,merge=1,delta=2
    56                           	psect	text45,local,class=CODE,merge=1,inline,delta=2
    57                           	psect	text46,local,class=CODE,merge=1,delta=2
    58                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    59                           	psect	text48,local,class=CODE,merge=1,delta=2
    60                           	psect	text49,local,class=CODE,merge=1,delta=2
    61                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text51,local,class=CODE,merge=1,inline,delta=2
    63                           	psect	text52,local,class=CODE,merge=1,inline,delta=2
    64                           	psect	text53,local,class=CODE,merge=1,inline,delta=2
    65                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    66                           	psect	text55,local,class=CODE,merge=1,delta=2
    67                           	psect	text56,local,class=CODE,merge=1,delta=2
    68                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    70                           	dabs	1,0x7E,2
    71  0000                     
    72                           ; Version 2.20
    73                           ; Generated 09/04/2020 GMT
    74                           ; 
    75                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC16F1455 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  0008                     	;# 
   115  0009                     	;# 
   116  000A                     	;# 
   117  000B                     	;# 
   118  000C                     	;# 
   119  000E                     	;# 
   120  0011                     	;# 
   121  0012                     	;# 
   122  0015                     	;# 
   123  0016                     	;# 
   124  0016                     	;# 
   125  0017                     	;# 
   126  0018                     	;# 
   127  0019                     	;# 
   128  001A                     	;# 
   129  001B                     	;# 
   130  001C                     	;# 
   131  008C                     	;# 
   132  008E                     	;# 
   133  0091                     	;# 
   134  0092                     	;# 
   135  0095                     	;# 
   136  0096                     	;# 
   137  0097                     	;# 
   138  0098                     	;# 
   139  0099                     	;# 
   140  009A                     	;# 
   141  009B                     	;# 
   142  009B                     	;# 
   143  009C                     	;# 
   144  009D                     	;# 
   145  009E                     	;# 
   146  009F                     	;# 
   147  010C                     	;# 
   148  010E                     	;# 
   149  0111                     	;# 
   150  0112                     	;# 
   151  0113                     	;# 
   152  0114                     	;# 
   153  0115                     	;# 
   154  0116                     	;# 
   155  0117                     	;# 
   156  0118                     	;# 
   157  0119                     	;# 
   158  011D                     	;# 
   159  018C                     	;# 
   160  018E                     	;# 
   161  0191                     	;# 
   162  0191                     	;# 
   163  0192                     	;# 
   164  0193                     	;# 
   165  0193                     	;# 
   166  0194                     	;# 
   167  0195                     	;# 
   168  0196                     	;# 
   169  0197                     	;# 
   170  0199                     	;# 
   171  019A                     	;# 
   172  019B                     	;# 
   173  019B                     	;# 
   174  019C                     	;# 
   175  019D                     	;# 
   176  019E                     	;# 
   177  019F                     	;# 
   178  020C                     	;# 
   179  0211                     	;# 
   180  0211                     	;# 
   181  0212                     	;# 
   182  0212                     	;# 
   183  0213                     	;# 
   184  0213                     	;# 
   185  0214                     	;# 
   186  0214                     	;# 
   187  0215                     	;# 
   188  0215                     	;# 
   189  0215                     	;# 
   190  0216                     	;# 
   191  0216                     	;# 
   192  0217                     	;# 
   193  0217                     	;# 
   194  0391                     	;# 
   195  0392                     	;# 
   196  0393                     	;# 
   197  039A                     	;# 
   198  039B                     	;# 
   199  0611                     	;# 
   200  0612                     	;# 
   201  0613                     	;# 
   202  0613                     	;# 
   203  0614                     	;# 
   204  0615                     	;# 
   205  0616                     	;# 
   206  0616                     	;# 
   207  0691                     	;# 
   208  0692                     	;# 
   209  0693                     	;# 
   210  0694                     	;# 
   211  0695                     	;# 
   212  0E8E                     	;# 
   213  0E8F                     	;# 
   214  0E90                     	;# 
   215  0E91                     	;# 
   216  0E92                     	;# 
   217  0E93                     	;# 
   218  0E94                     	;# 
   219  0E94                     	;# 
   220  0E95                     	;# 
   221  0E96                     	;# 
   222  0E97                     	;# 
   223  0E98                     	;# 
   224  0E99                     	;# 
   225  0E9A                     	;# 
   226  0E9B                     	;# 
   227  0E9C                     	;# 
   228  0E9D                     	;# 
   229  0E9E                     	;# 
   230  0E9F                     	;# 
   231  0FE4                     	;# 
   232  0FE5                     	;# 
   233  0FE6                     	;# 
   234  0FE7                     	;# 
   235  0FE8                     	;# 
   236  0FE9                     	;# 
   237  0FEA                     	;# 
   238  0FEB                     	;# 
   239  0FED                     	;# 
   240  0FEE                     	;# 
   241  0FEF                     	;# 
   242  0000                     	;# 
   243  0001                     	;# 
   244  0002                     	;# 
   245  0003                     	;# 
   246  0004                     	;# 
   247  0005                     	;# 
   248  0006                     	;# 
   249  0007                     	;# 
   250  0008                     	;# 
   251  0009                     	;# 
   252  000A                     	;# 
   253  000B                     	;# 
   254  000C                     	;# 
   255  000E                     	;# 
   256  0011                     	;# 
   257  0012                     	;# 
   258  0015                     	;# 
   259  0016                     	;# 
   260  0016                     	;# 
   261  0017                     	;# 
   262  0018                     	;# 
   263  0019                     	;# 
   264  001A                     	;# 
   265  001B                     	;# 
   266  001C                     	;# 
   267  008C                     	;# 
   268  008E                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  010C                     	;# 
   284  010E                     	;# 
   285  0111                     	;# 
   286  0112                     	;# 
   287  0113                     	;# 
   288  0114                     	;# 
   289  0115                     	;# 
   290  0116                     	;# 
   291  0117                     	;# 
   292  0118                     	;# 
   293  0119                     	;# 
   294  011D                     	;# 
   295  018C                     	;# 
   296  018E                     	;# 
   297  0191                     	;# 
   298  0191                     	;# 
   299  0192                     	;# 
   300  0193                     	;# 
   301  0193                     	;# 
   302  0194                     	;# 
   303  0195                     	;# 
   304  0196                     	;# 
   305  0197                     	;# 
   306  0199                     	;# 
   307  019A                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019C                     	;# 
   311  019D                     	;# 
   312  019E                     	;# 
   313  019F                     	;# 
   314  020C                     	;# 
   315  0211                     	;# 
   316  0211                     	;# 
   317  0212                     	;# 
   318  0212                     	;# 
   319  0213                     	;# 
   320  0213                     	;# 
   321  0214                     	;# 
   322  0214                     	;# 
   323  0215                     	;# 
   324  0215                     	;# 
   325  0215                     	;# 
   326  0216                     	;# 
   327  0216                     	;# 
   328  0217                     	;# 
   329  0217                     	;# 
   330  0391                     	;# 
   331  0392                     	;# 
   332  0393                     	;# 
   333  039A                     	;# 
   334  039B                     	;# 
   335  0611                     	;# 
   336  0612                     	;# 
   337  0613                     	;# 
   338  0613                     	;# 
   339  0614                     	;# 
   340  0615                     	;# 
   341  0616                     	;# 
   342  0616                     	;# 
   343  0691                     	;# 
   344  0692                     	;# 
   345  0693                     	;# 
   346  0694                     	;# 
   347  0695                     	;# 
   348  0E8E                     	;# 
   349  0E8F                     	;# 
   350  0E90                     	;# 
   351  0E91                     	;# 
   352  0E92                     	;# 
   353  0E93                     	;# 
   354  0E94                     	;# 
   355  0E94                     	;# 
   356  0E95                     	;# 
   357  0E96                     	;# 
   358  0E97                     	;# 
   359  0E98                     	;# 
   360  0E99                     	;# 
   361  0E9A                     	;# 
   362  0E9B                     	;# 
   363  0E9C                     	;# 
   364  0E9D                     	;# 
   365  0E9E                     	;# 
   366  0E9F                     	;# 
   367  0FE4                     	;# 
   368  0FE5                     	;# 
   369  0FE6                     	;# 
   370  0FE7                     	;# 
   371  0FE8                     	;# 
   372  0FE9                     	;# 
   373  0FEA                     	;# 
   374  0FEB                     	;# 
   375  0FED                     	;# 
   376  0FEE                     	;# 
   377  0FEF                     	;# 
   378  0000                     	;# 
   379  0001                     	;# 
   380  0002                     	;# 
   381  0003                     	;# 
   382  0004                     	;# 
   383  0005                     	;# 
   384  0006                     	;# 
   385  0007                     	;# 
   386  0008                     	;# 
   387  0009                     	;# 
   388  000A                     	;# 
   389  000B                     	;# 
   390  000C                     	;# 
   391  000E                     	;# 
   392  0011                     	;# 
   393  0012                     	;# 
   394  0015                     	;# 
   395  0016                     	;# 
   396  0016                     	;# 
   397  0017                     	;# 
   398  0018                     	;# 
   399  0019                     	;# 
   400  001A                     	;# 
   401  001B                     	;# 
   402  001C                     	;# 
   403  008C                     	;# 
   404  008E                     	;# 
   405  0091                     	;# 
   406  0092                     	;# 
   407  0095                     	;# 
   408  0096                     	;# 
   409  0097                     	;# 
   410  0098                     	;# 
   411  0099                     	;# 
   412  009A                     	;# 
   413  009B                     	;# 
   414  009B                     	;# 
   415  009C                     	;# 
   416  009D                     	;# 
   417  009E                     	;# 
   418  009F                     	;# 
   419  010C                     	;# 
   420  010E                     	;# 
   421  0111                     	;# 
   422  0112                     	;# 
   423  0113                     	;# 
   424  0114                     	;# 
   425  0115                     	;# 
   426  0116                     	;# 
   427  0117                     	;# 
   428  0118                     	;# 
   429  0119                     	;# 
   430  011D                     	;# 
   431  018C                     	;# 
   432  018E                     	;# 
   433  0191                     	;# 
   434  0191                     	;# 
   435  0192                     	;# 
   436  0193                     	;# 
   437  0193                     	;# 
   438  0194                     	;# 
   439  0195                     	;# 
   440  0196                     	;# 
   441  0197                     	;# 
   442  0199                     	;# 
   443  019A                     	;# 
   444  019B                     	;# 
   445  019B                     	;# 
   446  019C                     	;# 
   447  019D                     	;# 
   448  019E                     	;# 
   449  019F                     	;# 
   450  020C                     	;# 
   451  0211                     	;# 
   452  0211                     	;# 
   453  0212                     	;# 
   454  0212                     	;# 
   455  0213                     	;# 
   456  0213                     	;# 
   457  0214                     	;# 
   458  0214                     	;# 
   459  0215                     	;# 
   460  0215                     	;# 
   461  0215                     	;# 
   462  0216                     	;# 
   463  0216                     	;# 
   464  0217                     	;# 
   465  0217                     	;# 
   466  0391                     	;# 
   467  0392                     	;# 
   468  0393                     	;# 
   469  039A                     	;# 
   470  039B                     	;# 
   471  0611                     	;# 
   472  0612                     	;# 
   473  0613                     	;# 
   474  0613                     	;# 
   475  0614                     	;# 
   476  0615                     	;# 
   477  0616                     	;# 
   478  0616                     	;# 
   479  0691                     	;# 
   480  0692                     	;# 
   481  0693                     	;# 
   482  0694                     	;# 
   483  0695                     	;# 
   484  0E8E                     	;# 
   485  0E8F                     	;# 
   486  0E90                     	;# 
   487  0E91                     	;# 
   488  0E92                     	;# 
   489  0E93                     	;# 
   490  0E94                     	;# 
   491  0E94                     	;# 
   492  0E95                     	;# 
   493  0E96                     	;# 
   494  0E97                     	;# 
   495  0E98                     	;# 
   496  0E99                     	;# 
   497  0E9A                     	;# 
   498  0E9B                     	;# 
   499  0E9C                     	;# 
   500  0E9D                     	;# 
   501  0E9E                     	;# 
   502  0E9F                     	;# 
   503  0FE4                     	;# 
   504  0FE5                     	;# 
   505  0FE6                     	;# 
   506  0FE7                     	;# 
   507  0FE8                     	;# 
   508  0FE9                     	;# 
   509  0FEA                     	;# 
   510  0FEB                     	;# 
   511  0FED                     	;# 
   512  0FEE                     	;# 
   513  0FEF                     	;# 
   514  0000                     	;# 
   515  0001                     	;# 
   516  0002                     	;# 
   517  0003                     	;# 
   518  0004                     	;# 
   519  0005                     	;# 
   520  0006                     	;# 
   521  0007                     	;# 
   522  0008                     	;# 
   523  0009                     	;# 
   524  000A                     	;# 
   525  000B                     	;# 
   526  000C                     	;# 
   527  000E                     	;# 
   528  0011                     	;# 
   529  0012                     	;# 
   530  0015                     	;# 
   531  0016                     	;# 
   532  0016                     	;# 
   533  0017                     	;# 
   534  0018                     	;# 
   535  0019                     	;# 
   536  001A                     	;# 
   537  001B                     	;# 
   538  001C                     	;# 
   539  008C                     	;# 
   540  008E                     	;# 
   541  0091                     	;# 
   542  0092                     	;# 
   543  0095                     	;# 
   544  0096                     	;# 
   545  0097                     	;# 
   546  0098                     	;# 
   547  0099                     	;# 
   548  009A                     	;# 
   549  009B                     	;# 
   550  009B                     	;# 
   551  009C                     	;# 
   552  009D                     	;# 
   553  009E                     	;# 
   554  009F                     	;# 
   555  010C                     	;# 
   556  010E                     	;# 
   557  0111                     	;# 
   558  0112                     	;# 
   559  0113                     	;# 
   560  0114                     	;# 
   561  0115                     	;# 
   562  0116                     	;# 
   563  0117                     	;# 
   564  0118                     	;# 
   565  0119                     	;# 
   566  011D                     	;# 
   567  018C                     	;# 
   568  018E                     	;# 
   569  0191                     	;# 
   570  0191                     	;# 
   571  0192                     	;# 
   572  0193                     	;# 
   573  0193                     	;# 
   574  0194                     	;# 
   575  0195                     	;# 
   576  0196                     	;# 
   577  0197                     	;# 
   578  0199                     	;# 
   579  019A                     	;# 
   580  019B                     	;# 
   581  019B                     	;# 
   582  019C                     	;# 
   583  019D                     	;# 
   584  019E                     	;# 
   585  019F                     	;# 
   586  020C                     	;# 
   587  0211                     	;# 
   588  0211                     	;# 
   589  0212                     	;# 
   590  0212                     	;# 
   591  0213                     	;# 
   592  0213                     	;# 
   593  0214                     	;# 
   594  0214                     	;# 
   595  0215                     	;# 
   596  0215                     	;# 
   597  0215                     	;# 
   598  0216                     	;# 
   599  0216                     	;# 
   600  0217                     	;# 
   601  0217                     	;# 
   602  0391                     	;# 
   603  0392                     	;# 
   604  0393                     	;# 
   605  039A                     	;# 
   606  039B                     	;# 
   607  0611                     	;# 
   608  0612                     	;# 
   609  0613                     	;# 
   610  0613                     	;# 
   611  0614                     	;# 
   612  0615                     	;# 
   613  0616                     	;# 
   614  0616                     	;# 
   615  0691                     	;# 
   616  0692                     	;# 
   617  0693                     	;# 
   618  0694                     	;# 
   619  0695                     	;# 
   620  0E8E                     	;# 
   621  0E8F                     	;# 
   622  0E90                     	;# 
   623  0E91                     	;# 
   624  0E92                     	;# 
   625  0E93                     	;# 
   626  0E94                     	;# 
   627  0E94                     	;# 
   628  0E95                     	;# 
   629  0E96                     	;# 
   630  0E97                     	;# 
   631  0E98                     	;# 
   632  0E99                     	;# 
   633  0E9A                     	;# 
   634  0E9B                     	;# 
   635  0E9C                     	;# 
   636  0E9D                     	;# 
   637  0E9E                     	;# 
   638  0E9F                     	;# 
   639  0FE4                     	;# 
   640  0FE5                     	;# 
   641  0FE6                     	;# 
   642  0FE7                     	;# 
   643  0FE8                     	;# 
   644  0FE9                     	;# 
   645  0FEA                     	;# 
   646  0FEB                     	;# 
   647  0FED                     	;# 
   648  0FEE                     	;# 
   649  0FEF                     	;# 
   650  0000                     	;# 
   651  0001                     	;# 
   652  0002                     	;# 
   653  0003                     	;# 
   654  0004                     	;# 
   655  0005                     	;# 
   656  0006                     	;# 
   657  0007                     	;# 
   658  0008                     	;# 
   659  0009                     	;# 
   660  000A                     	;# 
   661  000B                     	;# 
   662  000C                     	;# 
   663  000E                     	;# 
   664  0011                     	;# 
   665  0012                     	;# 
   666  0015                     	;# 
   667  0016                     	;# 
   668  0016                     	;# 
   669  0017                     	;# 
   670  0018                     	;# 
   671  0019                     	;# 
   672  001A                     	;# 
   673  001B                     	;# 
   674  001C                     	;# 
   675  008C                     	;# 
   676  008E                     	;# 
   677  0091                     	;# 
   678  0092                     	;# 
   679  0095                     	;# 
   680  0096                     	;# 
   681  0097                     	;# 
   682  0098                     	;# 
   683  0099                     	;# 
   684  009A                     	;# 
   685  009B                     	;# 
   686  009B                     	;# 
   687  009C                     	;# 
   688  009D                     	;# 
   689  009E                     	;# 
   690  009F                     	;# 
   691  010C                     	;# 
   692  010E                     	;# 
   693  0111                     	;# 
   694  0112                     	;# 
   695  0113                     	;# 
   696  0114                     	;# 
   697  0115                     	;# 
   698  0116                     	;# 
   699  0117                     	;# 
   700  0118                     	;# 
   701  0119                     	;# 
   702  011D                     	;# 
   703  018C                     	;# 
   704  018E                     	;# 
   705  0191                     	;# 
   706  0191                     	;# 
   707  0192                     	;# 
   708  0193                     	;# 
   709  0193                     	;# 
   710  0194                     	;# 
   711  0195                     	;# 
   712  0196                     	;# 
   713  0197                     	;# 
   714  0199                     	;# 
   715  019A                     	;# 
   716  019B                     	;# 
   717  019B                     	;# 
   718  019C                     	;# 
   719  019D                     	;# 
   720  019E                     	;# 
   721  019F                     	;# 
   722  020C                     	;# 
   723  0211                     	;# 
   724  0211                     	;# 
   725  0212                     	;# 
   726  0212                     	;# 
   727  0213                     	;# 
   728  0213                     	;# 
   729  0214                     	;# 
   730  0214                     	;# 
   731  0215                     	;# 
   732  0215                     	;# 
   733  0215                     	;# 
   734  0216                     	;# 
   735  0216                     	;# 
   736  0217                     	;# 
   737  0217                     	;# 
   738  0391                     	;# 
   739  0392                     	;# 
   740  0393                     	;# 
   741  039A                     	;# 
   742  039B                     	;# 
   743  0611                     	;# 
   744  0612                     	;# 
   745  0613                     	;# 
   746  0613                     	;# 
   747  0614                     	;# 
   748  0615                     	;# 
   749  0616                     	;# 
   750  0616                     	;# 
   751  0691                     	;# 
   752  0692                     	;# 
   753  0693                     	;# 
   754  0694                     	;# 
   755  0695                     	;# 
   756  0E8E                     	;# 
   757  0E8F                     	;# 
   758  0E90                     	;# 
   759  0E91                     	;# 
   760  0E92                     	;# 
   761  0E93                     	;# 
   762  0E94                     	;# 
   763  0E94                     	;# 
   764  0E95                     	;# 
   765  0E96                     	;# 
   766  0E97                     	;# 
   767  0E98                     	;# 
   768  0E99                     	;# 
   769  0E9A                     	;# 
   770  0E9B                     	;# 
   771  0E9C                     	;# 
   772  0E9D                     	;# 
   773  0E9E                     	;# 
   774  0E9F                     	;# 
   775  0FE4                     	;# 
   776  0FE5                     	;# 
   777  0FE6                     	;# 
   778  0FE7                     	;# 
   779  0FE8                     	;# 
   780  0FE9                     	;# 
   781  0FEA                     	;# 
   782  0FEB                     	;# 
   783  0FED                     	;# 
   784  0FEE                     	;# 
   785  0FEF                     	;# 
   786  0000                     	;# 
   787  0001                     	;# 
   788  0002                     	;# 
   789  0003                     	;# 
   790  0004                     	;# 
   791  0005                     	;# 
   792  0006                     	;# 
   793  0007                     	;# 
   794  0008                     	;# 
   795  0009                     	;# 
   796  000A                     	;# 
   797  000B                     	;# 
   798  000C                     	;# 
   799  000E                     	;# 
   800  0011                     	;# 
   801  0012                     	;# 
   802  0015                     	;# 
   803  0016                     	;# 
   804  0016                     	;# 
   805  0017                     	;# 
   806  0018                     	;# 
   807  0019                     	;# 
   808  001A                     	;# 
   809  001B                     	;# 
   810  001C                     	;# 
   811  008C                     	;# 
   812  008E                     	;# 
   813  0091                     	;# 
   814  0092                     	;# 
   815  0095                     	;# 
   816  0096                     	;# 
   817  0097                     	;# 
   818  0098                     	;# 
   819  0099                     	;# 
   820  009A                     	;# 
   821  009B                     	;# 
   822  009B                     	;# 
   823  009C                     	;# 
   824  009D                     	;# 
   825  009E                     	;# 
   826  009F                     	;# 
   827  010C                     	;# 
   828  010E                     	;# 
   829  0111                     	;# 
   830  0112                     	;# 
   831  0113                     	;# 
   832  0114                     	;# 
   833  0115                     	;# 
   834  0116                     	;# 
   835  0117                     	;# 
   836  0118                     	;# 
   837  0119                     	;# 
   838  011D                     	;# 
   839  018C                     	;# 
   840  018E                     	;# 
   841  0191                     	;# 
   842  0191                     	;# 
   843  0192                     	;# 
   844  0193                     	;# 
   845  0193                     	;# 
   846  0194                     	;# 
   847  0195                     	;# 
   848  0196                     	;# 
   849  0197                     	;# 
   850  0199                     	;# 
   851  019A                     	;# 
   852  019B                     	;# 
   853  019B                     	;# 
   854  019C                     	;# 
   855  019D                     	;# 
   856  019E                     	;# 
   857  019F                     	;# 
   858  020C                     	;# 
   859  0211                     	;# 
   860  0211                     	;# 
   861  0212                     	;# 
   862  0212                     	;# 
   863  0213                     	;# 
   864  0213                     	;# 
   865  0214                     	;# 
   866  0214                     	;# 
   867  0215                     	;# 
   868  0215                     	;# 
   869  0215                     	;# 
   870  0216                     	;# 
   871  0216                     	;# 
   872  0217                     	;# 
   873  0217                     	;# 
   874  0391                     	;# 
   875  0392                     	;# 
   876  0393                     	;# 
   877  039A                     	;# 
   878  039B                     	;# 
   879  0611                     	;# 
   880  0612                     	;# 
   881  0613                     	;# 
   882  0613                     	;# 
   883  0614                     	;# 
   884  0615                     	;# 
   885  0616                     	;# 
   886  0616                     	;# 
   887  0691                     	;# 
   888  0692                     	;# 
   889  0693                     	;# 
   890  0694                     	;# 
   891  0695                     	;# 
   892  0E8E                     	;# 
   893  0E8F                     	;# 
   894  0E90                     	;# 
   895  0E91                     	;# 
   896  0E92                     	;# 
   897  0E93                     	;# 
   898  0E94                     	;# 
   899  0E94                     	;# 
   900  0E95                     	;# 
   901  0E96                     	;# 
   902  0E97                     	;# 
   903  0E98                     	;# 
   904  0E99                     	;# 
   905  0E9A                     	;# 
   906  0E9B                     	;# 
   907  0E9C                     	;# 
   908  0E9D                     	;# 
   909  0E9E                     	;# 
   910  0E9F                     	;# 
   911  0FE4                     	;# 
   912  0FE5                     	;# 
   913  0FE6                     	;# 
   914  0FE7                     	;# 
   915  0FE8                     	;# 
   916  0FE9                     	;# 
   917  0FEA                     	;# 
   918  0FEB                     	;# 
   919  0FED                     	;# 
   920  0FEE                     	;# 
   921  0FEF                     	;# 
   922  0000                     	;# 
   923  0001                     	;# 
   924  0002                     	;# 
   925  0003                     	;# 
   926  0004                     	;# 
   927  0005                     	;# 
   928  0006                     	;# 
   929  0007                     	;# 
   930  0008                     	;# 
   931  0009                     	;# 
   932  000A                     	;# 
   933  000B                     	;# 
   934  000C                     	;# 
   935  000E                     	;# 
   936  0011                     	;# 
   937  0012                     	;# 
   938  0015                     	;# 
   939  0016                     	;# 
   940  0016                     	;# 
   941  0017                     	;# 
   942  0018                     	;# 
   943  0019                     	;# 
   944  001A                     	;# 
   945  001B                     	;# 
   946  001C                     	;# 
   947  008C                     	;# 
   948  008E                     	;# 
   949  0091                     	;# 
   950  0092                     	;# 
   951  0095                     	;# 
   952  0096                     	;# 
   953  0097                     	;# 
   954  0098                     	;# 
   955  0099                     	;# 
   956  009A                     	;# 
   957  009B                     	;# 
   958  009B                     	;# 
   959  009C                     	;# 
   960  009D                     	;# 
   961  009E                     	;# 
   962  009F                     	;# 
   963  010C                     	;# 
   964  010E                     	;# 
   965  0111                     	;# 
   966  0112                     	;# 
   967  0113                     	;# 
   968  0114                     	;# 
   969  0115                     	;# 
   970  0116                     	;# 
   971  0117                     	;# 
   972  0118                     	;# 
   973  0119                     	;# 
   974  011D                     	;# 
   975  018C                     	;# 
   976  018E                     	;# 
   977  0191                     	;# 
   978  0191                     	;# 
   979  0192                     	;# 
   980  0193                     	;# 
   981  0193                     	;# 
   982  0194                     	;# 
   983  0195                     	;# 
   984  0196                     	;# 
   985  0197                     	;# 
   986  0199                     	;# 
   987  019A                     	;# 
   988  019B                     	;# 
   989  019B                     	;# 
   990  019C                     	;# 
   991  019D                     	;# 
   992  019E                     	;# 
   993  019F                     	;# 
   994  020C                     	;# 
   995  0211                     	;# 
   996  0211                     	;# 
   997  0212                     	;# 
   998  0212                     	;# 
   999  0213                     	;# 
  1000  0213                     	;# 
  1001  0214                     	;# 
  1002  0214                     	;# 
  1003  0215                     	;# 
  1004  0215                     	;# 
  1005  0215                     	;# 
  1006  0216                     	;# 
  1007  0216                     	;# 
  1008  0217                     	;# 
  1009  0217                     	;# 
  1010  0391                     	;# 
  1011  0392                     	;# 
  1012  0393                     	;# 
  1013  039A                     	;# 
  1014  039B                     	;# 
  1015  0611                     	;# 
  1016  0612                     	;# 
  1017  0613                     	;# 
  1018  0613                     	;# 
  1019  0614                     	;# 
  1020  0615                     	;# 
  1021  0616                     	;# 
  1022  0616                     	;# 
  1023  0691                     	;# 
  1024  0692                     	;# 
  1025  0693                     	;# 
  1026  0694                     	;# 
  1027  0695                     	;# 
  1028  0E8E                     	;# 
  1029  0E8F                     	;# 
  1030  0E90                     	;# 
  1031  0E91                     	;# 
  1032  0E92                     	;# 
  1033  0E93                     	;# 
  1034  0E94                     	;# 
  1035  0E94                     	;# 
  1036  0E95                     	;# 
  1037  0E96                     	;# 
  1038  0E97                     	;# 
  1039  0E98                     	;# 
  1040  0E99                     	;# 
  1041  0E9A                     	;# 
  1042  0E9B                     	;# 
  1043  0E9C                     	;# 
  1044  0E9D                     	;# 
  1045  0E9E                     	;# 
  1046  0E9F                     	;# 
  1047  0FE4                     	;# 
  1048  0FE5                     	;# 
  1049  0FE6                     	;# 
  1050  0FE7                     	;# 
  1051  0FE8                     	;# 
  1052  0FE9                     	;# 
  1053  0FEA                     	;# 
  1054  0FEB                     	;# 
  1055  0FED                     	;# 
  1056  0FEE                     	;# 
  1057  0FEF                     	;# 
  1058  0000                     	;# 
  1059  0001                     	;# 
  1060  0002                     	;# 
  1061  0003                     	;# 
  1062  0004                     	;# 
  1063  0005                     	;# 
  1064  0006                     	;# 
  1065  0007                     	;# 
  1066  0008                     	;# 
  1067  0009                     	;# 
  1068  000A                     	;# 
  1069  000B                     	;# 
  1070  000C                     	;# 
  1071  000E                     	;# 
  1072  0011                     	;# 
  1073  0012                     	;# 
  1074  0015                     	;# 
  1075  0016                     	;# 
  1076  0016                     	;# 
  1077  0017                     	;# 
  1078  0018                     	;# 
  1079  0019                     	;# 
  1080  001A                     	;# 
  1081  001B                     	;# 
  1082  001C                     	;# 
  1083  008C                     	;# 
  1084  008E                     	;# 
  1085  0091                     	;# 
  1086  0092                     	;# 
  1087  0095                     	;# 
  1088  0096                     	;# 
  1089  0097                     	;# 
  1090  0098                     	;# 
  1091  0099                     	;# 
  1092  009A                     	;# 
  1093  009B                     	;# 
  1094  009B                     	;# 
  1095  009C                     	;# 
  1096  009D                     	;# 
  1097  009E                     	;# 
  1098  009F                     	;# 
  1099  010C                     	;# 
  1100  010E                     	;# 
  1101  0111                     	;# 
  1102  0112                     	;# 
  1103  0113                     	;# 
  1104  0114                     	;# 
  1105  0115                     	;# 
  1106  0116                     	;# 
  1107  0117                     	;# 
  1108  0118                     	;# 
  1109  0119                     	;# 
  1110  011D                     	;# 
  1111  018C                     	;# 
  1112  018E                     	;# 
  1113  0191                     	;# 
  1114  0191                     	;# 
  1115  0192                     	;# 
  1116  0193                     	;# 
  1117  0193                     	;# 
  1118  0194                     	;# 
  1119  0195                     	;# 
  1120  0196                     	;# 
  1121  0197                     	;# 
  1122  0199                     	;# 
  1123  019A                     	;# 
  1124  019B                     	;# 
  1125  019B                     	;# 
  1126  019C                     	;# 
  1127  019D                     	;# 
  1128  019E                     	;# 
  1129  019F                     	;# 
  1130  020C                     	;# 
  1131  0211                     	;# 
  1132  0211                     	;# 
  1133  0212                     	;# 
  1134  0212                     	;# 
  1135  0213                     	;# 
  1136  0213                     	;# 
  1137  0214                     	;# 
  1138  0214                     	;# 
  1139  0215                     	;# 
  1140  0215                     	;# 
  1141  0215                     	;# 
  1142  0216                     	;# 
  1143  0216                     	;# 
  1144  0217                     	;# 
  1145  0217                     	;# 
  1146  0391                     	;# 
  1147  0392                     	;# 
  1148  0393                     	;# 
  1149  039A                     	;# 
  1150  039B                     	;# 
  1151  0611                     	;# 
  1152  0612                     	;# 
  1153  0613                     	;# 
  1154  0613                     	;# 
  1155  0614                     	;# 
  1156  0615                     	;# 
  1157  0616                     	;# 
  1158  0616                     	;# 
  1159  0691                     	;# 
  1160  0692                     	;# 
  1161  0693                     	;# 
  1162  0694                     	;# 
  1163  0695                     	;# 
  1164  0E8E                     	;# 
  1165  0E8F                     	;# 
  1166  0E90                     	;# 
  1167  0E91                     	;# 
  1168  0E92                     	;# 
  1169  0E93                     	;# 
  1170  0E94                     	;# 
  1171  0E94                     	;# 
  1172  0E95                     	;# 
  1173  0E96                     	;# 
  1174  0E97                     	;# 
  1175  0E98                     	;# 
  1176  0E99                     	;# 
  1177  0E9A                     	;# 
  1178  0E9B                     	;# 
  1179  0E9C                     	;# 
  1180  0E9D                     	;# 
  1181  0E9E                     	;# 
  1182  0E9F                     	;# 
  1183  0FE4                     	;# 
  1184  0FE5                     	;# 
  1185  0FE6                     	;# 
  1186  0FE7                     	;# 
  1187  0FE8                     	;# 
  1188  0FE9                     	;# 
  1189  0FEA                     	;# 
  1190  0FEB                     	;# 
  1191  0FED                     	;# 
  1192  0FEE                     	;# 
  1193  0FEF                     	;# 
  1194  0000                     	;# 
  1195  0001                     	;# 
  1196  0002                     	;# 
  1197  0003                     	;# 
  1198  0004                     	;# 
  1199  0005                     	;# 
  1200  0006                     	;# 
  1201  0007                     	;# 
  1202  0008                     	;# 
  1203  0009                     	;# 
  1204  000A                     	;# 
  1205  000B                     	;# 
  1206  000C                     	;# 
  1207  000E                     	;# 
  1208  0011                     	;# 
  1209  0012                     	;# 
  1210  0015                     	;# 
  1211  0016                     	;# 
  1212  0016                     	;# 
  1213  0017                     	;# 
  1214  0018                     	;# 
  1215  0019                     	;# 
  1216  001A                     	;# 
  1217  001B                     	;# 
  1218  001C                     	;# 
  1219  008C                     	;# 
  1220  008E                     	;# 
  1221  0091                     	;# 
  1222  0092                     	;# 
  1223  0095                     	;# 
  1224  0096                     	;# 
  1225  0097                     	;# 
  1226  0098                     	;# 
  1227  0099                     	;# 
  1228  009A                     	;# 
  1229  009B                     	;# 
  1230  009B                     	;# 
  1231  009C                     	;# 
  1232  009D                     	;# 
  1233  009E                     	;# 
  1234  009F                     	;# 
  1235  010C                     	;# 
  1236  010E                     	;# 
  1237  0111                     	;# 
  1238  0112                     	;# 
  1239  0113                     	;# 
  1240  0114                     	;# 
  1241  0115                     	;# 
  1242  0116                     	;# 
  1243  0117                     	;# 
  1244  0118                     	;# 
  1245  0119                     	;# 
  1246  011D                     	;# 
  1247  018C                     	;# 
  1248  018E                     	;# 
  1249  0191                     	;# 
  1250  0191                     	;# 
  1251  0192                     	;# 
  1252  0193                     	;# 
  1253  0193                     	;# 
  1254  0194                     	;# 
  1255  0195                     	;# 
  1256  0196                     	;# 
  1257  0197                     	;# 
  1258  0199                     	;# 
  1259  019A                     	;# 
  1260  019B                     	;# 
  1261  019B                     	;# 
  1262  019C                     	;# 
  1263  019D                     	;# 
  1264  019E                     	;# 
  1265  019F                     	;# 
  1266  020C                     	;# 
  1267  0211                     	;# 
  1268  0211                     	;# 
  1269  0212                     	;# 
  1270  0212                     	;# 
  1271  0213                     	;# 
  1272  0213                     	;# 
  1273  0214                     	;# 
  1274  0214                     	;# 
  1275  0215                     	;# 
  1276  0215                     	;# 
  1277  0215                     	;# 
  1278  0216                     	;# 
  1279  0216                     	;# 
  1280  0217                     	;# 
  1281  0217                     	;# 
  1282  0391                     	;# 
  1283  0392                     	;# 
  1284  0393                     	;# 
  1285  039A                     	;# 
  1286  039B                     	;# 
  1287  0611                     	;# 
  1288  0612                     	;# 
  1289  0613                     	;# 
  1290  0613                     	;# 
  1291  0614                     	;# 
  1292  0615                     	;# 
  1293  0616                     	;# 
  1294  0616                     	;# 
  1295  0691                     	;# 
  1296  0692                     	;# 
  1297  0693                     	;# 
  1298  0694                     	;# 
  1299  0695                     	;# 
  1300  0E8E                     	;# 
  1301  0E8F                     	;# 
  1302  0E90                     	;# 
  1303  0E91                     	;# 
  1304  0E92                     	;# 
  1305  0E93                     	;# 
  1306  0E94                     	;# 
  1307  0E94                     	;# 
  1308  0E95                     	;# 
  1309  0E96                     	;# 
  1310  0E97                     	;# 
  1311  0E98                     	;# 
  1312  0E99                     	;# 
  1313  0E9A                     	;# 
  1314  0E9B                     	;# 
  1315  0E9C                     	;# 
  1316  0E9D                     	;# 
  1317  0E9E                     	;# 
  1318  0E9F                     	;# 
  1319  0FE4                     	;# 
  1320  0FE5                     	;# 
  1321  0FE6                     	;# 
  1322  0FE7                     	;# 
  1323  0FE8                     	;# 
  1324  0FE9                     	;# 
  1325  0FEA                     	;# 
  1326  0FEB                     	;# 
  1327  0FED                     	;# 
  1328  0FEE                     	;# 
  1329  0FEF                     	;# 
  1330  0000                     	;# 
  1331  0001                     	;# 
  1332  0002                     	;# 
  1333  0003                     	;# 
  1334  0004                     	;# 
  1335  0005                     	;# 
  1336  0006                     	;# 
  1337  0007                     	;# 
  1338  0008                     	;# 
  1339  0009                     	;# 
  1340  000A                     	;# 
  1341  000B                     	;# 
  1342  000C                     	;# 
  1343  000E                     	;# 
  1344  0011                     	;# 
  1345  0012                     	;# 
  1346  0015                     	;# 
  1347  0016                     	;# 
  1348  0016                     	;# 
  1349  0017                     	;# 
  1350  0018                     	;# 
  1351  0019                     	;# 
  1352  001A                     	;# 
  1353  001B                     	;# 
  1354  001C                     	;# 
  1355  008C                     	;# 
  1356  008E                     	;# 
  1357  0091                     	;# 
  1358  0092                     	;# 
  1359  0095                     	;# 
  1360  0096                     	;# 
  1361  0097                     	;# 
  1362  0098                     	;# 
  1363  0099                     	;# 
  1364  009A                     	;# 
  1365  009B                     	;# 
  1366  009B                     	;# 
  1367  009C                     	;# 
  1368  009D                     	;# 
  1369  009E                     	;# 
  1370  009F                     	;# 
  1371  010C                     	;# 
  1372  010E                     	;# 
  1373  0111                     	;# 
  1374  0112                     	;# 
  1375  0113                     	;# 
  1376  0114                     	;# 
  1377  0115                     	;# 
  1378  0116                     	;# 
  1379  0117                     	;# 
  1380  0118                     	;# 
  1381  0119                     	;# 
  1382  011D                     	;# 
  1383  018C                     	;# 
  1384  018E                     	;# 
  1385  0191                     	;# 
  1386  0191                     	;# 
  1387  0192                     	;# 
  1388  0193                     	;# 
  1389  0193                     	;# 
  1390  0194                     	;# 
  1391  0195                     	;# 
  1392  0196                     	;# 
  1393  0197                     	;# 
  1394  0199                     	;# 
  1395  019A                     	;# 
  1396  019B                     	;# 
  1397  019B                     	;# 
  1398  019C                     	;# 
  1399  019D                     	;# 
  1400  019E                     	;# 
  1401  019F                     	;# 
  1402  020C                     	;# 
  1403  0211                     	;# 
  1404  0211                     	;# 
  1405  0212                     	;# 
  1406  0212                     	;# 
  1407  0213                     	;# 
  1408  0213                     	;# 
  1409  0214                     	;# 
  1410  0214                     	;# 
  1411  0215                     	;# 
  1412  0215                     	;# 
  1413  0215                     	;# 
  1414  0216                     	;# 
  1415  0216                     	;# 
  1416  0217                     	;# 
  1417  0217                     	;# 
  1418  0391                     	;# 
  1419  0392                     	;# 
  1420  0393                     	;# 
  1421  039A                     	;# 
  1422  039B                     	;# 
  1423  0611                     	;# 
  1424  0612                     	;# 
  1425  0613                     	;# 
  1426  0613                     	;# 
  1427  0614                     	;# 
  1428  0615                     	;# 
  1429  0616                     	;# 
  1430  0616                     	;# 
  1431  0691                     	;# 
  1432  0692                     	;# 
  1433  0693                     	;# 
  1434  0694                     	;# 
  1435  0695                     	;# 
  1436  0E8E                     	;# 
  1437  0E8F                     	;# 
  1438  0E90                     	;# 
  1439  0E91                     	;# 
  1440  0E92                     	;# 
  1441  0E93                     	;# 
  1442  0E94                     	;# 
  1443  0E94                     	;# 
  1444  0E95                     	;# 
  1445  0E96                     	;# 
  1446  0E97                     	;# 
  1447  0E98                     	;# 
  1448  0E99                     	;# 
  1449  0E9A                     	;# 
  1450  0E9B                     	;# 
  1451  0E9C                     	;# 
  1452  0E9D                     	;# 
  1453  0E9E                     	;# 
  1454  0E9F                     	;# 
  1455  0FE4                     	;# 
  1456  0FE5                     	;# 
  1457  0FE6                     	;# 
  1458  0FE7                     	;# 
  1459  0FE8                     	;# 
  1460  0FE9                     	;# 
  1461  0FEA                     	;# 
  1462  0FEB                     	;# 
  1463  0FED                     	;# 
  1464  0FEE                     	;# 
  1465  0FEF                     	;# 
  1466  0000                     	;# 
  1467  0001                     	;# 
  1468  0002                     	;# 
  1469  0003                     	;# 
  1470  0004                     	;# 
  1471  0005                     	;# 
  1472  0006                     	;# 
  1473  0007                     	;# 
  1474  0008                     	;# 
  1475  0009                     	;# 
  1476  000A                     	;# 
  1477  000B                     	;# 
  1478  000C                     	;# 
  1479  000E                     	;# 
  1480  0011                     	;# 
  1481  0012                     	;# 
  1482  0015                     	;# 
  1483  0016                     	;# 
  1484  0016                     	;# 
  1485  0017                     	;# 
  1486  0018                     	;# 
  1487  0019                     	;# 
  1488  001A                     	;# 
  1489  001B                     	;# 
  1490  001C                     	;# 
  1491  008C                     	;# 
  1492  008E                     	;# 
  1493  0091                     	;# 
  1494  0092                     	;# 
  1495  0095                     	;# 
  1496  0096                     	;# 
  1497  0097                     	;# 
  1498  0098                     	;# 
  1499  0099                     	;# 
  1500  009A                     	;# 
  1501  009B                     	;# 
  1502  009B                     	;# 
  1503  009C                     	;# 
  1504  009D                     	;# 
  1505  009E                     	;# 
  1506  009F                     	;# 
  1507  010C                     	;# 
  1508  010E                     	;# 
  1509  0111                     	;# 
  1510  0112                     	;# 
  1511  0113                     	;# 
  1512  0114                     	;# 
  1513  0115                     	;# 
  1514  0116                     	;# 
  1515  0117                     	;# 
  1516  0118                     	;# 
  1517  0119                     	;# 
  1518  011D                     	;# 
  1519  018C                     	;# 
  1520  018E                     	;# 
  1521  0191                     	;# 
  1522  0191                     	;# 
  1523  0192                     	;# 
  1524  0193                     	;# 
  1525  0193                     	;# 
  1526  0194                     	;# 
  1527  0195                     	;# 
  1528  0196                     	;# 
  1529  0197                     	;# 
  1530  0199                     	;# 
  1531  019A                     	;# 
  1532  019B                     	;# 
  1533  019B                     	;# 
  1534  019C                     	;# 
  1535  019D                     	;# 
  1536  019E                     	;# 
  1537  019F                     	;# 
  1538  020C                     	;# 
  1539  0211                     	;# 
  1540  0211                     	;# 
  1541  0212                     	;# 
  1542  0212                     	;# 
  1543  0213                     	;# 
  1544  0213                     	;# 
  1545  0214                     	;# 
  1546  0214                     	;# 
  1547  0215                     	;# 
  1548  0215                     	;# 
  1549  0215                     	;# 
  1550  0216                     	;# 
  1551  0216                     	;# 
  1552  0217                     	;# 
  1553  0217                     	;# 
  1554  0391                     	;# 
  1555  0392                     	;# 
  1556  0393                     	;# 
  1557  039A                     	;# 
  1558  039B                     	;# 
  1559  0611                     	;# 
  1560  0612                     	;# 
  1561  0613                     	;# 
  1562  0613                     	;# 
  1563  0614                     	;# 
  1564  0615                     	;# 
  1565  0616                     	;# 
  1566  0616                     	;# 
  1567  0691                     	;# 
  1568  0692                     	;# 
  1569  0693                     	;# 
  1570  0694                     	;# 
  1571  0695                     	;# 
  1572  0E8E                     	;# 
  1573  0E8F                     	;# 
  1574  0E90                     	;# 
  1575  0E91                     	;# 
  1576  0E92                     	;# 
  1577  0E93                     	;# 
  1578  0E94                     	;# 
  1579  0E94                     	;# 
  1580  0E95                     	;# 
  1581  0E96                     	;# 
  1582  0E97                     	;# 
  1583  0E98                     	;# 
  1584  0E99                     	;# 
  1585  0E9A                     	;# 
  1586  0E9B                     	;# 
  1587  0E9C                     	;# 
  1588  0E9D                     	;# 
  1589  0E9E                     	;# 
  1590  0E9F                     	;# 
  1591  0FE4                     	;# 
  1592  0FE5                     	;# 
  1593  0FE6                     	;# 
  1594  0FE7                     	;# 
  1595  0FE8                     	;# 
  1596  0FE9                     	;# 
  1597  0FEA                     	;# 
  1598  0FEB                     	;# 
  1599  0FED                     	;# 
  1600  0FEE                     	;# 
  1601  0FEF                     	;# 
  1602                           
  1603 ;; Function _I2C_SlaveDefWrColInterruptHandler is unused but had its address taken
  1604  0000                     
  1605                           	psect	nvBANK0
  1606  003E                     __pnvBANK0:
  1607  003E                     _TMR1_InterruptHandler:
  1608  003E                     	ds	2
  1609  0040                     _timer1ReloadVal:
  1610  0040                     	ds	2
  1611  001C                     _T2CON	set	28
  1612  001A                     _TMR2	set	26
  1613  001B                     _PR2	set	27
  1614  0018                     _T1CONbits	set	24
  1615  0018                     _T1CON	set	24
  1616  0016                     _TMR1L	set	22
  1617  0017                     _TMR1H	set	23
  1618  0019                     _T1GCON	set	25
  1619  0012                     _PIR2bits	set	18
  1620  000B                     _INTCONbits	set	11
  1621  0011                     _PIR1bits	set	17
  1622  0095                     _OPTION_REGbits	set	149
  1623  008E                     _TRISC	set	142
  1624  008C                     _TRISA	set	140
  1625  0092                     _PIE2bits	set	146
  1626  0097                     _WDTCON	set	151
  1627  0098                     _OSCTUNE	set	152
  1628  0099                     _OSCCON	set	153
  1629  0091                     _PIE1bits	set	145
  1630  009D                     _ADCON0bits	set	157
  1631  009D                     _ADCON0	set	157
  1632  009C                     _ADRESH	set	156
  1633  009B                     _ADRESL	set	155
  1634  009F                     _ADCON2	set	159
  1635  009E                     _ADCON1	set	158
  1636  011D                     _APFCON	set	285
  1637  010E                     _LATC	set	270
  1638  010C                     _LATA	set	268
  1639  0116                     _BORCON	set	278
  1640  018C                     _ANSELA	set	396
  1641  018E                     _ANSELC	set	398
  1642  020C                     _WPUA	set	524
  1643  0211                     _SSP1BUF	set	529
  1644  0214                     _SSP1STATbits	set	532
  1645  0213                     _SSP1MSK	set	531
  1646  0212                     _SSP1ADD	set	530
  1647  0215                     _SSP1CON1bits	set	533
  1648  0216                     _SSP1CON2	set	534
  1649  0215                     _SSP1CON1	set	533
  1650  0214                     _SSP1STAT	set	532
  1651  039B                     _ACTCON	set	923
  1652  0614                     _PWM2DCL	set	1556
  1653  0615                     _PWM2DCH	set	1557
  1654  0616                     _PWM2CON	set	1558
  1655  0611                     _PWM1DCL	set	1553
  1656  0612                     _PWM1DCH	set	1554
  1657  0613                     _PWM1CON	set	1555
  1658                           
  1659                           	psect	cinit
  1660  0037                     start_initialization:	
  1661                           ; #config settings
  1662                           
  1663  0037                     __initialization:
  1664                           
  1665                           ; Clear objects allocated to COMMON
  1666  0037  01F6               	clrf	__pbssCOMMON& (0+127)
  1667  0038  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1668  0039  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1669  003A  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  1670                           
  1671                           ; Clear objects allocated to BANK0
  1672  003B  3020               	movlw	low __pbssBANK0
  1673  003C  0084               	movwf	4
  1674  003D  3000               	movlw	high __pbssBANK0
  1675  003E  0085               	movwf	5
  1676  003F  3018               	movlw	24
  1677  0040  3183  2303  3180   	fcall	clear_ram0
  1678  0043                     end_of_initialization:	
  1679                           ;End of C runtime variable initialization code
  1680                           
  1681  0043                     __end_of__initialization:
  1682  0043  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1683  0044  0020               	movlb	0
  1684  0045  3181  2951         	ljmp	_main	;jump to C main() function
  1685                           
  1686                           	psect	bssCOMMON
  1687  0076                     __pbssCOMMON:
  1688  0076                     _flag_tmr1:
  1689  0076                     	ds	1
  1690  0077                     _master_read_data:
  1691  0077                     	ds	1
  1692  0078                     _i2cSlaveState:
  1693  0078                     	ds	1
  1694  0079                     _i2cWrData:
  1695  0079                     	ds	1
  1696                           
  1697                           	psect	bssBANK0
  1698  0020                     __pbssBANK0:
  1699  0020                     _d1:
  1700  0020                     	ds	5
  1701  0025                     _I2C_SlaveWrColInterruptHandler:
  1702  0025                     	ds	2
  1703  0027                     _I2C_SlaveBusColInterruptHandler:
  1704  0027                     	ds	2
  1705  0029                     _I2C_SlaveAddrInterruptHandler:
  1706  0029                     	ds	2
  1707  002B                     _I2C_SlaveWrInterruptHandler:
  1708  002B                     	ds	2
  1709  002D                     _I2C_SlaveRdInterruptHandler:
  1710  002D                     	ds	2
  1711  002F                     _MSSP_InterruptHandler:
  1712  002F                     	ds	2
  1713  0031                     _write_reg:
  1714  0031                     	ds	1
  1715  0032                     _flag_i2c_data:
  1716  0032                     	ds	1
  1717  0033                     _flag_i2c_reg:
  1718  0033                     	ds	1
  1719  0034                     _RegParaEscribir:
  1720  0034                     	ds	1
  1721  0035                     _datoParaLeer:
  1722  0035                     	ds	1
  1723  0036                     _i2cSlaveAddr:
  1724  0036                     	ds	1
  1725  0037                     _i2cRdData:
  1726  0037                     	ds	1
  1727                           
  1728                           	psect	clrtext
  1729  0303                     clear_ram0:	
  1730                           ;	Called with FSR0 containing the base address, and
  1731                           ;	WREG with the size to clear
  1732                           
  1733  0303  0064               	clrwdt	;clear the watchdog before getting into this loop
  1734  0304                     clrloop0:
  1735  0304  0180               	clrf	0	;clear RAM location pointed to by FSR
  1736  0305  3101               	addfsr 0,1
  1737  0306  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1738  0307  2B04               	goto	clrloop0	;have we reached the end yet?
  1739  0308  3400               	retlw	0	;all done for this memory range, return
  1740                           
  1741                           	psect	cstackCOMMON
  1742  0070                     __pcstackCOMMON:
  1743  0070                     ?_I2C_SlaveOpen:
  1744  0070                     ?_I2C_SlaveSetSlaveAddr:	
  1745                           ; 1 bytes @ 0x0
  1746                           
  1747  0070                     ?_I2C_SlaveSetSlaveMask:	
  1748                           ; 1 bytes @ 0x0
  1749                           
  1750  0070                     ?_I2C_Isr:	
  1751                           ; 1 bytes @ 0x0
  1752                           
  1753  0070                     ?_I2C_SlaveDefWrInterruptHandler:	
  1754                           ; 1 bytes @ 0x0
  1755                           
  1756  0070                     ?_I2C_SlaveDefRdInterruptHandler:	
  1757                           ; 1 bytes @ 0x0
  1758                           
  1759  0070                     ??_I2C_SlaveDefRdInterruptHandler:	
  1760                           ; 1 bytes @ 0x0
  1761                           
  1762  0070                     ?_I2C_SlaveDefAddrInterruptHandler:	
  1763                           ; 1 bytes @ 0x0
  1764                           
  1765  0070                     ??_I2C_SlaveDefAddrInterruptHandler:	
  1766                           ; 1 bytes @ 0x0
  1767                           
  1768  0070                     ?_I2C_SlaveEnableIrq:	
  1769                           ; 1 bytes @ 0x0
  1770                           
  1771  0070                     ?_I2C_SlaveClearIrq:	
  1772                           ; 1 bytes @ 0x0
  1773                           
  1774  0070                     ??_I2C_SlaveClearIrq:	
  1775                           ; 1 bytes @ 0x0
  1776                           
  1777  0070                     ?_I2C_SlaveIsAddr:	
  1778                           ; 1 bytes @ 0x0
  1779                           
  1780  0070                     ??_I2C_SlaveIsAddr:	
  1781                           ; 1 bytes @ 0x0
  1782                           
  1783  0070                     ?_I2C_SlaveIsRead:	
  1784                           ; 1 bytes @ 0x0
  1785                           
  1786  0070                     ??_I2C_SlaveIsRead:	
  1787                           ; 1 bytes @ 0x0
  1788                           
  1789  0070                     ?_I2C_SlaveAddrCallBack:	
  1790                           ; 1 bytes @ 0x0
  1791                           
  1792  0070                     ?_I2C_SlaveIsTxBufEmpty:	
  1793                           ; 1 bytes @ 0x0
  1794                           
  1795  0070                     ??_I2C_SlaveIsTxBufEmpty:	
  1796                           ; 1 bytes @ 0x0
  1797                           
  1798  0070                     ?_I2C_SlaveWrCallBack:	
  1799                           ; 1 bytes @ 0x0
  1800                           
  1801  0070                     ?_I2C_SlaveIsRxBufFull:	
  1802                           ; 1 bytes @ 0x0
  1803                           
  1804  0070                     ??_I2C_SlaveIsRxBufFull:	
  1805                           ; 1 bytes @ 0x0
  1806                           
  1807  0070                     ?_I2C_reg_Slave_InterruptHandler:	
  1808                           ; 1 bytes @ 0x0
  1809                           
  1810  0070                     ??_I2C_reg_Slave_InterruptHandler:	
  1811                           ; 1 bytes @ 0x0
  1812                           
  1813  0070                     ?_I2C_SlaveGetRxData:	
  1814                           ; 1 bytes @ 0x0
  1815                           
  1816  0070                     ??_I2C_SlaveGetRxData:	
  1817                           ; 1 bytes @ 0x0
  1818                           
  1819  0070                     ?_I2C_SlaveRdCallBack:	
  1820                           ; 1 bytes @ 0x0
  1821                           
  1822  0070                     ?_I2C_SlaveReleaseClock:	
  1823                           ; 1 bytes @ 0x0
  1824                           
  1825  0070                     ??_I2C_SlaveReleaseClock:	
  1826                           ; 1 bytes @ 0x0
  1827                           
  1828  0070                     ?_Get_Data_to_master:	
  1829                           ; 1 bytes @ 0x0
  1830                           
  1831  0070                     ??_Get_Data_to_master:	
  1832                           ; 1 bytes @ 0x0
  1833                           
  1834  0070                     ?_I2C_SlaveSendTxData:	
  1835                           ; 1 bytes @ 0x0
  1836                           
  1837  0070                     ??_I2C_SlaveSendTxData:	
  1838                           ; 1 bytes @ 0x0
  1839                           
  1840  0070                     ?_Datos_Initialize:	
  1841                           ; 1 bytes @ 0x0
  1842                           
  1843  0070                     ?_PIN_MANAGER_Initialize:	
  1844                           ; 1 bytes @ 0x0
  1845                           
  1846  0070                     ?_OSCILLATOR_Initialize:	
  1847                           ; 1 bytes @ 0x0
  1848                           
  1849  0070                     ?_WDT_Initialize:	
  1850                           ; 1 bytes @ 0x0
  1851                           
  1852  0070                     ?_PWM1_Initialize:	
  1853                           ; 1 bytes @ 0x0
  1854                           
  1855  0070                     ?_PWM2_Initialize:	
  1856                           ; 1 bytes @ 0x0
  1857                           
  1858  0070                     ?_TMR2_Initialize:	
  1859                           ; 1 bytes @ 0x0
  1860                           
  1861  0070                     ?_TMR1_Initialize:	
  1862                           ; 1 bytes @ 0x0
  1863                           
  1864  0070                     ?_TMR1_ISR:	
  1865                           ; 1 bytes @ 0x0
  1866                           
  1867  0070                     ?_Get_TMR1_flag:	
  1868                           ; 1 bytes @ 0x0
  1869                           
  1870  0070                     ?_Read_Ldr:	
  1871                           ; 1 bytes @ 0x0
  1872                           
  1873  0070                     ?_Clear_TMR1_flag:	
  1874                           ; 1 bytes @ 0x0
  1875                           
  1876  0070                     ?_Get_I2C_reg_flag:	
  1877                           ; 1 bytes @ 0x0
  1878                           
  1879  0070                     ?_I2C_Read_Write:	
  1880                           ; 1 bytes @ 0x0
  1881                           
  1882  0070                     ?_Get_I2C_reg:	
  1883                           ; 1 bytes @ 0x0
  1884                           
  1885  0070                     ?_Clear_I2C_reg_flag:	
  1886                           ; 1 bytes @ 0x0
  1887                           
  1888  0070                     ?_TMR1_Slave_InterruptHandler:	
  1889                           ; 1 bytes @ 0x0
  1890                           
  1891  0070                     ??_TMR1_Slave_InterruptHandler:	
  1892                           ; 1 bytes @ 0x0
  1893                           
  1894  0070                     ?_ADC_Initialize:	
  1895                           ; 1 bytes @ 0x0
  1896                           
  1897  0070                     ?_I2C_Initialize:	
  1898                           ; 1 bytes @ 0x0
  1899                           
  1900  0070                     ?_I2C_Open:	
  1901                           ; 1 bytes @ 0x0
  1902                           
  1903  0070                     ?_Data_to_master:	
  1904                           ; 1 bytes @ 0x0
  1905                           
  1906  0070                     ?_SYSTEM_Initialize:	
  1907                           ; 1 bytes @ 0x0
  1908                           
  1909  0070                     ?_INTERRUPT_InterruptManager:	
  1910                           ; 1 bytes @ 0x0
  1911                           
  1912  0070                     ?_main:	
  1913                           ; 1 bytes @ 0x0
  1914                           
  1915  0070                     ?_TMR1_WriteTimer:	
  1916                           ; 1 bytes @ 0x0
  1917                           
  1918  0070                     ?_I2C_data_slave_flag:	
  1919                           ; 1 bytes @ 0x0
  1920                           
  1921  0070                     ?_Get_I2C_data_flag:	
  1922                           ; 1 bytes @ 0x0
  1923                           
  1924  0070                     ?_Clear_I2C_data_flag:	
  1925                           ; 1 bytes @ 0x0
  1926                           
  1927  0070                     I2C_SlaveSendTxData@data:	
  1928                           ; 1 bytes @ 0x0
  1929                           
  1930  0070                     TMR1_WriteTimer@timerVal:	
  1931                           ; 1 bytes @ 0x0
  1932                           
  1933                           
  1934                           ; 2 bytes @ 0x0
  1935  0070                     	ds	1
  1936  0071                     ??_I2C_SlaveDefWrInterruptHandler:
  1937  0071                     ??_I2C_SlaveAddrCallBack:	
  1938                           ; 1 bytes @ 0x1
  1939                           
  1940  0071                     ??_I2C_SlaveRdCallBack:	
  1941                           ; 1 bytes @ 0x1
  1942                           
  1943  0071                     I2C_reg_Slave_InterruptHandler@reg:	
  1944                           ; 1 bytes @ 0x1
  1945                           
  1946                           
  1947                           ; 1 bytes @ 0x1
  1948  0071                     	ds	1
  1949  0072                     ??_I2C_Isr:
  1950  0072                     ??_I2C_SlaveWrCallBack:	
  1951                           ; 1 bytes @ 0x2
  1952                           
  1953  0072                     ??_TMR1_ISR:	
  1954                           ; 1 bytes @ 0x2
  1955                           
  1956  0072                     ??_TMR1_WriteTimer:	
  1957                           ; 1 bytes @ 0x2
  1958                           
  1959                           
  1960                           ; 1 bytes @ 0x2
  1961  0072                     	ds	2
  1962  0074                     ??_I2C_SlaveOpen:
  1963  0074                     ??_I2C_SlaveSetSlaveAddr:	
  1964                           ; 1 bytes @ 0x4
  1965                           
  1966  0074                     ??_I2C_SlaveSetSlaveMask:	
  1967                           ; 1 bytes @ 0x4
  1968                           
  1969  0074                     ?_I2C_SlaveSetIsrHandler:	
  1970                           ; 1 bytes @ 0x4
  1971                           
  1972  0074                     ?_I2C_SlaveSetWriteIntHandler:	
  1973                           ; 1 bytes @ 0x4
  1974                           
  1975  0074                     ?_I2C_SlaveSetReadIntHandler:	
  1976                           ; 1 bytes @ 0x4
  1977                           
  1978  0074                     ?_I2C_SlaveSetAddrIntHandler:	
  1979                           ; 1 bytes @ 0x4
  1980                           
  1981  0074                     ?_I2C_SlaveSetWrColIntHandler:	
  1982                           ; 1 bytes @ 0x4
  1983                           
  1984  0074                     ??_I2C_SlaveEnableIrq:	
  1985                           ; 1 bytes @ 0x4
  1986                           
  1987  0074                     ??_Datos_Initialize:	
  1988                           ; 1 bytes @ 0x4
  1989                           
  1990  0074                     ??_PIN_MANAGER_Initialize:	
  1991                           ; 1 bytes @ 0x4
  1992                           
  1993  0074                     ??_OSCILLATOR_Initialize:	
  1994                           ; 1 bytes @ 0x4
  1995                           
  1996  0074                     ??_WDT_Initialize:	
  1997                           ; 1 bytes @ 0x4
  1998                           
  1999  0074                     ??_PWM1_Initialize:	
  2000                           ; 1 bytes @ 0x4
  2001                           
  2002  0074                     ??_PWM2_Initialize:	
  2003                           ; 1 bytes @ 0x4
  2004                           
  2005  0074                     ??_TMR2_Initialize:	
  2006                           ; 1 bytes @ 0x4
  2007                           
  2008  0074                     ??_Get_TMR1_flag:	
  2009                           ; 1 bytes @ 0x4
  2010                           
  2011  0074                     ??_Clear_TMR1_flag:	
  2012                           ; 1 bytes @ 0x4
  2013                           
  2014  0074                     ??_Get_I2C_reg_flag:	
  2015                           ; 1 bytes @ 0x4
  2016                           
  2017  0074                     ??_Get_I2C_reg:	
  2018                           ; 1 bytes @ 0x4
  2019                           
  2020  0074                     ??_Clear_I2C_reg_flag:	
  2021                           ; 1 bytes @ 0x4
  2022                           
  2023  0074                     ?_TMR1_SetInterruptHandler:	
  2024                           ; 1 bytes @ 0x4
  2025                           
  2026  0074                     ??_ADC_Initialize:	
  2027                           ; 1 bytes @ 0x4
  2028                           
  2029  0074                     ??_I2C_Initialize:	
  2030                           ; 1 bytes @ 0x4
  2031                           
  2032  0074                     ??_Data_to_master:	
  2033                           ; 1 bytes @ 0x4
  2034                           
  2035  0074                     ??_INTERRUPT_InterruptManager:	
  2036                           ; 1 bytes @ 0x4
  2037                           
  2038  0074                     ?_PWM1_LoadDutyValue:	
  2039                           ; 1 bytes @ 0x4
  2040                           
  2041  0074                     ?_PWM2_LoadDutyValue:	
  2042                           ; 1 bytes @ 0x4
  2043                           
  2044  0074                     ??_I2C_data_slave_flag:	
  2045                           ; 1 bytes @ 0x4
  2046                           
  2047  0074                     ??_Get_I2C_data_flag:	
  2048                           ; 1 bytes @ 0x4
  2049                           
  2050  0074                     ??_Clear_I2C_data_flag:	
  2051                           ; 1 bytes @ 0x4
  2052                           
  2053  0074                     ?_ADC_GetConversion:	
  2054                           ; 1 bytes @ 0x4
  2055                           
  2056  0074                     I2C_SlaveSetSlaveAddr@slaveAddr:	
  2057                           ; 2 bytes @ 0x4
  2058                           
  2059  0074                     I2C_SlaveSetSlaveMask@maskAddr:	
  2060                           ; 1 bytes @ 0x4
  2061                           
  2062  0074                     I2C_SlaveSetIsrHandler@handler:	
  2063                           ; 1 bytes @ 0x4
  2064                           
  2065  0074                     I2C_SlaveSetReadIntHandler@handler:	
  2066                           ; 2 bytes @ 0x4
  2067                           
  2068  0074                     I2C_SlaveSetWriteIntHandler@handler:	
  2069                           ; 2 bytes @ 0x4
  2070                           
  2071  0074                     I2C_SlaveSetAddrIntHandler@handler:	
  2072                           ; 2 bytes @ 0x4
  2073                           
  2074  0074                     I2C_SlaveSetWrColIntHandler@handler:	
  2075                           ; 2 bytes @ 0x4
  2076                           
  2077  0074                     PWM1_LoadDutyValue@dutyValue:	
  2078                           ; 2 bytes @ 0x4
  2079                           
  2080  0074                     PWM2_LoadDutyValue@dutyValue:	
  2081                           ; 2 bytes @ 0x4
  2082                           
  2083  0074                     TMR1_SetInterruptHandler@InterruptHandler:	
  2084                           ; 2 bytes @ 0x4
  2085                           
  2086                           
  2087                           ; 2 bytes @ 0x4
  2088  0074                     	ds	1
  2089  0075                     Data_to_master@i2c_wr_data:
  2090                           
  2091                           ; 1 bytes @ 0x5
  2092  0075                     	ds	1
  2093  0076                     ??_I2C_SlaveSetIsrHandler:
  2094  0076                     ??_I2C_SlaveSetWriteIntHandler:	
  2095                           ; 1 bytes @ 0x6
  2096                           
  2097  0076                     ??_I2C_SlaveSetReadIntHandler:	
  2098                           ; 1 bytes @ 0x6
  2099                           
  2100  0076                     ??_I2C_SlaveSetAddrIntHandler:	
  2101                           ; 1 bytes @ 0x6
  2102                           
  2103  0076                     ??_I2C_SlaveSetWrColIntHandler:	
  2104                           ; 1 bytes @ 0x6
  2105                           
  2106  0076                     ??_TMR1_Initialize:	
  2107                           ; 1 bytes @ 0x6
  2108                           
  2109  0076                     ??_TMR1_SetInterruptHandler:	
  2110                           ; 1 bytes @ 0x6
  2111                           
  2112  0076                     ??_I2C_Open:	
  2113                           ; 1 bytes @ 0x6
  2114                           
  2115  0076                     ??_SYSTEM_Initialize:	
  2116                           ; 1 bytes @ 0x6
  2117                           
  2118  0076                     ??_main:	
  2119                           ; 1 bytes @ 0x6
  2120                           
  2121                           
  2122                           	psect	cstackBANK0
  2123  0038                     __pcstackBANK0:	
  2124                           ; 1 bytes @ 0x6
  2125                           
  2126  0038                     ??_ADC_GetConversion:
  2127  0038                     ??_PWM1_LoadDutyValue:	
  2128                           ; 1 bytes @ 0x0
  2129                           
  2130  0038                     ??_PWM2_LoadDutyValue:	
  2131                           ; 1 bytes @ 0x0
  2132                           
  2133                           
  2134                           ; 1 bytes @ 0x0
  2135  0038                     	ds	1
  2136  0039                     ADC_GetConversion@channel:
  2137                           
  2138                           ; 1 bytes @ 0x1
  2139  0039                     	ds	1
  2140  003A                     ??_Read_Ldr:
  2141  003A                     ??_I2C_Read_Write:	
  2142                           ; 1 bytes @ 0x2
  2143                           
  2144                           
  2145                           ; 1 bytes @ 0x2
  2146  003A                     	ds	2
  2147  003C                     I2C_Read_Write@data:
  2148                           
  2149                           ; 1 bytes @ 0x4
  2150  003C                     	ds	1
  2151  003D                     I2C_Read_Write@i2c_WrData:
  2152                           
  2153                           ; 1 bytes @ 0x5
  2154  003D                     	ds	1
  2155                           
  2156                           	psect	maintext
  2157  0151                     __pmaintext:	
  2158 ;;
  2159 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2160 ;;
  2161 ;; *************** function _main *****************
  2162 ;; Defined at:
  2163 ;;		line 13 in file "../src/main.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;		None
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;		None
  2168 ;; Return value:  Size  Location     Type
  2169 ;;                  1    wreg      void 
  2170 ;; Registers used:
  2171 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2172 ;; Tracked objects:
  2173 ;;		On entry : B1F/0
  2174 ;;		On exit  : 0/0
  2175 ;;		Unchanged: 0/0
  2176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2181 ;;Total ram usage:        0 bytes
  2182 ;; Hardware stack levels required when called:    8
  2183 ;; This function calls:
  2184 ;;		_Clear_I2C_reg_flag
  2185 ;;		_Clear_TMR1_flag
  2186 ;;		_Get_I2C_reg
  2187 ;;		_Get_I2C_reg_flag
  2188 ;;		_Get_TMR1_flag
  2189 ;;		_I2C_Open
  2190 ;;		_I2C_Read_Write
  2191 ;;		_Read_Ldr
  2192 ;;		_SYSTEM_Initialize
  2193 ;; This function is called by:
  2194 ;;		Startup code after reset
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           
  2199                           ;psect for function _main
  2200  0151                     _main:
  2201  0151                     l1839:	
  2202                           ;incstack = 0
  2203                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2204                           
  2205                           
  2206                           ;../src/main.c: 16:     SYSTEM_Initialize();
  2207  0151  3181  219C  3181   	fcall	_SYSTEM_Initialize
  2208  0154                     l1841:
  2209                           
  2210                           ;../src/main.c: 19:     (INTCONbits.GIE = 1);
  2211  0154  178B               	bsf	11,7	;volatile
  2212  0155                     l1843:
  2213                           
  2214                           ;../src/main.c: 22:     (INTCONbits.PEIE = 1);
  2215  0155  170B               	bsf	11,6	;volatile
  2216                           
  2217                           ;../src/main.c: 24:     I2C_Open();
  2218  0156  3181  211F  3181   	fcall	_I2C_Open
  2219  0159                     l1845:
  2220                           
  2221                           ;../src/main.c: 27:     {;../src/main.c: 28:         if (Get_TMR1_flag())
  2222  0159  3183  2371  3181   	fcall	_Get_TMR1_flag
  2223  015C  3A00               	xorlw	0
  2224  015D  1903               	skipnz
  2225  015E  2960               	goto	u541
  2226  015F  2961               	goto	u540
  2227  0160                     u541:
  2228  0160  2967               	goto	l1851
  2229  0161                     u540:
  2230  0161                     l1847:
  2231                           
  2232                           ;../src/main.c: 29:         {;../src/main.c: 30:           Read_Ldr();
  2233  0161  3181  217B  3181   	fcall	_Read_Ldr
  2234  0164                     l1849:
  2235                           
  2236                           ;../src/main.c: 31:           Clear_TMR1_flag();
  2237  0164  3183  2373  3181   	fcall	_Clear_TMR1_flag
  2238  0167                     l1851:
  2239                           
  2240                           ;../src/main.c: 33:         if (Get_I2C_reg_flag())
  2241  0167  3183  235C  3181   	fcall	_Get_I2C_reg_flag
  2242  016A  3A00               	xorlw	0
  2243  016B  1903               	skipnz
  2244  016C  296E               	goto	u551
  2245  016D  296F               	goto	u550
  2246  016E                     u551:
  2247  016E  2959               	goto	l1845
  2248  016F                     u550:
  2249  016F                     l1853:
  2250                           
  2251                           ;../src/main.c: 34:         {;../src/main.c: 35:             I2C_Read_Write(Get_I2C_reg(
      +                          ));
  2252  016F  3183  235F  3181   	fcall	_Get_I2C_reg
  2253  0172  3180  20BE  3181   	fcall	_I2C_Read_Write
  2254  0175                     l1855:
  2255                           
  2256                           ;../src/main.c: 36:             Clear_I2C_reg_flag();
  2257  0175  3183  2362  3181   	fcall	_Clear_I2C_reg_flag
  2258  0178  2959               	goto	l1845
  2259  0179  3180  2835         	ljmp	start
  2260  017B                     __end_of_main:
  2261                           
  2262                           	psect	text1
  2263  019C                     __ptext1:	
  2264 ;; *************** function _SYSTEM_Initialize *****************
  2265 ;; Defined at:
  2266 ;;		line 4 in file "../src/init.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;		None
  2269 ;; Auto vars:     Size  Location     Type
  2270 ;;		None
  2271 ;; Return value:  Size  Location     Type
  2272 ;;                  1    wreg      void 
  2273 ;; Registers used:
  2274 ;;		wreg, status,2, status,0, pclath, cstack
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2284 ;;Total ram usage:        0 bytes
  2285 ;; Hardware stack levels used:    1
  2286 ;; Hardware stack levels required when called:    7
  2287 ;; This function calls:
  2288 ;;		_ADC_Initialize
  2289 ;;		_Datos_Initialize
  2290 ;;		_I2C_Initialize
  2291 ;;		_OSCILLATOR_Initialize
  2292 ;;		_PIN_MANAGER_Initialize
  2293 ;;		_PWM1_Initialize
  2294 ;;		_PWM2_Initialize
  2295 ;;		_TMR1_Initialize
  2296 ;;		_TMR2_Initialize
  2297 ;;		_WDT_Initialize
  2298 ;; This function is called by:
  2299 ;;		_main
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           
  2304                           ;psect for function _SYSTEM_Initialize
  2305  019C                     _SYSTEM_Initialize:
  2306  019C                     l1649:	
  2307                           ;incstack = 0
  2308                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2309                           
  2310                           
  2311                           ;../src/init.c: 6:     I2C_Initialize();
  2312  019C  3182  22B2  3181   	fcall	_I2C_Initialize
  2313                           
  2314                           ;../src/init.c: 7:     Datos_Initialize();
  2315  019F  3182  225C  3181   	fcall	_Datos_Initialize
  2316                           
  2317                           ;../src/init.c: 8:     PIN_MANAGER_Initialize();
  2318  01A2  3182  2236  3181   	fcall	_PIN_MANAGER_Initialize
  2319                           
  2320                           ;../src/init.c: 9:     OSCILLATOR_Initialize();
  2321  01A5  3182  22A9  3181   	fcall	_OSCILLATOR_Initialize
  2322                           
  2323                           ;../src/init.c: 10:     WDT_Initialize();
  2324  01A8  3183  2347  3181   	fcall	_WDT_Initialize
  2325                           
  2326                           ;../src/init.c: 11:     PWM1_Initialize();
  2327  01AB  3182  22DD  3181   	fcall	_PWM1_Initialize
  2328                           
  2329                           ;../src/init.c: 12:     PWM2_Initialize();
  2330  01AE  3182  22D5  3181   	fcall	_PWM2_Initialize
  2331                           
  2332                           ;../src/init.c: 13:     ADC_Initialize();
  2333  01B1  3182  22BB  3181   	fcall	_ADC_Initialize
  2334                           
  2335                           ;../src/init.c: 14:     TMR2_Initialize();
  2336  01B4  3182  22CD  3181   	fcall	_TMR2_Initialize
  2337                           
  2338                           ;../src/init.c: 15:     TMR1_Initialize();
  2339  01B7  3182  2208  3181   	fcall	_TMR1_Initialize
  2340  01BA                     l275:
  2341  01BA  0008               	return
  2342  01BB                     __end_of_SYSTEM_Initialize:
  2343                           
  2344                           	psect	text2
  2345  0347                     __ptext2:	
  2346 ;; *************** function _WDT_Initialize *****************
  2347 ;; Defined at:
  2348 ;;		line 30 in file "../src/init.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;		None
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;		None
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  1    wreg      void 
  2355 ;; Registers used:
  2356 ;;		wreg
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2366 ;;Total ram usage:        0 bytes
  2367 ;; Hardware stack levels used:    1
  2368 ;; Hardware stack levels required when called:    5
  2369 ;; This function calls:
  2370 ;;		Nothing
  2371 ;; This function is called by:
  2372 ;;		_SYSTEM_Initialize
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376                           
  2377                           ;psect for function _WDT_Initialize
  2378  0347                     _WDT_Initialize:
  2379  0347                     l1231:	
  2380                           ;incstack = 0
  2381                           ; Regs used in _WDT_Initialize: [wreg]
  2382                           
  2383                           
  2384                           ;../src/init.c: 33:     WDTCON = 0x16;
  2385  0347  3016               	movlw	22
  2386  0348  0021               	movlb	1	; select bank1
  2387  0349  0097               	movwf	23	;volatile
  2388  034A                     l281:
  2389  034A  0008               	return
  2390  034B                     __end_of_WDT_Initialize:
  2391                           
  2392                           	psect	text3
  2393  02CD                     __ptext3:	
  2394 ;; *************** function _TMR2_Initialize *****************
  2395 ;; Defined at:
  2396 ;;		line 4 in file "../src/tmr2.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;		None
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;		None
  2401 ;; Return value:  Size  Location     Type
  2402 ;;                  1    wreg      void 
  2403 ;; Registers used:
  2404 ;;		wreg, status,2
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2414 ;;Total ram usage:        0 bytes
  2415 ;; Hardware stack levels used:    1
  2416 ;; Hardware stack levels required when called:    5
  2417 ;; This function calls:
  2418 ;;		Nothing
  2419 ;; This function is called by:
  2420 ;;		_SYSTEM_Initialize
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           
  2425                           ;psect for function _TMR2_Initialize
  2426  02CD                     _TMR2_Initialize:
  2427  02CD                     l1237:	
  2428                           ;incstack = 0
  2429                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  2430                           
  2431                           
  2432                           ;../src/tmr2.c: 7:     PR2 = 0x9B;
  2433  02CD  309B               	movlw	155
  2434  02CE  0020               	movlb	0	; select bank0
  2435  02CF  009B               	movwf	27	;volatile
  2436  02D0                     l1239:
  2437                           
  2438                           ;../src/tmr2.c: 10:     TMR2 = 0x00;
  2439  02D0  019A               	clrf	26	;volatile
  2440  02D1                     l1241:
  2441                           
  2442                           ;../src/tmr2.c: 13:     PIR1bits.TMR2IF = 0;
  2443  02D1  1091               	bcf	17,1	;volatile
  2444  02D2                     l1243:
  2445                           
  2446                           ;../src/tmr2.c: 16:     T2CON = 0x07;
  2447  02D2  3007               	movlw	7
  2448  02D3  009C               	movwf	28	;volatile
  2449  02D4                     l477:
  2450  02D4  0008               	return
  2451  02D5                     __end_of_TMR2_Initialize:
  2452                           
  2453                           	psect	text4
  2454  0208                     __ptext4:	
  2455 ;; *************** function _TMR1_Initialize *****************
  2456 ;; Defined at:
  2457 ;;		line 8 in file "../src/tmr1.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;		None
  2460 ;; Auto vars:     Size  Location     Type
  2461 ;;		None
  2462 ;; Return value:  Size  Location     Type
  2463 ;;                  1    wreg      void 
  2464 ;; Registers used:
  2465 ;;		wreg, status,2, status,0, pclath, cstack
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2475 ;;Total ram usage:        0 bytes
  2476 ;; Hardware stack levels used:    1
  2477 ;; Hardware stack levels required when called:    6
  2478 ;; This function calls:
  2479 ;;		_TMR1_SetInterruptHandler
  2480 ;; This function is called by:
  2481 ;;		_SYSTEM_Initialize
  2482 ;; This function uses a non-reentrant model
  2483 ;;
  2484                           
  2485                           
  2486                           ;psect for function _TMR1_Initialize
  2487  0208                     _TMR1_Initialize:
  2488  0208                     l1559:	
  2489                           ;incstack = 0
  2490                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2491                           
  2492                           
  2493                           ;../src/tmr1.c: 11:     T1GCON = 0x00;
  2494  0208  0020               	movlb	0	; select bank0
  2495  0209  0199               	clrf	25	;volatile
  2496  020A                     l1561:
  2497                           
  2498                           ;../src/tmr1.c: 14:     TMR1H = 0xE7;
  2499  020A  30E7               	movlw	231
  2500  020B  0097               	movwf	23	;volatile
  2501  020C                     l1563:
  2502                           
  2503                           ;../src/tmr1.c: 17:     TMR1L = 0x96;
  2504  020C  3096               	movlw	150
  2505  020D  0096               	movwf	22	;volatile
  2506  020E                     l1565:
  2507                           
  2508                           ;../src/tmr1.c: 20:     PIR1bits.TMR1IF = 0;
  2509  020E  1011               	bcf	17,0	;volatile
  2510  020F                     l1567:
  2511                           
  2512                           ;../src/tmr1.c: 23:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  2513  020F  0817               	movf	23,w	;volatile
  2514  0210  00C1               	movwf	_timer1ReloadVal+1	;volatile
  2515  0211  0816               	movf	22,w	;volatile
  2516  0212  00C0               	movwf	_timer1ReloadVal	;volatile
  2517  0213                     l1569:
  2518                           
  2519                           ;../src/tmr1.c: 26:     PIE1bits.TMR1IE = 1;
  2520  0213  0021               	movlb	1	; select bank1
  2521  0214  1411               	bsf	17,0	;volatile
  2522  0215                     l1571:
  2523                           
  2524                           ;../src/tmr1.c: 29:     TMR1_SetInterruptHandler(TMR1_Slave_InterruptHandler);
  2525  0215  3065               	movlw	low _TMR1_Slave_InterruptHandler
  2526  0216  00F4               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  2527  0217  3003               	movlw	high _TMR1_Slave_InterruptHandler
  2528  0218  00F5               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  2529  0219  3183  2309  3182   	fcall	_TMR1_SetInterruptHandler
  2530  021C                     l1573:
  2531                           
  2532                           ;../src/tmr1.c: 32:     T1CON = 0x31;
  2533  021C  3031               	movlw	49
  2534  021D  0020               	movlb	0	; select bank0
  2535  021E  0098               	movwf	24	;volatile
  2536  021F                     l454:
  2537  021F  0008               	return
  2538  0220                     __end_of_TMR1_Initialize:
  2539                           
  2540                           	psect	text5
  2541  0309                     __ptext5:	
  2542 ;; *************** function _TMR1_SetInterruptHandler *****************
  2543 ;; Defined at:
  2544 ;;		line 72 in file "../src/tmr1.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
  2547 ;;		 -> TMR1_Slave_InterruptHandler(1), 
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;		None
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  1    wreg      void 
  2552 ;; Registers used:
  2553 ;;		wreg
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2559 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2562 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2563 ;;Total ram usage:        2 bytes
  2564 ;; Hardware stack levels used:    1
  2565 ;; Hardware stack levels required when called:    5
  2566 ;; This function calls:
  2567 ;;		Nothing
  2568 ;; This function is called by:
  2569 ;;		_TMR1_Initialize
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           
  2574                           ;psect for function _TMR1_SetInterruptHandler
  2575  0309                     _TMR1_SetInterruptHandler:
  2576  0309                     l1493:	
  2577                           ;incstack = 0
  2578                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  2579                           
  2580                           
  2581                           ;../src/tmr1.c: 73:     TMR1_InterruptHandler = InterruptHandler;
  2582  0309  0875               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  2583  030A  0020               	movlb	0	; select bank0
  2584  030B  00BF               	movwf	_TMR1_InterruptHandler+1
  2585  030C  0874               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  2586  030D  00BE               	movwf	_TMR1_InterruptHandler
  2587  030E                     l466:
  2588  030E  0008               	return
  2589  030F                     __end_of_TMR1_SetInterruptHandler:
  2590                           
  2591                           	psect	text6
  2592  02D5                     __ptext6:	
  2593 ;; *************** function _PWM2_Initialize *****************
  2594 ;; Defined at:
  2595 ;;		line 5 in file "../src/pwm2.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;		None
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;		None
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  1    wreg      void 
  2602 ;; Registers used:
  2603 ;;		wreg
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2613 ;;Total ram usage:        0 bytes
  2614 ;; Hardware stack levels used:    1
  2615 ;; Hardware stack levels required when called:    5
  2616 ;; This function calls:
  2617 ;;		Nothing
  2618 ;; This function is called by:
  2619 ;;		_SYSTEM_Initialize
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           
  2624                           ;psect for function _PWM2_Initialize
  2625  02D5                     _PWM2_Initialize:
  2626  02D5                     l1235:	
  2627                           ;incstack = 0
  2628                           ; Regs used in _PWM2_Initialize: [wreg]
  2629                           
  2630                           
  2631                           ;../src/pwm2.c: 8:     PWM2CON = 0xC0;
  2632  02D5  30C0               	movlw	192
  2633  02D6  002C               	movlb	12	; select bank12
  2634  02D7  0096               	movwf	22	;volatile
  2635                           
  2636                           ;../src/pwm2.c: 11:     PWM2DCH = 0x0B;
  2637  02D8  300B               	movlw	11
  2638  02D9  0095               	movwf	21	;volatile
  2639                           
  2640                           ;../src/pwm2.c: 14:     PWM2DCL = 0x80;
  2641  02DA  3080               	movlw	128
  2642  02DB  0094               	movwf	20	;volatile
  2643  02DC                     l426:
  2644  02DC  0008               	return
  2645  02DD                     __end_of_PWM2_Initialize:
  2646                           
  2647                           	psect	text7
  2648  02DD                     __ptext7:	
  2649 ;; *************** function _PWM1_Initialize *****************
  2650 ;; Defined at:
  2651 ;;		line 5 in file "../src/pwm1.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;		None
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;		None
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  1    wreg      void 
  2658 ;; Registers used:
  2659 ;;		wreg
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2669 ;;Total ram usage:        0 bytes
  2670 ;; Hardware stack levels used:    1
  2671 ;; Hardware stack levels required when called:    5
  2672 ;; This function calls:
  2673 ;;		Nothing
  2674 ;; This function is called by:
  2675 ;;		_SYSTEM_Initialize
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           
  2680                           ;psect for function _PWM1_Initialize
  2681  02DD                     _PWM1_Initialize:
  2682  02DD                     l1233:	
  2683                           ;incstack = 0
  2684                           ; Regs used in _PWM1_Initialize: [wreg]
  2685                           
  2686                           
  2687                           ;../src/pwm1.c: 8:     PWM1CON = 0xC0;
  2688  02DD  30C0               	movlw	192
  2689  02DE  002C               	movlb	12	; select bank12
  2690  02DF  0093               	movwf	19	;volatile
  2691                           
  2692                           ;../src/pwm1.c: 11:     PWM1DCH = 0x0B;
  2693  02E0  300B               	movlw	11
  2694  02E1  0092               	movwf	18	;volatile
  2695                           
  2696                           ;../src/pwm1.c: 14:     PWM1DCL = 0x80;
  2697  02E2  3080               	movlw	128
  2698  02E3  0091               	movwf	17	;volatile
  2699  02E4                     l402:
  2700  02E4  0008               	return
  2701  02E5                     __end_of_PWM1_Initialize:
  2702                           
  2703                           	psect	text8
  2704  0236                     __ptext8:	
  2705 ;; *************** function _PIN_MANAGER_Initialize *****************
  2706 ;; Defined at:
  2707 ;;		line 4 in file "../src/pin_manager.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;		None
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;		None
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  1    wreg      void 
  2714 ;; Registers used:
  2715 ;;		wreg, status,2
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2725 ;;Total ram usage:        0 bytes
  2726 ;; Hardware stack levels used:    1
  2727 ;; Hardware stack levels required when called:    5
  2728 ;; This function calls:
  2729 ;;		Nothing
  2730 ;; This function is called by:
  2731 ;;		_SYSTEM_Initialize
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           
  2736                           ;psect for function _PIN_MANAGER_Initialize
  2737  0236                     _PIN_MANAGER_Initialize:
  2738  0236                     l1205:	
  2739                           ;incstack = 0
  2740                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2741                           
  2742                           
  2743                           ;../src/pin_manager.c: 7:     LATA = 0x00;
  2744  0236  0022               	movlb	2	; select bank2
  2745  0237  018C               	clrf	12	;volatile
  2746  0238                     l1207:
  2747                           
  2748                           ;../src/pin_manager.c: 8:     LATC = 0x02;
  2749  0238  3002               	movlw	2
  2750  0239  008E               	movwf	14	;volatile
  2751  023A                     l1209:
  2752                           
  2753                           ;../src/pin_manager.c: 11:     TRISA = 0x30;
  2754  023A  3030               	movlw	48
  2755  023B  0021               	movlb	1	; select bank1
  2756  023C  008C               	movwf	12	;volatile
  2757  023D                     l1211:
  2758                           
  2759                           ;../src/pin_manager.c: 12:     TRISC = 0x17;
  2760  023D  3017               	movlw	23
  2761  023E  008E               	movwf	14	;volatile
  2762  023F                     l1213:
  2763                           
  2764                           ;../src/pin_manager.c: 15:     ANSELC = 0x04;
  2765  023F  3004               	movlw	4
  2766  0240  0023               	movlb	3	; select bank3
  2767  0241  008E               	movwf	14	;volatile
  2768  0242                     l1215:
  2769                           
  2770                           ;../src/pin_manager.c: 16:     ANSELA = 0x10;
  2771  0242  3010               	movlw	16
  2772  0243  008C               	movwf	12	;volatile
  2773  0244                     l1217:
  2774                           
  2775                           ;../src/pin_manager.c: 19:     WPUA = 0x00;
  2776  0244  0024               	movlb	4	; select bank4
  2777  0245  018C               	clrf	12	;volatile
  2778  0246                     l1219:
  2779                           
  2780                           ;../src/pin_manager.c: 20:     OPTION_REGbits.nWPUEN = 1;
  2781  0246  0021               	movlb	1	; select bank1
  2782  0247  1795               	bsf	21,7	;volatile
  2783  0248                     l1221:
  2784                           
  2785                           ;../src/pin_manager.c: 23:     APFCON = 0x00;
  2786  0248  0022               	movlb	2	; select bank2
  2787  0249  019D               	clrf	29	;volatile
  2788  024A                     l381:
  2789  024A  0008               	return
  2790  024B                     __end_of_PIN_MANAGER_Initialize:
  2791                           
  2792                           	psect	text9
  2793  02A9                     __ptext9:	
  2794 ;; *************** function _OSCILLATOR_Initialize *****************
  2795 ;; Defined at:
  2796 ;;		line 18 in file "../src/init.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;		None
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;		None
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  1    wreg      void 
  2803 ;; Registers used:
  2804 ;;		wreg, status,2
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2814 ;;Total ram usage:        0 bytes
  2815 ;; Hardware stack levels used:    1
  2816 ;; Hardware stack levels required when called:    5
  2817 ;; This function calls:
  2818 ;;		Nothing
  2819 ;; This function is called by:
  2820 ;;		_SYSTEM_Initialize
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           
  2825                           ;psect for function _OSCILLATOR_Initialize
  2826  02A9                     _OSCILLATOR_Initialize:
  2827  02A9                     l1223:	
  2828                           ;incstack = 0
  2829                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2830                           
  2831                           
  2832                           ;../src/init.c: 21:     OSCCON = 0x32;
  2833  02A9  3032               	movlw	50
  2834  02AA  0021               	movlb	1	; select bank1
  2835  02AB  0099               	movwf	25	;volatile
  2836  02AC                     l1225:
  2837                           
  2838                           ;../src/init.c: 23:     OSCTUNE = 0x00;
  2839  02AC  0198               	clrf	24	;volatile
  2840  02AD                     l1227:
  2841                           
  2842                           ;../src/init.c: 25:     ACTCON = 0x00;
  2843  02AD  0027               	movlb	7	; select bank7
  2844  02AE  019B               	clrf	27	;volatile
  2845  02AF                     l1229:
  2846                           
  2847                           ;../src/init.c: 27:     BORCON = 0x00;
  2848  02AF  0022               	movlb	2	; select bank2
  2849  02B0  0196               	clrf	22	;volatile
  2850  02B1                     l278:
  2851  02B1  0008               	return
  2852  02B2                     __end_of_OSCILLATOR_Initialize:
  2853                           
  2854                           	psect	text10
  2855  02B2                     __ptext10:	
  2856 ;; *************** function _I2C_Initialize *****************
  2857 ;; Defined at:
  2858 ;;		line 59 in file "../src/i2c_slave.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;		None
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;		None
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  1    wreg      void 
  2865 ;; Registers used:
  2866 ;;		wreg, status,2, status,0
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2874 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2875 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2876 ;;Total ram usage:        1 bytes
  2877 ;; Hardware stack levels used:    1
  2878 ;; Hardware stack levels required when called:    5
  2879 ;; This function calls:
  2880 ;;		Nothing
  2881 ;; This function is called by:
  2882 ;;		_SYSTEM_Initialize
  2883 ;; This function uses a non-reentrant model
  2884 ;;
  2885                           
  2886                           
  2887                           ;psect for function _I2C_Initialize
  2888  02B2                     _I2C_Initialize:
  2889  02B2                     l1127:	
  2890                           ;incstack = 0
  2891                           ; Regs used in _I2C_Initialize: [wreg+status,2+status,0]
  2892                           
  2893                           
  2894                           ;../src/i2c_slave.c: 61:     SSP1STAT = 0x00;
  2895  02B2  0024               	movlb	4	; select bank4
  2896  02B3  0194               	clrf	20	;volatile
  2897  02B4                     l1129:
  2898                           
  2899                           ;../src/i2c_slave.c: 62:     SSP1CON1 |= 0x06;
  2900  02B4  3006               	movlw	6
  2901  02B5  00F4               	movwf	??_I2C_Initialize
  2902  02B6  0874               	movf	??_I2C_Initialize,w
  2903  02B7  0495               	iorwf	21,f	;volatile
  2904  02B8                     l1131:
  2905                           
  2906                           ;../src/i2c_slave.c: 63:     SSP1CON2 = 0x00;
  2907  02B8  0196               	clrf	22	;volatile
  2908  02B9                     l1133:
  2909                           
  2910                           ;../src/i2c_slave.c: 64:     SSP1CON1bits.SSPEN = 0;
  2911  02B9  1295               	bcf	21,5	;volatile
  2912  02BA                     l126:
  2913  02BA  0008               	return
  2914  02BB                     __end_of_I2C_Initialize:
  2915                           
  2916                           	psect	text11
  2917  025C                     __ptext11:	
  2918 ;; *************** function _Datos_Initialize *****************
  2919 ;; Defined at:
  2920 ;;		line 16 in file "../src/vertebra_slave.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;		None
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;		None
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  1    wreg      void 
  2927 ;; Registers used:
  2928 ;;		wreg
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2936 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2937 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2938 ;;Total ram usage:        1 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; Hardware stack levels required when called:    5
  2941 ;; This function calls:
  2942 ;;		Nothing
  2943 ;; This function is called by:
  2944 ;;		_SYSTEM_Initialize
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           
  2949                           ;psect for function _Datos_Initialize
  2950  025C                     _Datos_Initialize:
  2951  025C                     l1555:	
  2952                           ;incstack = 0
  2953                           ; Regs used in _Datos_Initialize: [wreg]
  2954                           
  2955                           
  2956                           ;../src/vertebra_slave.c: 18:     d1.dato1 = 1;
  2957  025C  0020               	movlb	0	; select bank0
  2958  025D  01A0               	clrf	_d1
  2959  025E  0AA0               	incf	_d1,f
  2960                           
  2961                           ;../src/vertebra_slave.c: 19:     d1.dato2 = 1;
  2962  025F  01A1               	clrf	_d1+1
  2963  0260  0AA1               	incf	_d1+1,f
  2964                           
  2965                           ;../src/vertebra_slave.c: 20:     d1.dato3 = 1;
  2966  0261  01A2               	clrf	_d1+2
  2967  0262  0AA2               	incf	_d1+2,f
  2968                           
  2969                           ;../src/vertebra_slave.c: 21:     d1.dato4 = 1;
  2970  0263  01A3               	clrf	_d1+3
  2971  0264  0AA3               	incf	_d1+3,f
  2972  0265                     l1557:
  2973                           
  2974                           ;../src/vertebra_slave.c: 22:     d1.ciclo = 45;
  2975  0265  302D               	movlw	45
  2976  0266  00F4               	movwf	??_Datos_Initialize
  2977  0267  0874               	movf	??_Datos_Initialize,w
  2978  0268  00A4               	movwf	_d1+4
  2979  0269                     l514:
  2980  0269  0008               	return
  2981  026A                     __end_of_Datos_Initialize:
  2982                           
  2983                           	psect	text12
  2984  02BB                     __ptext12:	
  2985 ;; *************** function _ADC_Initialize *****************
  2986 ;; Defined at:
  2987 ;;		line 7 in file "../src/adc.c"
  2988 ;; Parameters:    Size  Location     Type
  2989 ;;		None
  2990 ;; Auto vars:     Size  Location     Type
  2991 ;;		None
  2992 ;; Return value:  Size  Location     Type
  2993 ;;                  1    wreg      void 
  2994 ;; Registers used:
  2995 ;;		wreg, status,2
  2996 ;; Tracked objects:
  2997 ;;		On entry : 0/0
  2998 ;;		On exit  : 0/0
  2999 ;;		Unchanged: 0/0
  3000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3005 ;;Total ram usage:        0 bytes
  3006 ;; Hardware stack levels used:    1
  3007 ;; Hardware stack levels required when called:    5
  3008 ;; This function calls:
  3009 ;;		Nothing
  3010 ;; This function is called by:
  3011 ;;		_SYSTEM_Initialize
  3012 ;; This function uses a non-reentrant model
  3013 ;;
  3014                           
  3015                           
  3016                           ;psect for function _ADC_Initialize
  3017  02BB                     _ADC_Initialize:
  3018  02BB                     l1105:	
  3019                           ;incstack = 0
  3020                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3021                           
  3022                           
  3023                           ;../src/adc.c: 11:     ADCON1 = 0xC0;
  3024  02BB  30C0               	movlw	192
  3025  02BC  0021               	movlb	1	; select bank1
  3026  02BD  009E               	movwf	30	;volatile
  3027  02BE                     l1107:
  3028                           
  3029                           ;../src/adc.c: 14:     ADCON2 = 0x00;
  3030  02BE  019F               	clrf	31	;volatile
  3031  02BF                     l1109:
  3032                           
  3033                           ;../src/adc.c: 17:     ADRESL = 0x00;
  3034  02BF  019B               	clrf	27	;volatile
  3035  02C0                     l1111:
  3036                           
  3037                           ;../src/adc.c: 20:     ADRESH = 0x00;
  3038  02C0  019C               	clrf	28	;volatile
  3039  02C1                     l1113:
  3040                           
  3041                           ;../src/adc.c: 23:     ADCON0 = 0x01;
  3042  02C1  3001               	movlw	1
  3043  02C2  009D               	movwf	29	;volatile
  3044  02C3                     l17:
  3045  02C3  0008               	return
  3046  02C4                     __end_of_ADC_Initialize:
  3047                           
  3048                           	psect	text13
  3049  017B                     __ptext13:	
  3050 ;; *************** function _Read_Ldr *****************
  3051 ;; Defined at:
  3052 ;;		line 65 in file "../src/vertebra_slave.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;		None
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;  Luz2            2    0        unsigned short 
  3057 ;;  Luz             2    0        unsigned short 
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  1    wreg      void 
  3060 ;; Registers used:
  3061 ;;		wreg, status,2, status,0, pclath, cstack
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3068 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3069 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3070 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3071 ;;Total ram usage:        5 bytes
  3072 ;; Hardware stack levels used:    1
  3073 ;; Hardware stack levels required when called:    6
  3074 ;; This function calls:
  3075 ;;		_ADC_GetConversion
  3076 ;; This function is called by:
  3077 ;;		_main
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           
  3082                           ;psect for function _Read_Ldr
  3083  017B                     _Read_Ldr:
  3084  017B                     l1799:	
  3085                           ;incstack = 0
  3086                           ; Regs used in _Read_Ldr: [wreg+status,2+status,0+pclath+cstack]
  3087                           
  3088  017B  3003               	movlw	3
  3089  017C  3181  21BB  3181   	fcall	_ADC_GetConversion
  3090  017F                     l1801:
  3091                           
  3092                           ;../src/vertebra_slave.c: 69:     d1.dato1 = ADRESH;
  3093  017F  0021               	movlb	1	; select bank1
  3094  0180  081C               	movf	28,w	;volatile
  3095  0181  0020               	movlb	0	; select bank0
  3096  0182  00BA               	movwf	??_Read_Ldr
  3097  0183  083A               	movf	??_Read_Ldr,w
  3098  0184  00A0               	movwf	_d1
  3099  0185                     l1803:
  3100                           
  3101                           ;../src/vertebra_slave.c: 70:     d1.dato2 = ADRESL;
  3102  0185  0021               	movlb	1	; select bank1
  3103  0186  081B               	movf	27,w	;volatile
  3104  0187  0020               	movlb	0	; select bank0
  3105  0188  00BA               	movwf	??_Read_Ldr
  3106  0189  083A               	movf	??_Read_Ldr,w
  3107  018A  00A1               	movwf	_d1+1
  3108  018B  3006               	movlw	6
  3109  018C  3181  21BB  3181   	fcall	_ADC_GetConversion
  3110  018F                     l1805:
  3111                           
  3112                           ;../src/vertebra_slave.c: 72:     d1.dato3 = ADRESH;
  3113  018F  0021               	movlb	1	; select bank1
  3114  0190  081C               	movf	28,w	;volatile
  3115  0191  0020               	movlb	0	; select bank0
  3116  0192  00BA               	movwf	??_Read_Ldr
  3117  0193  083A               	movf	??_Read_Ldr,w
  3118  0194  00A2               	movwf	_d1+2
  3119  0195                     l1807:
  3120                           
  3121                           ;../src/vertebra_slave.c: 73:     d1.dato4 = ADRESL;
  3122  0195  0021               	movlb	1	; select bank1
  3123  0196  081B               	movf	27,w	;volatile
  3124  0197  0020               	movlb	0	; select bank0
  3125  0198  00BA               	movwf	??_Read_Ldr
  3126  0199  083A               	movf	??_Read_Ldr,w
  3127  019A  00A3               	movwf	_d1+3
  3128  019B                     l547:
  3129  019B  0008               	return
  3130  019C                     __end_of_Read_Ldr:
  3131                           
  3132                           	psect	text14
  3133  01BB                     __ptext14:	
  3134 ;; *************** function _ADC_GetConversion *****************
  3135 ;; Defined at:
  3136 ;;		line 29 in file "../src/adc.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;  channel         1    wreg     enum E2183
  3139 ;; Auto vars:     Size  Location     Type
  3140 ;;  channel         1    1[BANK0 ] enum E2183
  3141 ;; Return value:  Size  Location     Type
  3142 ;;                  2    4[COMMON] unsigned short 
  3143 ;; Registers used:
  3144 ;;		wreg, status,2, status,0
  3145 ;; Tracked objects:
  3146 ;;		On entry : 0/0
  3147 ;;		On exit  : 0/0
  3148 ;;		Unchanged: 0/0
  3149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3150 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3151 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3152 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3153 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3154 ;;Total ram usage:        4 bytes
  3155 ;; Hardware stack levels used:    1
  3156 ;; Hardware stack levels required when called:    5
  3157 ;; This function calls:
  3158 ;;		Nothing
  3159 ;; This function is called by:
  3160 ;;		_Read_Ldr
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           
  3165                           ;psect for function _ADC_GetConversion
  3166  01BB                     _ADC_GetConversion:
  3167                           
  3168                           ;incstack = 0
  3169                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  3170                           ;ADC_GetConversion@channel stored from wreg
  3171  01BB  0020               	movlb	0	; select bank0
  3172  01BC  00B9               	movwf	ADC_GetConversion@channel
  3173  01BD                     l1783:
  3174                           
  3175                           ;../src/adc.c: 29: adc_result_t ADC_GetConversion(adc_channel_t channel);../src/adc.c: 3
      +                          0: {;../src/adc.c: 32:     ADCON0bits.CHS = channel;
  3176  01BD  0839               	movf	ADC_GetConversion@channel,w
  3177  01BE  00B8               	movwf	??_ADC_GetConversion
  3178  01BF  0DB8               	rlf	??_ADC_GetConversion,f
  3179  01C0  0DB8               	rlf	??_ADC_GetConversion,f
  3180  01C1  0021               	movlb	1	; select bank1
  3181  01C2  081D               	movf	29,w	;volatile
  3182  01C3  0020               	movlb	0	; select bank0
  3183  01C4  0638               	xorwf	??_ADC_GetConversion,w
  3184  01C5  3983               	andlw	-125
  3185  01C6  0638               	xorwf	??_ADC_GetConversion,w
  3186  01C7  0021               	movlb	1	; select bank1
  3187  01C8  009D               	movwf	29	;volatile
  3188  01C9                     l1785:
  3189                           
  3190                           ;../src/adc.c: 35:     ADCON0bits.ADON = 1;
  3191  01C9  141D               	bsf	29,0	;volatile
  3192  01CA                     l1787:
  3193                           
  3194                           ;../src/adc.c: 38:     _delay((unsigned long)((5)*(2000000/4000000.0)));
  3195  01CA  3200               	nop2	;2 cycle nop
  3196  01CB                     l1789:
  3197                           
  3198                           ;../src/adc.c: 41:     ADCON0bits.GO_nDONE = 1;
  3199  01CB  0021               	movlb	1	; select bank1
  3200  01CC  149D               	bsf	29,1	;volatile
  3201  01CD                     l20:	
  3202                           ;../src/adc.c: 45:     {;../src/adc.c: 46:     }
  3203                           
  3204                           
  3205                           ;../src/adc.c: 44:     while (ADCON0bits.GO_nDONE)
  3206  01CD  189D               	btfsc	29,1	;volatile
  3207  01CE  29D0               	goto	u501
  3208  01CF  29D1               	goto	u500
  3209  01D0                     u501:
  3210  01D0  29CD               	goto	l20
  3211  01D1                     u500:
  3212  01D1                     l1791:
  3213                           
  3214                           ;../src/adc.c: 49:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3215  01D1  081C               	movf	28,w	;volatile
  3216  01D2  00F5               	movwf	?_ADC_GetConversion+1
  3217  01D3  081B               	movf	27,w	;volatile
  3218  01D4  00F4               	movwf	?_ADC_GetConversion
  3219  01D5                     l23:
  3220  01D5  0008               	return
  3221  01D6                     __end_of_ADC_GetConversion:
  3222                           
  3223                           	psect	text15
  3224  00BE                     __ptext15:	
  3225 ;; *************** function _I2C_Read_Write *****************
  3226 ;; Defined at:
  3227 ;;		line 76 in file "../src/vertebra_slave.c"
  3228 ;; Parameters:    Size  Location     Type
  3229 ;;  data            1    wreg     unsigned char 
  3230 ;; Auto vars:     Size  Location     Type
  3231 ;;  data            1    4[BANK0 ] unsigned char 
  3232 ;;  i2c_WrData      1    5[BANK0 ] unsigned char 
  3233 ;; Return value:  Size  Location     Type
  3234 ;;                  1    wreg      void 
  3235 ;; Registers used:
  3236 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3237 ;; Tracked objects:
  3238 ;;		On entry : 0/0
  3239 ;;		On exit  : 0/0
  3240 ;;		Unchanged: 0/0
  3241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3243 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3244 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3245 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3246 ;;Total ram usage:        4 bytes
  3247 ;; Hardware stack levels used:    1
  3248 ;; Hardware stack levels required when called:    6
  3249 ;; This function calls:
  3250 ;;		_Clear_I2C_data_flag
  3251 ;;		_Data_to_master
  3252 ;;		_Get_I2C_data_flag
  3253 ;;		_I2C_data_slave_flag
  3254 ;;		_PWM1_LoadDutyValue
  3255 ;;		_PWM2_LoadDutyValue
  3256 ;; This function is called by:
  3257 ;;		_main
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261                           
  3262                           ;psect for function _I2C_Read_Write
  3263  00BE                     _I2C_Read_Write:
  3264                           
  3265                           ;incstack = 0
  3266                           ; Regs used in _I2C_Read_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3267                           ;I2C_Read_Write@data stored from wreg
  3268  00BE  0020               	movlb	0	; select bank0
  3269  00BF  00BC               	movwf	I2C_Read_Write@data
  3270  00C0                     l1809:
  3271                           
  3272                           ;../src/vertebra_slave.c: 77:     uint8_t i2c_WrData;;../src/vertebra_slave.c: 79:     i
      +                          f(Get_I2C_data_flag())
  3273  00C0  3183  2353  3180   	fcall	_Get_I2C_data_flag
  3274  00C3  3A00               	xorlw	0
  3275  00C4  1903               	skipnz
  3276  00C5  28C7               	goto	u531
  3277  00C6  28C8               	goto	u530
  3278  00C7                     u531:
  3279  00C7  28FF               	goto	l1831
  3280  00C8                     u530:
  3281  00C8                     l1811:
  3282                           
  3283                           ;../src/vertebra_slave.c: 80:     {;../src/vertebra_slave.c: 81:         d1.ciclo = data
      +                          ;
  3284  00C8  0020               	movlb	0	; select bank0
  3285  00C9  083C               	movf	I2C_Read_Write@data,w
  3286  00CA  00BA               	movwf	??_I2C_Read_Write
  3287  00CB  083A               	movf	??_I2C_Read_Write,w
  3288  00CC  00A4               	movwf	_d1+4
  3289  00CD                     l1813:
  3290                           
  3291                           ;../src/vertebra_slave.c: 82:         PWM1_LoadDutyValue(d1.ciclo);
  3292  00CD  0824               	movf	_d1+4,w
  3293  00CE  00BA               	movwf	??_I2C_Read_Write
  3294  00CF  01BB               	clrf	??_I2C_Read_Write+1
  3295  00D0  083A               	movf	??_I2C_Read_Write,w
  3296  00D1  00F4               	movwf	PWM1_LoadDutyValue@dutyValue
  3297  00D2  083B               	movf	??_I2C_Read_Write+1,w
  3298  00D3  00F5               	movwf	PWM1_LoadDutyValue@dutyValue+1
  3299  00D4  3181  21EF  3180   	fcall	_PWM1_LoadDutyValue
  3300  00D7                     l1815:
  3301                           
  3302                           ;../src/vertebra_slave.c: 83:         PWM2_LoadDutyValue(90 -d1.ciclo);
  3303  00D7  305A               	movlw	90
  3304  00D8  0020               	movlb	0	; select bank0
  3305  00D9  00BA               	movwf	??_I2C_Read_Write
  3306  00DA  0824               	movf	_d1+4,w
  3307  00DB  023A               	subwf	??_I2C_Read_Write,w
  3308  00DC  00F4               	movwf	PWM2_LoadDutyValue@dutyValue
  3309  00DD  01F5               	clrf	PWM2_LoadDutyValue@dutyValue+1
  3310  00DE  1C03               	skipc
  3311  00DF  03F5               	decf	PWM2_LoadDutyValue@dutyValue+1,f
  3312  00E0  3181  21D6  3180   	fcall	_PWM2_LoadDutyValue
  3313  00E3                     l1817:
  3314                           
  3315                           ;../src/vertebra_slave.c: 84:         Clear_I2C_data_flag();
  3316  00E3  3183  2356  3180   	fcall	_Clear_I2C_data_flag
  3317  00E6  28FF               	goto	l1831
  3318  00E7                     l1819:
  3319                           
  3320                           ;../src/vertebra_slave.c: 90:             i2c_WrData = d1.dato1;
  3321  00E7  0820               	movf	_d1,w
  3322  00E8  00BA               	movwf	??_I2C_Read_Write
  3323  00E9  083A               	movf	??_I2C_Read_Write,w
  3324  00EA  00BD               	movwf	I2C_Read_Write@i2c_WrData
  3325                           
  3326                           ;../src/vertebra_slave.c: 91:             break;
  3327  00EB  2919               	goto	l1833
  3328  00EC                     l1821:
  3329                           
  3330                           ;../src/vertebra_slave.c: 93:             i2c_WrData = d1.dato2;
  3331  00EC  0821               	movf	_d1+1,w
  3332  00ED  00BA               	movwf	??_I2C_Read_Write
  3333  00EE  083A               	movf	??_I2C_Read_Write,w
  3334  00EF  00BD               	movwf	I2C_Read_Write@i2c_WrData
  3335                           
  3336                           ;../src/vertebra_slave.c: 94:             break;
  3337  00F0  2919               	goto	l1833
  3338  00F1                     l1823:
  3339                           
  3340                           ;../src/vertebra_slave.c: 96:             i2c_WrData = d1.dato3;
  3341  00F1  0822               	movf	_d1+2,w
  3342  00F2  00BA               	movwf	??_I2C_Read_Write
  3343  00F3  083A               	movf	??_I2C_Read_Write,w
  3344  00F4  00BD               	movwf	I2C_Read_Write@i2c_WrData
  3345                           
  3346                           ;../src/vertebra_slave.c: 97:             break;
  3347  00F5  2919               	goto	l1833
  3348  00F6                     l1825:
  3349                           
  3350                           ;../src/vertebra_slave.c: 99:             i2c_WrData = d1.dato4;
  3351  00F6  0823               	movf	_d1+3,w
  3352  00F7  00BA               	movwf	??_I2C_Read_Write
  3353  00F8  083A               	movf	??_I2C_Read_Write,w
  3354  00F9  00BD               	movwf	I2C_Read_Write@i2c_WrData
  3355                           
  3356                           ;../src/vertebra_slave.c: 100:             break;
  3357  00FA  2919               	goto	l1833
  3358  00FB                     l1827:
  3359                           
  3360                           ;../src/vertebra_slave.c: 102:             I2C_data_slave_flag();
  3361  00FB  3183  234B  3180   	fcall	_I2C_data_slave_flag
  3362                           
  3363                           ;../src/vertebra_slave.c: 103:             break;
  3364  00FE  2919               	goto	l1833
  3365  00FF                     l1831:
  3366  00FF  0020               	movlb	0	; select bank0
  3367  0100  083C               	movf	I2C_Read_Write@data,w
  3368  0101  00BA               	movwf	??_I2C_Read_Write
  3369  0102  01BB               	clrf	??_I2C_Read_Write+1
  3370                           
  3371                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3372                           ; Switch size 1, requested type "simple"
  3373                           ; Number of cases is 1, Range of values is 0 to 0
  3374                           ; switch strategies available:
  3375                           ; Name         Instructions Cycles
  3376                           ; simple_byte            4     3 (average)
  3377                           ; direct_byte            8     6 (fixed)
  3378                           ; jumptable            260     6 (fixed)
  3379                           ;	Chosen strategy is simple_byte
  3380  0103  083B               	movf	??_I2C_Read_Write+1,w
  3381  0104  3A00               	xorlw	0	; case 0
  3382  0105  1903               	skipnz
  3383  0106  2908               	goto	l1897
  3384  0107  2919               	goto	l1833
  3385  0108                     l1897:
  3386                           
  3387                           ; Switch size 1, requested type "simple"
  3388                           ; Number of cases is 5, Range of values is 1 to 15
  3389                           ; switch strategies available:
  3390                           ; Name         Instructions Cycles
  3391                           ; simple_byte           16     9 (average)
  3392                           ; direct_byte           39     9 (fixed)
  3393                           ; jumptable            263     9 (fixed)
  3394                           ;	Chosen strategy is simple_byte
  3395  0108  083A               	movf	??_I2C_Read_Write,w
  3396  0109  3A01               	xorlw	1	; case 1
  3397  010A  1903               	skipnz
  3398  010B  28E7               	goto	l1819
  3399  010C  3A03               	xorlw	3	; case 2
  3400  010D  1903               	skipnz
  3401  010E  28EC               	goto	l1821
  3402  010F  3A01               	xorlw	1	; case 3
  3403  0110  1903               	skipnz
  3404  0111  28F1               	goto	l1823
  3405  0112  3A07               	xorlw	7	; case 4
  3406  0113  1903               	skipnz
  3407  0114  28F6               	goto	l1825
  3408  0115  3A0B               	xorlw	11	; case 15
  3409  0116  1903               	skipnz
  3410  0117  28FB               	goto	l1827
  3411  0118  2919               	goto	l1833
  3412  0119                     l1833:
  3413                           
  3414                           ;../src/vertebra_slave.c: 108:     Data_to_master(i2c_WrData);
  3415  0119  0020               	movlb	0	; select bank0
  3416  011A  083D               	movf	I2C_Read_Write@i2c_WrData,w
  3417  011B  3183  230F  3180   	fcall	_Data_to_master
  3418  011E                     l559:
  3419  011E  0008               	return
  3420  011F                     __end_of_I2C_Read_Write:
  3421                           
  3422                           	psect	text16
  3423  01D6                     __ptext16:	
  3424 ;; *************** function _PWM2_LoadDutyValue *****************
  3425 ;; Defined at:
  3426 ;;		line 18 in file "../src/pwm2.c"
  3427 ;; Parameters:    Size  Location     Type
  3428 ;;  dutyValue       2    4[COMMON] unsigned short 
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;		None
  3431 ;; Return value:  Size  Location     Type
  3432 ;;                  1    wreg      void 
  3433 ;; Registers used:
  3434 ;;		wreg, status,2, status,0
  3435 ;; Tracked objects:
  3436 ;;		On entry : 0/0
  3437 ;;		On exit  : 0/0
  3438 ;;		Unchanged: 0/0
  3439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3440 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3442 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3443 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3444 ;;Total ram usage:        4 bytes
  3445 ;; Hardware stack levels used:    1
  3446 ;; Hardware stack levels required when called:    5
  3447 ;; This function calls:
  3448 ;;		Nothing
  3449 ;; This function is called by:
  3450 ;;		_I2C_Read_Write
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           
  3454                           
  3455                           ;psect for function _PWM2_LoadDutyValue
  3456  01D6                     _PWM2_LoadDutyValue:
  3457  01D6                     l1797:	
  3458                           ;incstack = 0
  3459                           ; Regs used in _PWM2_LoadDutyValue: [wreg+status,2+status,0]
  3460                           
  3461                           
  3462                           ;../src/pwm2.c: 18:  void PWM2_LoadDutyValue(uint16_t dutyValue);../src/pwm2.c: 19:  {;.
      +                          ./src/pwm2.c: 21:      PWM2DCH = (dutyValue & 0x03FC)>>2;
  3463  01D6  0875               	movf	PWM2_LoadDutyValue@dutyValue+1,w
  3464  01D7  0020               	movlb	0	; select bank0
  3465  01D8  00B9               	movwf	??_PWM2_LoadDutyValue+1
  3466  01D9  0874               	movf	PWM2_LoadDutyValue@dutyValue,w
  3467  01DA  00B8               	movwf	??_PWM2_LoadDutyValue
  3468  01DB  36B9               	lsrf	??_PWM2_LoadDutyValue+1,f
  3469  01DC  0CB8               	rrf	??_PWM2_LoadDutyValue,f
  3470  01DD  36B9               	lsrf	??_PWM2_LoadDutyValue+1,f
  3471  01DE  0CB8               	rrf	??_PWM2_LoadDutyValue,f
  3472  01DF  0838               	movf	??_PWM2_LoadDutyValue,w
  3473  01E0  002C               	movlb	12	; select bank12
  3474  01E1  0095               	movwf	21	;volatile
  3475                           
  3476                           ;../src/pwm2.c: 24:      PWM2DCL = (dutyValue & 0x0003)<<6;
  3477  01E2  0874               	movf	PWM2_LoadDutyValue@dutyValue,w
  3478  01E3  3903               	andlw	3
  3479  01E4  0020               	movlb	0	; select bank0
  3480  01E5  00B8               	movwf	??_PWM2_LoadDutyValue
  3481  01E6  3005               	movlw	5
  3482  01E7                     u525:
  3483  01E7  35B8               	lslf	??_PWM2_LoadDutyValue,f
  3484  01E8  3EFF               	addlw	-1
  3485  01E9  1D03               	skipz
  3486  01EA  29E7               	goto	u525
  3487  01EB  3538               	lslf	??_PWM2_LoadDutyValue,w
  3488  01EC  002C               	movlb	12	; select bank12
  3489  01ED  0094               	movwf	20	;volatile
  3490  01EE                     l429:
  3491  01EE  0008               	return
  3492  01EF                     __end_of_PWM2_LoadDutyValue:
  3493                           
  3494                           	psect	text17
  3495  01EF                     __ptext17:	
  3496 ;; *************** function _PWM1_LoadDutyValue *****************
  3497 ;; Defined at:
  3498 ;;		line 18 in file "../src/pwm1.c"
  3499 ;; Parameters:    Size  Location     Type
  3500 ;;  dutyValue       2    4[COMMON] unsigned short 
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;		None
  3503 ;; Return value:  Size  Location     Type
  3504 ;;                  1    wreg      void 
  3505 ;; Registers used:
  3506 ;;		wreg, status,2, status,0
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3512 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3514 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3515 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3516 ;;Total ram usage:        4 bytes
  3517 ;; Hardware stack levels used:    1
  3518 ;; Hardware stack levels required when called:    5
  3519 ;; This function calls:
  3520 ;;		Nothing
  3521 ;; This function is called by:
  3522 ;;		_I2C_Read_Write
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           
  3527                           ;psect for function _PWM1_LoadDutyValue
  3528  01EF                     _PWM1_LoadDutyValue:
  3529  01EF                     l1795:	
  3530                           ;incstack = 0
  3531                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2+status,0]
  3532                           
  3533                           
  3534                           ;../src/pwm1.c: 18:  void PWM1_LoadDutyValue(uint16_t dutyValue);../src/pwm1.c: 19:  {;.
      +                          ./src/pwm1.c: 21:      PWM1DCH = (dutyValue & 0x03FC)>>2;
  3535  01EF  0875               	movf	PWM1_LoadDutyValue@dutyValue+1,w
  3536  01F0  0020               	movlb	0	; select bank0
  3537  01F1  00B9               	movwf	??_PWM1_LoadDutyValue+1
  3538  01F2  0874               	movf	PWM1_LoadDutyValue@dutyValue,w
  3539  01F3  00B8               	movwf	??_PWM1_LoadDutyValue
  3540  01F4  36B9               	lsrf	??_PWM1_LoadDutyValue+1,f
  3541  01F5  0CB8               	rrf	??_PWM1_LoadDutyValue,f
  3542  01F6  36B9               	lsrf	??_PWM1_LoadDutyValue+1,f
  3543  01F7  0CB8               	rrf	??_PWM1_LoadDutyValue,f
  3544  01F8  0838               	movf	??_PWM1_LoadDutyValue,w
  3545  01F9  002C               	movlb	12	; select bank12
  3546  01FA  0092               	movwf	18	;volatile
  3547                           
  3548                           ;../src/pwm1.c: 24:      PWM1DCL = (dutyValue & 0x0003)<<6;
  3549  01FB  0874               	movf	PWM1_LoadDutyValue@dutyValue,w
  3550  01FC  3903               	andlw	3
  3551  01FD  0020               	movlb	0	; select bank0
  3552  01FE  00B8               	movwf	??_PWM1_LoadDutyValue
  3553  01FF  3005               	movlw	5
  3554  0200                     u515:
  3555  0200  35B8               	lslf	??_PWM1_LoadDutyValue,f
  3556  0201  3EFF               	addlw	-1
  3557  0202  1D03               	skipz
  3558  0203  2A00               	goto	u515
  3559  0204  3538               	lslf	??_PWM1_LoadDutyValue,w
  3560  0205  002C               	movlb	12	; select bank12
  3561  0206  0091               	movwf	17	;volatile
  3562  0207                     l405:
  3563  0207  0008               	return
  3564  0208                     __end_of_PWM1_LoadDutyValue:
  3565                           
  3566                           	psect	text18
  3567  034B                     __ptext18:	
  3568 ;; *************** function _I2C_data_slave_flag *****************
  3569 ;; Defined at:
  3570 ;;		line 52 in file "../src/vertebra_slave.c"
  3571 ;; Parameters:    Size  Location     Type
  3572 ;;		None
  3573 ;; Auto vars:     Size  Location     Type
  3574 ;;		None
  3575 ;; Return value:  Size  Location     Type
  3576 ;;                  1    wreg      void 
  3577 ;; Registers used:
  3578 ;;		None
  3579 ;; Tracked objects:
  3580 ;;		On entry : 0/0
  3581 ;;		On exit  : 0/0
  3582 ;;		Unchanged: 0/0
  3583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3588 ;;Total ram usage:        0 bytes
  3589 ;; Hardware stack levels used:    1
  3590 ;; Hardware stack levels required when called:    5
  3591 ;; This function calls:
  3592 ;;		Nothing
  3593 ;; This function is called by:
  3594 ;;		_I2C_Read_Write
  3595 ;; This function uses a non-reentrant model
  3596 ;;
  3597                           
  3598                           
  3599                           ;psect for function _I2C_data_slave_flag
  3600  034B                     _I2C_data_slave_flag:
  3601  034B                     l1595:	
  3602                           ;incstack = 0
  3603                           ; Regs used in _I2C_data_slave_flag: []
  3604                           
  3605                           
  3606                           ;../src/vertebra_slave.c: 53:     flag_i2c_data = 1;
  3607  034B  0020               	movlb	0	; select bank0
  3608  034C  01B2               	clrf	_flag_i2c_data
  3609  034D  0AB2               	incf	_flag_i2c_data,f
  3610  034E                     l538:
  3611  034E  0008               	return
  3612  034F                     __end_of_I2C_data_slave_flag:
  3613                           
  3614                           	psect	text19
  3615  0353                     __ptext19:	
  3616 ;; *************** function _Get_I2C_data_flag *****************
  3617 ;; Defined at:
  3618 ;;		line 56 in file "../src/vertebra_slave.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;		None
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;		None
  3623 ;; Return value:  Size  Location     Type
  3624 ;;                  1    wreg      unsigned char 
  3625 ;; Registers used:
  3626 ;;		wreg
  3627 ;; Tracked objects:
  3628 ;;		On entry : 0/0
  3629 ;;		On exit  : 0/0
  3630 ;;		Unchanged: 0/0
  3631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3636 ;;Total ram usage:        0 bytes
  3637 ;; Hardware stack levels used:    1
  3638 ;; Hardware stack levels required when called:    5
  3639 ;; This function calls:
  3640 ;;		Nothing
  3641 ;; This function is called by:
  3642 ;;		_I2C_Read_Write
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           
  3646                           
  3647                           ;psect for function _Get_I2C_data_flag
  3648  0353                     _Get_I2C_data_flag:
  3649  0353                     l1597:	
  3650                           ;incstack = 0
  3651                           ; Regs used in _Get_I2C_data_flag: [wreg]
  3652                           
  3653                           
  3654                           ;../src/vertebra_slave.c: 57:     return flag_i2c_data;
  3655  0353  0020               	movlb	0	; select bank0
  3656  0354  0832               	movf	_flag_i2c_data,w
  3657  0355                     l541:
  3658  0355  0008               	return
  3659  0356                     __end_of_Get_I2C_data_flag:
  3660                           
  3661                           	psect	text20
  3662  030F                     __ptext20:	
  3663 ;; *************** function _Data_to_master *****************
  3664 ;; Defined at:
  3665 ;;		line 276 in file "../src/i2c_slave.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;  i2c_wr_data     1    wreg     unsigned char 
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;  i2c_wr_data     1    5[COMMON] unsigned char 
  3670 ;; Return value:  Size  Location     Type
  3671 ;;                  1    wreg      void 
  3672 ;; Registers used:
  3673 ;;		wreg
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3680 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3681 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3682 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3683 ;;Total ram usage:        2 bytes
  3684 ;; Hardware stack levels used:    1
  3685 ;; Hardware stack levels required when called:    5
  3686 ;; This function calls:
  3687 ;;		Nothing
  3688 ;; This function is called by:
  3689 ;;		_I2C_Read_Write
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           
  3694                           ;psect for function _Data_to_master
  3695  030F                     _Data_to_master:
  3696                           
  3697                           ;incstack = 0
  3698                           ; Regs used in _Data_to_master: [wreg]
  3699                           ;Data_to_master@i2c_wr_data stored from wreg
  3700  030F  00F5               	movwf	Data_to_master@i2c_wr_data
  3701  0310                     l1553:
  3702                           
  3703                           ;../src/i2c_slave.c: 277:     master_read_data = i2c_wr_data;
  3704  0310  0875               	movf	Data_to_master@i2c_wr_data,w
  3705  0311  00F4               	movwf	??_Data_to_master
  3706  0312  0874               	movf	??_Data_to_master,w
  3707  0313  00F7               	movwf	_master_read_data
  3708  0314                     l227:
  3709  0314  0008               	return
  3710  0315                     __end_of_Data_to_master:
  3711                           
  3712                           	psect	text21
  3713  0356                     __ptext21:	
  3714 ;; *************** function _Clear_I2C_data_flag *****************
  3715 ;; Defined at:
  3716 ;;		line 60 in file "../src/vertebra_slave.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;		None
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;		None
  3721 ;; Return value:  Size  Location     Type
  3722 ;;                  1    wreg      void 
  3723 ;; Registers used:
  3724 ;;		status,2
  3725 ;; Tracked objects:
  3726 ;;		On entry : 0/0
  3727 ;;		On exit  : 0/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3734 ;;Total ram usage:        0 bytes
  3735 ;; Hardware stack levels used:    1
  3736 ;; Hardware stack levels required when called:    5
  3737 ;; This function calls:
  3738 ;;		Nothing
  3739 ;; This function is called by:
  3740 ;;		_I2C_Read_Write
  3741 ;; This function uses a non-reentrant model
  3742 ;;
  3743                           
  3744                           
  3745                           ;psect for function _Clear_I2C_data_flag
  3746  0356                     _Clear_I2C_data_flag:
  3747  0356                     l1601:	
  3748                           ;incstack = 0
  3749                           ; Regs used in _Clear_I2C_data_flag: [status,2]
  3750                           
  3751                           
  3752                           ;../src/vertebra_slave.c: 61:     flag_i2c_data = 0;
  3753  0356  0020               	movlb	0	; select bank0
  3754  0357  01B2               	clrf	_flag_i2c_data
  3755  0358                     l544:
  3756  0358  0008               	return
  3757  0359                     __end_of_Clear_I2C_data_flag:
  3758                           
  3759                           	psect	text22
  3760  011F                     __ptext22:	
  3761 ;; *************** function _I2C_Open *****************
  3762 ;; Defined at:
  3763 ;;		line 68 in file "../src/i2c_slave.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;		None
  3766 ;; Auto vars:     Size  Location     Type
  3767 ;;		None
  3768 ;; Return value:  Size  Location     Type
  3769 ;;                  1    wreg      void 
  3770 ;; Registers used:
  3771 ;;		wreg, status,2, status,0, pclath, cstack
  3772 ;; Tracked objects:
  3773 ;;		On entry : 0/0
  3774 ;;		On exit  : 0/0
  3775 ;;		Unchanged: 0/0
  3776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3781 ;;Total ram usage:        0 bytes
  3782 ;; Hardware stack levels used:    1
  3783 ;; Hardware stack levels required when called:    6
  3784 ;; This function calls:
  3785 ;;		_I2C_SlaveEnableIrq
  3786 ;;		_I2C_SlaveOpen
  3787 ;;		_I2C_SlaveSetAddrIntHandler
  3788 ;;		_I2C_SlaveSetIsrHandler
  3789 ;;		_I2C_SlaveSetReadIntHandler
  3790 ;;		_I2C_SlaveSetSlaveAddr
  3791 ;;		_I2C_SlaveSetSlaveMask
  3792 ;;		_I2C_SlaveSetWrColIntHandler
  3793 ;;		_I2C_SlaveSetWriteIntHandler
  3794 ;; This function is called by:
  3795 ;;		_main
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           
  3799                           
  3800                           ;psect for function _I2C_Open
  3801  011F                     _I2C_Open:
  3802  011F                     l1603:	
  3803                           ;incstack = 0
  3804                           ; Regs used in _I2C_Open: [wreg+status,2+status,0+pclath+cstack]
  3805                           
  3806                           
  3807                           ;../src/i2c_slave.c: 70:     I2C_SlaveOpen();
  3808  011F  3182  226A  3181   	fcall	_I2C_SlaveOpen
  3809                           
  3810                           ;../src/i2c_slave.c: 71:     I2C_SlaveSetSlaveAddr(31);
  3811  0122  301F               	movlw	31
  3812  0123  3183  2338  3181   	fcall	_I2C_SlaveSetSlaveAddr
  3813                           
  3814                           ;../src/i2c_slave.c: 72:     I2C_SlaveSetSlaveMask(127);
  3815  0126  307F               	movlw	127
  3816  0127  3183  2333  3181   	fcall	_I2C_SlaveSetSlaveMask
  3817                           
  3818                           ;../src/i2c_slave.c: 73:     I2C_SlaveSetIsrHandler(I2C_Isr);
  3819  012A  3047               	movlw	low _I2C_Isr
  3820  012B  00F4               	movwf	I2C_SlaveSetIsrHandler@handler
  3821  012C  3000               	movlw	high _I2C_Isr
  3822  012D  00F5               	movwf	I2C_SlaveSetIsrHandler@handler+1
  3823  012E  3183  2327  3181   	fcall	_I2C_SlaveSetIsrHandler
  3824                           
  3825                           ;../src/i2c_slave.c: 74:     I2C_SlaveSetWriteIntHandler(I2C_SlaveDefWrInterruptHandler)
      +                          ;
  3826  0131  309E               	movlw	low _I2C_SlaveDefWrInterruptHandler
  3827  0132  00F4               	movwf	I2C_SlaveSetWriteIntHandler@handler
  3828  0133  3002               	movlw	high _I2C_SlaveDefWrInterruptHandler
  3829  0134  00F5               	movwf	I2C_SlaveSetWriteIntHandler@handler+1
  3830  0135  3183  2315  3181   	fcall	_I2C_SlaveSetWriteIntHandler
  3831                           
  3832                           ;../src/i2c_slave.c: 75:     I2C_SlaveSetReadIntHandler(I2C_SlaveDefRdInterruptHandler);
  3833  0138  30E5               	movlw	low _I2C_SlaveDefRdInterruptHandler
  3834  0139  00F4               	movwf	I2C_SlaveSetReadIntHandler@handler
  3835  013A  3002               	movlw	high _I2C_SlaveDefRdInterruptHandler
  3836  013B  00F5               	movwf	I2C_SlaveSetReadIntHandler@handler+1
  3837  013C  3183  2321  3181   	fcall	_I2C_SlaveSetReadIntHandler
  3838                           
  3839                           ;../src/i2c_slave.c: 77:     I2C_SlaveSetAddrIntHandler(I2C_SlaveDefAddrInterruptHandler
      +                          );
  3840  013F  30ED               	movlw	low _I2C_SlaveDefAddrInterruptHandler
  3841  0140  00F4               	movwf	I2C_SlaveSetAddrIntHandler@handler
  3842  0141  3002               	movlw	high _I2C_SlaveDefAddrInterruptHandler
  3843  0142  00F5               	movwf	I2C_SlaveSetAddrIntHandler@handler+1
  3844  0143  3183  232D  3181   	fcall	_I2C_SlaveSetAddrIntHandler
  3845                           
  3846                           ;../src/i2c_slave.c: 78:     I2C_SlaveSetWrColIntHandler(I2C_SlaveDefWrColInterruptHandl
      +                          er);
  3847  0146  3000               	movlw	0
  3848  0147  00F4               	movwf	I2C_SlaveSetWrColIntHandler@handler
  3849  0148  3000               	movlw	0
  3850  0149  00F5               	movwf	I2C_SlaveSetWrColIntHandler@handler+1
  3851  014A  3183  231B  3181   	fcall	_I2C_SlaveSetWrColIntHandler
  3852  014D                     l1605:
  3853                           
  3854                           ;../src/i2c_slave.c: 79:     I2C_SlaveEnableIrq();
  3855  014D  3183  2359  3181   	fcall	_I2C_SlaveEnableIrq
  3856  0150                     l129:
  3857  0150  0008               	return
  3858  0151                     __end_of_I2C_Open:
  3859                           
  3860                           	psect	text23
  3861  0315                     __ptext23:	
  3862 ;; *************** function _I2C_SlaveSetWriteIntHandler *****************
  3863 ;; Defined at:
  3864 ;;		line 164 in file "../src/i2c_slave.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;  handler         2    4[COMMON] PTR FTN()void 
  3867 ;;		 -> I2C_SlaveDefWrInterruptHandler(1), 
  3868 ;; Auto vars:     Size  Location     Type
  3869 ;;		None
  3870 ;; Return value:  Size  Location     Type
  3871 ;;                  1    wreg      void 
  3872 ;; Registers used:
  3873 ;;		wreg
  3874 ;; Tracked objects:
  3875 ;;		On entry : 0/0
  3876 ;;		On exit  : 0/0
  3877 ;;		Unchanged: 0/0
  3878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3879 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3882 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3883 ;;Total ram usage:        2 bytes
  3884 ;; Hardware stack levels used:    1
  3885 ;; Hardware stack levels required when called:    5
  3886 ;; This function calls:
  3887 ;;		Nothing
  3888 ;; This function is called by:
  3889 ;;		_I2C_Open
  3890 ;; This function uses a non-reentrant model
  3891 ;;
  3892                           
  3893                           
  3894                           ;psect for function _I2C_SlaveSetWriteIntHandler
  3895  0315                     _I2C_SlaveSetWriteIntHandler:
  3896  0315                     l1509:	
  3897                           ;incstack = 0
  3898                           ; Regs used in _I2C_SlaveSetWriteIntHandler: [wreg]
  3899                           
  3900                           
  3901                           ;../src/i2c_slave.c: 165:     I2C_SlaveWrInterruptHandler = handler;
  3902  0315  0875               	movf	I2C_SlaveSetWriteIntHandler@handler+1,w
  3903  0316  0020               	movlb	0	; select bank0
  3904  0317  00AC               	movwf	_I2C_SlaveWrInterruptHandler+1
  3905  0318  0874               	movf	I2C_SlaveSetWriteIntHandler@handler,w
  3906  0319  00AB               	movwf	_I2C_SlaveWrInterruptHandler
  3907  031A                     l164:
  3908  031A  0008               	return
  3909  031B                     __end_of_I2C_SlaveSetWriteIntHandler:
  3910                           
  3911                           	psect	text24
  3912  031B                     __ptext24:	
  3913 ;; *************** function _I2C_SlaveSetWrColIntHandler *****************
  3914 ;; Defined at:
  3915 ;;		line 198 in file "../src/i2c_slave.c"
  3916 ;; Parameters:    Size  Location     Type
  3917 ;;  handler         2    4[COMMON] PTR FTN()void 
  3918 ;;		 -> I2C_SlaveDefWrColInterruptHandler(1), 
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;		None
  3921 ;; Return value:  Size  Location     Type
  3922 ;;                  1    wreg      void 
  3923 ;; Registers used:
  3924 ;;		wreg
  3925 ;; Tracked objects:
  3926 ;;		On entry : 0/0
  3927 ;;		On exit  : 0/0
  3928 ;;		Unchanged: 0/0
  3929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3930 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3933 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3934 ;;Total ram usage:        2 bytes
  3935 ;; Hardware stack levels used:    1
  3936 ;; Hardware stack levels required when called:    5
  3937 ;; This function calls:
  3938 ;;		Nothing
  3939 ;; This function is called by:
  3940 ;;		_I2C_Open
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           
  3944                           
  3945                           ;psect for function _I2C_SlaveSetWrColIntHandler
  3946  031B                     _I2C_SlaveSetWrColIntHandler:
  3947  031B                     l1515:	
  3948                           ;incstack = 0
  3949                           ; Regs used in _I2C_SlaveSetWrColIntHandler: [wreg]
  3950                           
  3951                           
  3952                           ;../src/i2c_slave.c: 199:     I2C_SlaveWrColInterruptHandler = handler;
  3953  031B  0875               	movf	I2C_SlaveSetWrColIntHandler@handler+1,w
  3954  031C  0020               	movlb	0	; select bank0
  3955  031D  00A6               	movwf	_I2C_SlaveWrColInterruptHandler+1
  3956  031E  0874               	movf	I2C_SlaveSetWrColIntHandler@handler,w
  3957  031F  00A5               	movwf	_I2C_SlaveWrColInterruptHandler
  3958  0320                     l184:
  3959  0320  0008               	return
  3960  0321                     __end_of_I2C_SlaveSetWrColIntHandler:
  3961                           
  3962                           	psect	text25
  3963  0333                     __ptext25:	
  3964 ;; *************** function _I2C_SlaveSetSlaveMask *****************
  3965 ;; Defined at:
  3966 ;;		line 225 in file "../src/i2c_slave.c"
  3967 ;; Parameters:    Size  Location     Type
  3968 ;;  maskAddr        1    wreg     unsigned char 
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;  maskAddr        1    4[COMMON] unsigned char 
  3971 ;; Return value:  Size  Location     Type
  3972 ;;                  1    wreg      void 
  3973 ;; Registers used:
  3974 ;;		wreg, status,2, status,0
  3975 ;; Tracked objects:
  3976 ;;		On entry : 0/0
  3977 ;;		On exit  : 0/0
  3978 ;;		Unchanged: 0/0
  3979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3981 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3983 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3984 ;;Total ram usage:        1 bytes
  3985 ;; Hardware stack levels used:    1
  3986 ;; Hardware stack levels required when called:    5
  3987 ;; This function calls:
  3988 ;;		Nothing
  3989 ;; This function is called by:
  3990 ;;		_I2C_Open
  3991 ;; This function uses a non-reentrant model
  3992 ;;
  3993                           
  3994                           
  3995                           ;psect for function _I2C_SlaveSetSlaveMask
  3996  0333                     _I2C_SlaveSetSlaveMask:
  3997                           
  3998                           ;incstack = 0
  3999                           ; Regs used in _I2C_SlaveSetSlaveMask: [wreg+status,2+status,0]
  4000                           ;I2C_SlaveSetSlaveMask@maskAddr stored from wreg
  4001  0333  00F4               	movwf	I2C_SlaveSetSlaveMask@maskAddr
  4002  0334                     l1149:
  4003                           
  4004                           ;../src/i2c_slave.c: 225: static __attribute__((inline)) void I2C_SlaveSetSlaveMask(uint
      +                          8_t maskAddr);../src/i2c_slave.c: 226: {;../src/i2c_slave.c: 227:     SSP1MSK = (uint8_t
      +                          ) (maskAddr << 1);
  4005  0334  3574               	lslf	I2C_SlaveSetSlaveMask@maskAddr,w
  4006  0335  0024               	movlb	4	; select bank4
  4007  0336  0093               	movwf	19	;volatile
  4008  0337                     l197:
  4009  0337  0008               	return
  4010  0338                     __end_of_I2C_SlaveSetSlaveMask:
  4011                           
  4012                           	psect	text26
  4013  0338                     __ptext26:	
  4014 ;; *************** function _I2C_SlaveSetSlaveAddr *****************
  4015 ;; Defined at:
  4016 ;;		line 220 in file "../src/i2c_slave.c"
  4017 ;; Parameters:    Size  Location     Type
  4018 ;;  slaveAddr       1    wreg     unsigned char 
  4019 ;; Auto vars:     Size  Location     Type
  4020 ;;  slaveAddr       1    4[COMMON] unsigned char 
  4021 ;; Return value:  Size  Location     Type
  4022 ;;                  1    wreg      void 
  4023 ;; Registers used:
  4024 ;;		wreg, status,2, status,0
  4025 ;; Tracked objects:
  4026 ;;		On entry : 0/0
  4027 ;;		On exit  : 0/0
  4028 ;;		Unchanged: 0/0
  4029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4031 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4033 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4034 ;;Total ram usage:        1 bytes
  4035 ;; Hardware stack levels used:    1
  4036 ;; Hardware stack levels required when called:    5
  4037 ;; This function calls:
  4038 ;;		Nothing
  4039 ;; This function is called by:
  4040 ;;		_I2C_Open
  4041 ;; This function uses a non-reentrant model
  4042 ;;
  4043                           
  4044                           
  4045                           ;psect for function _I2C_SlaveSetSlaveAddr
  4046  0338                     _I2C_SlaveSetSlaveAddr:
  4047                           
  4048                           ;incstack = 0
  4049                           ; Regs used in _I2C_SlaveSetSlaveAddr: [wreg+status,2+status,0]
  4050                           ;I2C_SlaveSetSlaveAddr@slaveAddr stored from wreg
  4051  0338  00F4               	movwf	I2C_SlaveSetSlaveAddr@slaveAddr
  4052  0339                     l1147:
  4053                           
  4054                           ;../src/i2c_slave.c: 220: static __attribute__((inline)) void I2C_SlaveSetSlaveAddr(uint
      +                          8_t slaveAddr);../src/i2c_slave.c: 221: {;../src/i2c_slave.c: 222:     SSP1ADD = (uint8_
      +                          t) (slaveAddr << 1);
  4055  0339  3574               	lslf	I2C_SlaveSetSlaveAddr@slaveAddr,w
  4056  033A  0024               	movlb	4	; select bank4
  4057  033B  0092               	movwf	18	;volatile
  4058  033C                     l194:
  4059  033C  0008               	return
  4060  033D                     __end_of_I2C_SlaveSetSlaveAddr:
  4061                           
  4062                           	psect	text27
  4063  0321                     __ptext27:	
  4064 ;; *************** function _I2C_SlaveSetReadIntHandler *****************
  4065 ;; Defined at:
  4066 ;;		line 148 in file "../src/i2c_slave.c"
  4067 ;; Parameters:    Size  Location     Type
  4068 ;;  handler         2    4[COMMON] PTR FTN()void 
  4069 ;;		 -> I2C_SlaveDefRdInterruptHandler(1), 
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;		None
  4072 ;; Return value:  Size  Location     Type
  4073 ;;                  1    wreg      void 
  4074 ;; Registers used:
  4075 ;;		wreg
  4076 ;; Tracked objects:
  4077 ;;		On entry : 0/0
  4078 ;;		On exit  : 0/0
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4081 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4084 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4085 ;;Total ram usage:        2 bytes
  4086 ;; Hardware stack levels used:    1
  4087 ;; Hardware stack levels required when called:    5
  4088 ;; This function calls:
  4089 ;;		Nothing
  4090 ;; This function is called by:
  4091 ;;		_I2C_Open
  4092 ;; This function uses a non-reentrant model
  4093 ;;
  4094                           
  4095                           
  4096                           ;psect for function _I2C_SlaveSetReadIntHandler
  4097  0321                     _I2C_SlaveSetReadIntHandler:
  4098  0321                     l1511:	
  4099                           ;incstack = 0
  4100                           ; Regs used in _I2C_SlaveSetReadIntHandler: [wreg]
  4101                           
  4102                           
  4103                           ;../src/i2c_slave.c: 149:     I2C_SlaveRdInterruptHandler = handler;
  4104  0321  0875               	movf	I2C_SlaveSetReadIntHandler@handler+1,w
  4105  0322  0020               	movlb	0	; select bank0
  4106  0323  00AE               	movwf	_I2C_SlaveRdInterruptHandler+1
  4107  0324  0874               	movf	I2C_SlaveSetReadIntHandler@handler,w
  4108  0325  00AD               	movwf	_I2C_SlaveRdInterruptHandler
  4109  0326                     l154:
  4110  0326  0008               	return
  4111  0327                     __end_of_I2C_SlaveSetReadIntHandler:
  4112                           
  4113                           	psect	text28
  4114  0327                     __ptext28:	
  4115 ;; *************** function _I2C_SlaveSetIsrHandler *****************
  4116 ;; Defined at:
  4117 ;;		line 142 in file "../src/i2c_slave.c"
  4118 ;; Parameters:    Size  Location     Type
  4119 ;;  handler         2    4[COMMON] PTR FTN()void 
  4120 ;;		 -> I2C_Isr(1), 
  4121 ;; Auto vars:     Size  Location     Type
  4122 ;;		None
  4123 ;; Return value:  Size  Location     Type
  4124 ;;                  1    wreg      void 
  4125 ;; Registers used:
  4126 ;;		wreg
  4127 ;; Tracked objects:
  4128 ;;		On entry : 0/0
  4129 ;;		On exit  : 0/0
  4130 ;;		Unchanged: 0/0
  4131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4132 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4135 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4136 ;;Total ram usage:        2 bytes
  4137 ;; Hardware stack levels used:    1
  4138 ;; Hardware stack levels required when called:    5
  4139 ;; This function calls:
  4140 ;;		Nothing
  4141 ;; This function is called by:
  4142 ;;		_I2C_Open
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146                           
  4147                           ;psect for function _I2C_SlaveSetIsrHandler
  4148  0327                     _I2C_SlaveSetIsrHandler:
  4149  0327                     l1507:	
  4150                           ;incstack = 0
  4151                           ; Regs used in _I2C_SlaveSetIsrHandler: [wreg]
  4152                           
  4153                           
  4154                           ;../src/i2c_slave.c: 142: void I2C_SlaveSetIsrHandler(i2cInterruptHandler handler);../sr
      +                          c/i2c_slave.c: 143: {;../src/i2c_slave.c: 144:     MSSP_InterruptHandler = handler;
  4155  0327  0875               	movf	I2C_SlaveSetIsrHandler@handler+1,w
  4156  0328  0020               	movlb	0	; select bank0
  4157  0329  00B0               	movwf	_MSSP_InterruptHandler+1
  4158  032A  0874               	movf	I2C_SlaveSetIsrHandler@handler,w
  4159  032B  00AF               	movwf	_MSSP_InterruptHandler
  4160  032C                     l151:
  4161  032C  0008               	return
  4162  032D                     __end_of_I2C_SlaveSetIsrHandler:
  4163                           
  4164                           	psect	text29
  4165  032D                     __ptext29:	
  4166 ;; *************** function _I2C_SlaveSetAddrIntHandler *****************
  4167 ;; Defined at:
  4168 ;;		line 182 in file "../src/i2c_slave.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;  handler         2    4[COMMON] PTR FTN()void 
  4171 ;;		 -> I2C_SlaveDefAddrInterruptHandler(1), 
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;		None
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  1    wreg      void 
  4176 ;; Registers used:
  4177 ;;		wreg
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4183 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4186 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4187 ;;Total ram usage:        2 bytes
  4188 ;; Hardware stack levels used:    1
  4189 ;; Hardware stack levels required when called:    5
  4190 ;; This function calls:
  4191 ;;		Nothing
  4192 ;; This function is called by:
  4193 ;;		_I2C_Open
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           
  4198                           ;psect for function _I2C_SlaveSetAddrIntHandler
  4199  032D                     _I2C_SlaveSetAddrIntHandler:
  4200  032D                     l1513:	
  4201                           ;incstack = 0
  4202                           ; Regs used in _I2C_SlaveSetAddrIntHandler: [wreg]
  4203                           
  4204                           
  4205                           ;../src/i2c_slave.c: 183:     I2C_SlaveAddrInterruptHandler = handler;
  4206  032D  0875               	movf	I2C_SlaveSetAddrIntHandler@handler+1,w
  4207  032E  0020               	movlb	0	; select bank0
  4208  032F  00AA               	movwf	_I2C_SlaveAddrInterruptHandler+1
  4209  0330  0874               	movf	I2C_SlaveSetAddrIntHandler@handler,w
  4210  0331  00A9               	movwf	_I2C_SlaveAddrInterruptHandler
  4211  0332                     l174:
  4212  0332  0008               	return
  4213  0333                     __end_of_I2C_SlaveSetAddrIntHandler:
  4214                           
  4215                           	psect	text30
  4216  026A                     __ptext30:	
  4217 ;; *************** function _I2C_SlaveOpen *****************
  4218 ;; Defined at:
  4219 ;;		line 206 in file "../src/i2c_slave.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;		None
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;		None
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  1    wreg      _Bool 
  4226 ;; Registers used:
  4227 ;;		wreg, status,2, status,0
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4235 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4236 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4237 ;;Total ram usage:        1 bytes
  4238 ;; Hardware stack levels used:    1
  4239 ;; Hardware stack levels required when called:    5
  4240 ;; This function calls:
  4241 ;;		Nothing
  4242 ;; This function is called by:
  4243 ;;		_I2C_Open
  4244 ;; This function uses a non-reentrant model
  4245 ;;
  4246                           
  4247                           
  4248                           ;psect for function _I2C_SlaveOpen
  4249  026A                     _I2C_SlaveOpen:
  4250  026A                     l1135:	
  4251                           ;incstack = 0
  4252                           ; Regs used in _I2C_SlaveOpen: [wreg+status,2+status,0]
  4253                           
  4254                           
  4255                           ;../src/i2c_slave.c: 208:     if(!SSP1CON1bits.SSPEN)
  4256  026A  0024               	movlb	4	; select bank4
  4257  026B  1A95               	btfsc	21,5	;volatile
  4258  026C  2A6E               	goto	u21
  4259  026D  2A6F               	goto	u20
  4260  026E                     u21:
  4261  026E  2A76               	goto	l191
  4262  026F                     u20:
  4263  026F                     l1137:
  4264                           
  4265                           ;../src/i2c_slave.c: 209:     {;../src/i2c_slave.c: 210:         SSP1STAT = 0x00;
  4266  026F  0194               	clrf	20	;volatile
  4267  0270                     l1139:
  4268                           
  4269                           ;../src/i2c_slave.c: 211:         SSP1CON1 |= 0x06;
  4270  0270  3006               	movlw	6
  4271  0271  00F4               	movwf	??_I2C_SlaveOpen
  4272  0272  0874               	movf	??_I2C_SlaveOpen,w
  4273  0273  0495               	iorwf	21,f	;volatile
  4274  0274                     l1141:
  4275                           
  4276                           ;../src/i2c_slave.c: 212:         SSP1CON2 = 0x00;
  4277  0274  0196               	clrf	22	;volatile
  4278  0275                     l1143:
  4279                           
  4280                           ;../src/i2c_slave.c: 213:         SSP1CON1bits.SSPEN = 1;
  4281  0275  1695               	bsf	21,5	;volatile
  4282  0276                     l191:
  4283  0276  0008               	return
  4284  0277                     __end_of_I2C_SlaveOpen:
  4285                           
  4286                           	psect	text31
  4287  0359                     __ptext31:	
  4288 ;; *************** function _I2C_SlaveEnableIrq *****************
  4289 ;; Defined at:
  4290 ;;		line 230 in file "../src/i2c_slave.c"
  4291 ;; Parameters:    Size  Location     Type
  4292 ;;		None
  4293 ;; Auto vars:     Size  Location     Type
  4294 ;;		None
  4295 ;; Return value:  Size  Location     Type
  4296 ;;                  1    wreg      void 
  4297 ;; Registers used:
  4298 ;;		None
  4299 ;; Tracked objects:
  4300 ;;		On entry : 0/0
  4301 ;;		On exit  : 0/0
  4302 ;;		Unchanged: 0/0
  4303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4308 ;;Total ram usage:        0 bytes
  4309 ;; Hardware stack levels used:    1
  4310 ;; Hardware stack levels required when called:    5
  4311 ;; This function calls:
  4312 ;;		Nothing
  4313 ;; This function is called by:
  4314 ;;		_I2C_Open
  4315 ;; This function uses a non-reentrant model
  4316 ;;
  4317                           
  4318                           
  4319                           ;psect for function _I2C_SlaveEnableIrq
  4320  0359                     _I2C_SlaveEnableIrq:
  4321  0359                     l1161:	
  4322                           ;incstack = 0
  4323                           ; Regs used in _I2C_SlaveEnableIrq: []
  4324                           
  4325                           
  4326                           ;../src/i2c_slave.c: 232:     PIE1bits.SSP1IE = 1;
  4327  0359  0021               	movlb	1	; select bank1
  4328  035A  1591               	bsf	17,3	;volatile
  4329  035B                     l200:
  4330  035B  0008               	return
  4331  035C                     __end_of_I2C_SlaveEnableIrq:
  4332                           
  4333                           	psect	text32
  4334  0371                     __ptext32:	
  4335 ;; *************** function _Get_TMR1_flag *****************
  4336 ;; Defined at:
  4337 ;;		line 29 in file "../src/vertebra_slave.c"
  4338 ;; Parameters:    Size  Location     Type
  4339 ;;		None
  4340 ;; Auto vars:     Size  Location     Type
  4341 ;;		None
  4342 ;; Return value:  Size  Location     Type
  4343 ;;                  1    wreg      unsigned char 
  4344 ;; Registers used:
  4345 ;;		wreg
  4346 ;; Tracked objects:
  4347 ;;		On entry : 0/0
  4348 ;;		On exit  : 0/0
  4349 ;;		Unchanged: 0/0
  4350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4355 ;;Total ram usage:        0 bytes
  4356 ;; Hardware stack levels used:    1
  4357 ;; Hardware stack levels required when called:    5
  4358 ;; This function calls:
  4359 ;;		Nothing
  4360 ;; This function is called by:
  4361 ;;		_main
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364                           
  4365                           
  4366                           ;psect for function _Get_TMR1_flag
  4367  0371                     _Get_TMR1_flag:
  4368  0371                     l1345:	
  4369                           ;incstack = 0
  4370                           ; Regs used in _Get_TMR1_flag: [wreg]
  4371                           
  4372                           
  4373                           ;../src/vertebra_slave.c: 30:     return flag_tmr1;
  4374  0371  0876               	movf	_flag_tmr1,w
  4375  0372                     l520:
  4376  0372  0008               	return
  4377  0373                     __end_of_Get_TMR1_flag:
  4378                           
  4379                           	psect	text33
  4380  035C                     __ptext33:	
  4381 ;; *************** function _Get_I2C_reg_flag *****************
  4382 ;; Defined at:
  4383 ;;		line 41 in file "../src/vertebra_slave.c"
  4384 ;; Parameters:    Size  Location     Type
  4385 ;;		None
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;		None
  4388 ;; Return value:  Size  Location     Type
  4389 ;;                  1    wreg      unsigned char 
  4390 ;; Registers used:
  4391 ;;		wreg
  4392 ;; Tracked objects:
  4393 ;;		On entry : 0/0
  4394 ;;		On exit  : 0/0
  4395 ;;		Unchanged: 0/0
  4396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4401 ;;Total ram usage:        0 bytes
  4402 ;; Hardware stack levels used:    1
  4403 ;; Hardware stack levels required when called:    5
  4404 ;; This function calls:
  4405 ;;		Nothing
  4406 ;; This function is called by:
  4407 ;;		_main
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           
  4411                           
  4412                           ;psect for function _Get_I2C_reg_flag
  4413  035C                     _Get_I2C_reg_flag:
  4414  035C                     l1669:	
  4415                           ;incstack = 0
  4416                           ; Regs used in _Get_I2C_reg_flag: [wreg]
  4417                           
  4418                           
  4419                           ;../src/vertebra_slave.c: 42:     return flag_i2c_reg;
  4420  035C  0020               	movlb	0	; select bank0
  4421  035D  0833               	movf	_flag_i2c_reg,w
  4422  035E                     l529:
  4423  035E  0008               	return
  4424  035F                     __end_of_Get_I2C_reg_flag:
  4425                           
  4426                           	psect	text34
  4427  035F                     __ptext34:	
  4428 ;; *************** function _Get_I2C_reg *****************
  4429 ;; Defined at:
  4430 ;;		line 45 in file "../src/vertebra_slave.c"
  4431 ;; Parameters:    Size  Location     Type
  4432 ;;		None
  4433 ;; Auto vars:     Size  Location     Type
  4434 ;;		None
  4435 ;; Return value:  Size  Location     Type
  4436 ;;                  1    wreg      unsigned char 
  4437 ;; Registers used:
  4438 ;;		wreg
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/0
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4448 ;;Total ram usage:        0 bytes
  4449 ;; Hardware stack levels used:    1
  4450 ;; Hardware stack levels required when called:    5
  4451 ;; This function calls:
  4452 ;;		Nothing
  4453 ;; This function is called by:
  4454 ;;		_main
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           
  4459                           ;psect for function _Get_I2C_reg
  4460  035F                     _Get_I2C_reg:
  4461  035F                     l1673:	
  4462                           ;incstack = 0
  4463                           ; Regs used in _Get_I2C_reg: [wreg]
  4464                           
  4465                           
  4466                           ;../src/vertebra_slave.c: 46:     return write_reg;
  4467  035F  0020               	movlb	0	; select bank0
  4468  0360  0831               	movf	_write_reg,w
  4469  0361                     l532:
  4470  0361  0008               	return
  4471  0362                     __end_of_Get_I2C_reg:
  4472                           
  4473                           	psect	text35
  4474  0373                     __ptext35:	
  4475 ;; *************** function _Clear_TMR1_flag *****************
  4476 ;; Defined at:
  4477 ;;		line 33 in file "../src/vertebra_slave.c"
  4478 ;; Parameters:    Size  Location     Type
  4479 ;;		None
  4480 ;; Auto vars:     Size  Location     Type
  4481 ;;		None
  4482 ;; Return value:  Size  Location     Type
  4483 ;;                  1    wreg      void 
  4484 ;; Registers used:
  4485 ;;		status,2
  4486 ;; Tracked objects:
  4487 ;;		On entry : 0/0
  4488 ;;		On exit  : 0/0
  4489 ;;		Unchanged: 0/0
  4490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4495 ;;Total ram usage:        0 bytes
  4496 ;; Hardware stack levels used:    1
  4497 ;; Hardware stack levels required when called:    5
  4498 ;; This function calls:
  4499 ;;		Nothing
  4500 ;; This function is called by:
  4501 ;;		_main
  4502 ;; This function uses a non-reentrant model
  4503 ;;
  4504                           
  4505                           
  4506                           ;psect for function _Clear_TMR1_flag
  4507  0373                     _Clear_TMR1_flag:
  4508  0373                     l1359:	
  4509                           ;incstack = 0
  4510                           ; Regs used in _Clear_TMR1_flag: [status,2]
  4511                           
  4512                           
  4513                           ;../src/vertebra_slave.c: 34:     flag_tmr1 = 0;
  4514  0373  01F6               	clrf	_flag_tmr1
  4515  0374                     l523:
  4516  0374  0008               	return
  4517  0375                     __end_of_Clear_TMR1_flag:
  4518                           
  4519                           	psect	text36
  4520  0362                     __ptext36:	
  4521 ;; *************** function _Clear_I2C_reg_flag *****************
  4522 ;; Defined at:
  4523 ;;		line 49 in file "../src/vertebra_slave.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;		None
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;		None
  4528 ;; Return value:  Size  Location     Type
  4529 ;;                  1    wreg      void 
  4530 ;; Registers used:
  4531 ;;		status,2
  4532 ;; Tracked objects:
  4533 ;;		On entry : 0/0
  4534 ;;		On exit  : 0/0
  4535 ;;		Unchanged: 0/0
  4536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4541 ;;Total ram usage:        0 bytes
  4542 ;; Hardware stack levels used:    1
  4543 ;; Hardware stack levels required when called:    5
  4544 ;; This function calls:
  4545 ;;		Nothing
  4546 ;; This function is called by:
  4547 ;;		_main
  4548 ;; This function uses a non-reentrant model
  4549 ;;
  4550                           
  4551                           
  4552                           ;psect for function _Clear_I2C_reg_flag
  4553  0362                     _Clear_I2C_reg_flag:
  4554  0362                     l1707:	
  4555                           ;incstack = 0
  4556                           ; Regs used in _Clear_I2C_reg_flag: [status,2]
  4557                           
  4558                           
  4559                           ;../src/vertebra_slave.c: 50:     flag_i2c_reg = 0;
  4560  0362  0020               	movlb	0	; select bank0
  4561  0363  01B3               	clrf	_flag_i2c_reg
  4562  0364                     l535:
  4563  0364  0008               	return
  4564  0365                     __end_of_Clear_I2C_reg_flag:
  4565                           
  4566                           	psect	intentry
  4567  0004                     __pintentry:	
  4568 ;; *************** function _INTERRUPT_InterruptManager *****************
  4569 ;; Defined at:
  4570 ;;		line 4 in file "../src/interrupt_manager.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;		None
  4573 ;; Auto vars:     Size  Location     Type
  4574 ;;		None
  4575 ;; Return value:  Size  Location     Type
  4576 ;;                  1    wreg      void 
  4577 ;; Registers used:
  4578 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4579 ;; Tracked objects:
  4580 ;;		On entry : 0/0
  4581 ;;		On exit  : 0/0
  4582 ;;		Unchanged: 0/0
  4583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4588 ;;Total ram usage:        0 bytes
  4589 ;; Hardware stack levels used:    1
  4590 ;; Hardware stack levels required when called:    4
  4591 ;; This function calls:
  4592 ;;		Absolute function
  4593 ;;		_I2C_Isr
  4594 ;;		_TMR1_ISR
  4595 ;; This function is called by:
  4596 ;;		Interrupt level 1
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600  0004                     _INTERRUPT_InterruptManager:
  4601                           
  4602                           ;incstack = 0
  4603  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4604                           
  4605                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4606  0005  3180               	pagesel	$
  4607  0006                     i1l1709:
  4608                           
  4609                           ;../src/interrupt_manager.c: 7:     if(INTCONbits.PEIE == 1)
  4610  0006  1F0B               	btfss	11,6	;volatile
  4611  0007  2809               	goto	u41_21
  4612  0008  280A               	goto	u41_20
  4613  0009                     u41_21:
  4614  0009  2833               	goto	i1l318
  4615  000A                     u41_20:
  4616  000A                     i1l1711:
  4617                           
  4618                           ;../src/interrupt_manager.c: 8:     {;../src/interrupt_manager.c: 9:         if(PIE2bits
      +                          .BCL1IE == 1 && PIR2bits.BCL1IF == 1)
  4619  000A  0021               	movlb	1	; select bank1
  4620  000B  1D92               	btfss	18,3	;volatile
  4621  000C  280E               	goto	u42_21
  4622  000D  280F               	goto	u42_20
  4623  000E                     u42_21:
  4624  000E  281A               	goto	i1l311
  4625  000F                     u42_20:
  4626  000F                     i1l1713:
  4627  000F  0020               	movlb	0	; select bank0
  4628  0010  1D92               	btfss	18,3	;volatile
  4629  0011  2813               	goto	u43_21
  4630  0012  2814               	goto	u43_20
  4631  0013                     u43_21:
  4632  0013  281A               	goto	i1l311
  4633  0014                     u43_20:
  4634  0014                     i1l1715:
  4635                           
  4636                           ;../src/interrupt_manager.c: 10:         {;../src/interrupt_manager.c: 11:             M
      +                          SSP_InterruptHandler();
  4637  0014  0830               	movf	_MSSP_InterruptHandler+1,w
  4638  0015  008A               	movwf	10
  4639  0016  082F               	movf	_MSSP_InterruptHandler,w
  4640  0017  000A               	callw
  4641  0018  3180               	pagesel	$
  4642                           
  4643                           ;../src/interrupt_manager.c: 12:         }
  4644  0019  2833               	goto	i1l318
  4645  001A                     i1l311:	
  4646                           ;../src/interrupt_manager.c: 13:         else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF
      +                           == 1)
  4647                           
  4648  001A  0021               	movlb	1	; select bank1
  4649  001B  1D91               	btfss	17,3	;volatile
  4650  001C  281E               	goto	u44_21
  4651  001D  281F               	goto	u44_20
  4652  001E                     u44_21:
  4653  001E  2825               	goto	i1l313
  4654  001F                     u44_20:
  4655  001F                     i1l1717:
  4656  001F  0020               	movlb	0	; select bank0
  4657  0020  1D91               	btfss	17,3	;volatile
  4658  0021  2823               	goto	u45_21
  4659  0022  2824               	goto	u45_20
  4660  0023                     u45_21:
  4661  0023  2825               	goto	i1l313
  4662  0024                     u45_20:
  4663  0024  2814               	goto	i1l1715
  4664  0025                     i1l313:	
  4665                           ;../src/interrupt_manager.c: 17:         else if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF
      +                           == 1)
  4666                           
  4667  0025  0021               	movlb	1	; select bank1
  4668  0026  1C11               	btfss	17,0	;volatile
  4669  0027  2829               	goto	u46_21
  4670  0028  282A               	goto	u46_20
  4671  0029                     u46_21:
  4672  0029  2833               	goto	i1l312
  4673  002A                     u46_20:
  4674  002A                     i1l1721:
  4675  002A  0020               	movlb	0	; select bank0
  4676  002B  1C11               	btfss	17,0	;volatile
  4677  002C  282E               	goto	u47_21
  4678  002D  282F               	goto	u47_20
  4679  002E                     u47_21:
  4680  002E  2833               	goto	i1l312
  4681  002F                     u47_20:
  4682  002F                     i1l1723:
  4683                           
  4684                           ;../src/interrupt_manager.c: 18:         {;../src/interrupt_manager.c: 19:             T
      +                          MR1_ISR();
  4685  002F  3182  2220  3180   	fcall	_TMR1_ISR
  4686                           
  4687                           ;../src/interrupt_manager.c: 20:         }
  4688  0032  2833               	goto	i1l318
  4689  0033                     i1l312:
  4690  0033                     i1l318:	
  4691                           ;../src/interrupt_manager.c: 25:     }
  4692                           
  4693  0033  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4694  0034  0009               	retfie
  4695  0035                     __end_of_INTERRUPT_InterruptManager:
  4696                           
  4697                           	psect	text38
  4698  0220                     __ptext38:	
  4699 ;; *************** function _TMR1_ISR *****************
  4700 ;; Defined at:
  4701 ;;		line 58 in file "../src/tmr1.c"
  4702 ;; Parameters:    Size  Location     Type
  4703 ;;		None
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;		None
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  1    wreg      void 
  4708 ;; Registers used:
  4709 ;;		wreg, status,2, status,0, pclath, cstack
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4719 ;;Total ram usage:        0 bytes
  4720 ;; Hardware stack levels used:    1
  4721 ;; Hardware stack levels required when called:    1
  4722 ;; This function calls:
  4723 ;;		Absolute function
  4724 ;;		_TMR1_Slave_InterruptHandler
  4725 ;;		_TMR1_WriteTimer
  4726 ;; This function is called by:
  4727 ;;		_INTERRUPT_InterruptManager
  4728 ;; This function uses a non-reentrant model
  4729 ;;
  4730                           
  4731                           
  4732                           ;psect for function _TMR1_ISR
  4733  0220                     _TMR1_ISR:
  4734  0220                     i1l1651:	
  4735                           ;incstack = 0
  4736                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  4737                           
  4738                           
  4739                           ;../src/tmr1.c: 62:     PIR1bits.TMR1IF = 0;
  4740  0220  0020               	movlb	0	; select bank0
  4741  0221  1011               	bcf	17,0	;volatile
  4742  0222                     i1l1653:
  4743                           
  4744                           ;../src/tmr1.c: 63:     TMR1_WriteTimer(timer1ReloadVal);
  4745  0222  0841               	movf	_timer1ReloadVal+1,w	;volatile
  4746  0223  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  4747  0224  0840               	movf	_timer1ReloadVal,w	;volatile
  4748  0225  00F0               	movwf	TMR1_WriteTimer@timerVal
  4749  0226  3182  224B  3182   	fcall	_TMR1_WriteTimer
  4750  0229                     i1l1655:
  4751                           
  4752                           ;../src/tmr1.c: 65:     if(TMR1_InterruptHandler)
  4753  0229  0020               	movlb	0	; select bank0
  4754  022A  083E               	movf	_TMR1_InterruptHandler,w
  4755  022B  043F               	iorwf	_TMR1_InterruptHandler+1,w
  4756  022C  1903               	btfsc	3,2
  4757  022D  2A2F               	goto	u39_21
  4758  022E  2A30               	goto	u39_20
  4759  022F                     u39_21:
  4760  022F  2A35               	goto	i1l463
  4761  0230                     u39_20:
  4762  0230                     i1l1657:
  4763                           
  4764                           ;../src/tmr1.c: 66:     {;../src/tmr1.c: 67:         TMR1_InterruptHandler();
  4765  0230  083F               	movf	_TMR1_InterruptHandler+1,w
  4766  0231  008A               	movwf	10
  4767  0232  083E               	movf	_TMR1_InterruptHandler,w
  4768  0233  000A               	callw
  4769  0234  3182               	pagesel	$
  4770  0235                     i1l463:
  4771  0235  0008               	return
  4772  0236                     __end_of_TMR1_ISR:
  4773                           
  4774                           	psect	text39
  4775  024B                     __ptext39:	
  4776 ;; *************** function _TMR1_WriteTimer *****************
  4777 ;; Defined at:
  4778 ;;		line 36 in file "../src/tmr1.c"
  4779 ;; Parameters:    Size  Location     Type
  4780 ;;  timerVal        2    0[COMMON] unsigned short 
  4781 ;; Auto vars:     Size  Location     Type
  4782 ;;		None
  4783 ;; Return value:  Size  Location     Type
  4784 ;;                  1    wreg      void 
  4785 ;; Registers used:
  4786 ;;		wreg, status,2
  4787 ;; Tracked objects:
  4788 ;;		On entry : 0/0
  4789 ;;		On exit  : 0/0
  4790 ;;		Unchanged: 0/0
  4791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4792 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4795 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4796 ;;Total ram usage:        2 bytes
  4797 ;; Hardware stack levels used:    1
  4798 ;; This function calls:
  4799 ;;		Nothing
  4800 ;; This function is called by:
  4801 ;;		_TMR1_ISR
  4802 ;; This function uses a non-reentrant model
  4803 ;;
  4804                           
  4805                           
  4806                           ;psect for function _TMR1_WriteTimer
  4807  024B                     _TMR1_WriteTimer:
  4808  024B                     i1l1579:	
  4809                           ;incstack = 0
  4810                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  4811                           
  4812                           
  4813                           ;../src/tmr1.c: 36: void TMR1_WriteTimer(uint16_t timerVal);../src/tmr1.c: 37: {;../src/
      +                          tmr1.c: 38:     if (T1CONbits.nT1SYNC == 1)
  4814  024B  0020               	movlb	0	; select bank0
  4815  024C  1D18               	btfss	24,2	;volatile
  4816  024D  2A4F               	goto	u32_21
  4817  024E  2A50               	goto	u32_20
  4818  024F                     u32_21:
  4819  024F  2A57               	goto	i1l1589
  4820  0250                     u32_20:
  4821  0250                     i1l1581:
  4822                           
  4823                           ;../src/tmr1.c: 39:     {;../src/tmr1.c: 41:         T1CONbits.TMR1ON = 0;
  4824  0250  1018               	bcf	24,0	;volatile
  4825  0251                     i1l1583:
  4826                           
  4827                           ;../src/tmr1.c: 44:         TMR1H = (timerVal >> 8);
  4828  0251  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  4829  0252  0097               	movwf	23	;volatile
  4830  0253                     i1l1585:
  4831                           
  4832                           ;../src/tmr1.c: 45:         TMR1L = timerVal;
  4833  0253  0870               	movf	TMR1_WriteTimer@timerVal,w
  4834  0254  0096               	movwf	22	;volatile
  4835  0255                     i1l1587:
  4836                           
  4837                           ;../src/tmr1.c: 48:         T1CONbits.TMR1ON =1;
  4838  0255  1418               	bsf	24,0	;volatile
  4839                           
  4840                           ;../src/tmr1.c: 49:     }
  4841  0256  2A5B               	goto	i1l459
  4842  0257                     i1l1589:
  4843                           
  4844                           ;../src/tmr1.c: 51:     {;../src/tmr1.c: 53:         TMR1H = (timerVal >> 8);
  4845  0257  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  4846  0258  0097               	movwf	23	;volatile
  4847  0259                     i1l1591:
  4848                           
  4849                           ;../src/tmr1.c: 54:         TMR1L = timerVal;
  4850  0259  0870               	movf	TMR1_WriteTimer@timerVal,w
  4851  025A  0096               	movwf	22	;volatile
  4852  025B                     i1l459:
  4853  025B  0008               	return
  4854  025C                     __end_of_TMR1_WriteTimer:
  4855                           
  4856                           	psect	text40
  4857  0365                     __ptext40:	
  4858 ;; *************** function _TMR1_Slave_InterruptHandler *****************
  4859 ;; Defined at:
  4860 ;;		line 25 in file "../src/vertebra_slave.c"
  4861 ;; Parameters:    Size  Location     Type
  4862 ;;		None
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;		None
  4865 ;; Return value:  Size  Location     Type
  4866 ;;                  1    wreg      void 
  4867 ;; Registers used:
  4868 ;;		None
  4869 ;; Tracked objects:
  4870 ;;		On entry : 0/0
  4871 ;;		On exit  : 0/0
  4872 ;;		Unchanged: 0/0
  4873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4878 ;;Total ram usage:        0 bytes
  4879 ;; Hardware stack levels used:    1
  4880 ;; This function calls:
  4881 ;;		Nothing
  4882 ;; This function is called by:
  4883 ;;		_TMR1_Initialize
  4884 ;;		_TMR1_ISR
  4885 ;; This function uses a non-reentrant model
  4886 ;;
  4887                           
  4888                           
  4889                           ;psect for function _TMR1_Slave_InterruptHandler
  4890  0365                     _TMR1_Slave_InterruptHandler:
  4891  0365                     i1l1593:	
  4892                           ;incstack = 0
  4893                           ; Regs used in _TMR1_Slave_InterruptHandler: []
  4894                           
  4895                           
  4896                           ;../src/vertebra_slave.c: 26:     flag_tmr1 = 1;
  4897  0365  01F6               	clrf	_flag_tmr1
  4898  0366  0AF6               	incf	_flag_tmr1,f
  4899  0367                     i1l517:
  4900  0367  0008               	return
  4901  0368                     __end_of_TMR1_Slave_InterruptHandler:
  4902                           
  4903                           	psect	text41
  4904  0047                     __ptext41:	
  4905 ;; *************** function _I2C_Isr *****************
  4906 ;; Defined at:
  4907 ;;		line 83 in file "../src/i2c_slave.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;		None
  4910 ;; Auto vars:     Size  Location     Type
  4911 ;;		None
  4912 ;; Return value:  Size  Location     Type
  4913 ;;                  1    wreg      void 
  4914 ;; Registers used:
  4915 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4916 ;; Tracked objects:
  4917 ;;		On entry : 0/0
  4918 ;;		On exit  : 0/0
  4919 ;;		Unchanged: 0/0
  4920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4923 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4924 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4925 ;;Total ram usage:        2 bytes
  4926 ;; Hardware stack levels used:    1
  4927 ;; Hardware stack levels required when called:    3
  4928 ;; This function calls:
  4929 ;;		_I2C_SlaveAddrCallBack
  4930 ;;		_I2C_SlaveClearIrq
  4931 ;;		_I2C_SlaveGetRxData
  4932 ;;		_I2C_SlaveIsAddr
  4933 ;;		_I2C_SlaveIsRead
  4934 ;;		_I2C_SlaveIsRxBufFull
  4935 ;;		_I2C_SlaveIsTxBufEmpty
  4936 ;;		_I2C_SlaveRdCallBack
  4937 ;;		_I2C_SlaveReleaseClock
  4938 ;;		_I2C_SlaveWrCallBack
  4939 ;;		_I2C_reg_Slave_InterruptHandler
  4940 ;; This function is called by:
  4941 ;;		_I2C_Open
  4942 ;;		_INTERRUPT_InterruptManager
  4943 ;; This function uses a non-reentrant model
  4944 ;;
  4945                           
  4946                           
  4947                           ;psect for function _I2C_Isr
  4948  0047                     _I2C_Isr:
  4949  0047                     i1l1607:	
  4950                           ;incstack = 0
  4951                           ; Regs used in _I2C_Isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4952                           
  4953                           
  4954                           ;../src/i2c_slave.c: 85:     I2C_SlaveClearIrq();
  4955  0047  3183  236B  3180   	fcall	_I2C_SlaveClearIrq
  4956  004A                     i1l1609:
  4957                           
  4958                           ;../src/i2c_slave.c: 87:     if(I2C_SlaveIsAddr())
  4959  004A  3182  22FC  3180   	fcall	_I2C_SlaveIsAddr
  4960  004D  3A00               	xorlw	0
  4961  004E  1903               	skipnz
  4962  004F  2851               	goto	u33_21
  4963  0050  2852               	goto	u33_20
  4964  0051                     u33_21:
  4965  0051  2864               	goto	i1l1617
  4966  0052                     u33_20:
  4967  0052                     i1l1611:
  4968                           
  4969                           ;../src/i2c_slave.c: 88:     {;../src/i2c_slave.c: 89:         if(I2C_SlaveIsRead())
  4970  0052  3183  2342  3180   	fcall	_I2C_SlaveIsRead
  4971  0055  3A00               	xorlw	0
  4972  0056  1903               	skipnz
  4973  0057  2859               	goto	u34_21
  4974  0058  285A               	goto	u34_20
  4975  0059                     u34_21:
  4976  0059  285F               	goto	i1l1615
  4977  005A                     u34_20:
  4978  005A                     i1l1613:
  4979                           
  4980                           ;../src/i2c_slave.c: 90:         {;../src/i2c_slave.c: 91:             i2cSlaveState = I
      +                          2C_ADDR_TX;
  4981  005A  3001               	movlw	1
  4982  005B  00F2               	movwf	??_I2C_Isr
  4983  005C  0872               	movf	??_I2C_Isr,w
  4984  005D  00F8               	movwf	_i2cSlaveState	;volatile
  4985                           
  4986                           ;../src/i2c_slave.c: 92:         }
  4987  005E  28A4               	goto	i1l1641
  4988  005F                     i1l1615:
  4989                           
  4990                           ;../src/i2c_slave.c: 94:         {;../src/i2c_slave.c: 95:             i2cSlaveState = I
      +                          2C_ADDR_RX;
  4991  005F  3002               	movlw	2
  4992  0060  00F2               	movwf	??_I2C_Isr
  4993  0061  0872               	movf	??_I2C_Isr,w
  4994  0062  00F8               	movwf	_i2cSlaveState	;volatile
  4995  0063  28A4               	goto	i1l1641
  4996  0064                     i1l1617:
  4997                           
  4998                           ;../src/i2c_slave.c: 99:     {;../src/i2c_slave.c: 100:         if(I2C_SlaveIsRead())
  4999  0064  3183  2342  3180   	fcall	_I2C_SlaveIsRead
  5000  0067  3A00               	xorlw	0
  5001  0068  1903               	skipnz
  5002  0069  286B               	goto	u35_21
  5003  006A  286C               	goto	u35_20
  5004  006B                     u35_21:
  5005  006B  2871               	goto	i1l1621
  5006  006C                     u35_20:
  5007  006C                     i1l1619:
  5008                           
  5009                           ;../src/i2c_slave.c: 101:         {;../src/i2c_slave.c: 102:             i2cSlaveState =
      +                           I2C_DATA_TX;
  5010  006C  3003               	movlw	3
  5011  006D  00F2               	movwf	??_I2C_Isr
  5012  006E  0872               	movf	??_I2C_Isr,w
  5013  006F  00F8               	movwf	_i2cSlaveState	;volatile
  5014                           
  5015                           ;../src/i2c_slave.c: 103:         }
  5016  0070  28A4               	goto	i1l1641
  5017  0071                     i1l1621:
  5018                           
  5019                           ;../src/i2c_slave.c: 105:         {;../src/i2c_slave.c: 106:             i2cSlaveState =
      +                           I2C_DATA_RX;
  5020  0071  3004               	movlw	4
  5021  0072  00F2               	movwf	??_I2C_Isr
  5022  0073  0872               	movf	??_I2C_Isr,w
  5023  0074  00F8               	movwf	_i2cSlaveState	;volatile
  5024  0075  28A4               	goto	i1l1641
  5025  0076                     i1l1623:
  5026                           
  5027                           ;../src/i2c_slave.c: 113:             I2C_SlaveAddrCallBack();
  5028  0076  3182  2291  3180   	fcall	_I2C_SlaveAddrCallBack
  5029  0079                     i1l1625:
  5030                           
  5031                           ;../src/i2c_slave.c: 114:             if(I2C_SlaveIsTxBufEmpty())
  5032  0079  3182  22F5  3180   	fcall	_I2C_SlaveIsTxBufEmpty
  5033  007C  3A00               	xorlw	0
  5034  007D  1903               	skipnz
  5035  007E  2880               	goto	u36_21
  5036  007F  2881               	goto	u36_20
  5037  0080                     u36_21:
  5038  0080  28BA               	goto	i1l1643
  5039  0081                     u36_20:
  5040  0081                     i1l1627:
  5041                           
  5042                           ;../src/i2c_slave.c: 115:             {;../src/i2c_slave.c: 116:                 I2C_Sla
      +                          veWrCallBack();
  5043  0081  3182  2277  3180   	fcall	_I2C_SlaveWrCallBack
  5044  0084  28BA               	goto	i1l1643
  5045  0085                     i1l1629:
  5046                           
  5047                           ;../src/i2c_slave.c: 120:             I2C_SlaveAddrCallBack();
  5048  0085  3182  2291  3180   	fcall	_I2C_SlaveAddrCallBack
  5049                           
  5050                           ;../src/i2c_slave.c: 121:             break;
  5051  0088  28BA               	goto	i1l1643
  5052  0089                     i1l1631:
  5053                           
  5054                           ;../src/i2c_slave.c: 123:             if(I2C_SlaveIsTxBufEmpty())
  5055  0089  3182  22F5  3180   	fcall	_I2C_SlaveIsTxBufEmpty
  5056  008C  3A00               	xorlw	0
  5057  008D  1903               	skipnz
  5058  008E  2890               	goto	u37_21
  5059  008F  2891               	goto	u37_20
  5060  0090                     u37_21:
  5061  0090  28BA               	goto	i1l1643
  5062  0091                     u37_20:
  5063  0091  2881               	goto	i1l1627
  5064  0092                     i1l1635:
  5065                           
  5066                           ;../src/i2c_slave.c: 129:             if(I2C_SlaveIsRxBufFull())
  5067  0092  3183  234F  3180   	fcall	_I2C_SlaveIsRxBufFull
  5068  0095  3A00               	xorlw	0
  5069  0096  1903               	skipnz
  5070  0097  2899               	goto	u38_21
  5071  0098  289A               	goto	u38_20
  5072  0099                     u38_21:
  5073  0099  28BA               	goto	i1l1643
  5074  009A                     u38_20:
  5075  009A                     i1l1637:
  5076                           
  5077                           ;../src/i2c_slave.c: 130:             {;../src/i2c_slave.c: 131:                 I2C_reg
      +                          _Slave_InterruptHandler(I2C_SlaveGetRxData());
  5078  009A  3183  236E  3180   	fcall	_I2C_SlaveGetRxData
  5079  009D  3182  22C4  3180   	fcall	_I2C_reg_Slave_InterruptHandler
  5080                           
  5081                           ;../src/i2c_slave.c: 132:                 I2C_SlaveRdCallBack();
  5082  00A0  3182  2284  3180   	fcall	_I2C_SlaveRdCallBack
  5083  00A3  28BA               	goto	i1l1643
  5084  00A4                     i1l1641:
  5085  00A4  0878               	movf	_i2cSlaveState,w	;volatile
  5086  00A5  00F2               	movwf	??_I2C_Isr
  5087  00A6  01F3               	clrf	??_I2C_Isr+1
  5088                           
  5089                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5090                           ; Switch size 1, requested type "simple"
  5091                           ; Number of cases is 1, Range of values is 0 to 0
  5092                           ; switch strategies available:
  5093                           ; Name         Instructions Cycles
  5094                           ; simple_byte            4     3 (average)
  5095                           ; direct_byte            8     6 (fixed)
  5096                           ; jumptable            260     6 (fixed)
  5097                           ;	Chosen strategy is simple_byte
  5098  00A7  0873               	movf	??_I2C_Isr+1,w
  5099  00A8  3A00               	xorlw	0	; case 0
  5100  00A9  1903               	skipnz
  5101  00AA  28AC               	goto	i1l1899
  5102  00AB  28BA               	goto	i1l1643
  5103  00AC                     i1l1899:
  5104                           
  5105                           ; Switch size 1, requested type "simple"
  5106                           ; Number of cases is 4, Range of values is 1 to 4
  5107                           ; switch strategies available:
  5108                           ; Name         Instructions Cycles
  5109                           ; simple_byte           13     7 (average)
  5110                           ; direct_byte           17     9 (fixed)
  5111                           ; jumptable            263     9 (fixed)
  5112                           ;	Chosen strategy is simple_byte
  5113  00AC  0872               	movf	??_I2C_Isr,w
  5114  00AD  3A01               	xorlw	1	; case 1
  5115  00AE  1903               	skipnz
  5116  00AF  2876               	goto	i1l1623
  5117  00B0  3A03               	xorlw	3	; case 2
  5118  00B1  1903               	skipnz
  5119  00B2  2885               	goto	i1l1629
  5120  00B3  3A01               	xorlw	1	; case 3
  5121  00B4  1903               	skipnz
  5122  00B5  2889               	goto	i1l1631
  5123  00B6  3A07               	xorlw	7	; case 4
  5124  00B7  1903               	skipnz
  5125  00B8  2892               	goto	i1l1635
  5126  00B9  28BA               	goto	i1l1643
  5127  00BA                     i1l1643:
  5128                           
  5129                           ;../src/i2c_slave.c: 138:     I2C_SlaveReleaseClock();
  5130  00BA  3183  2368  3180   	fcall	_I2C_SlaveReleaseClock
  5131  00BD                     i1l148:
  5132  00BD  0008               	return
  5133  00BE                     __end_of_I2C_Isr:
  5134                           
  5135                           	psect	text42
  5136  02C4                     __ptext42:	
  5137 ;; *************** function _I2C_reg_Slave_InterruptHandler *****************
  5138 ;; Defined at:
  5139 ;;		line 36 in file "../src/vertebra_slave.c"
  5140 ;; Parameters:    Size  Location     Type
  5141 ;;  reg             1    wreg     unsigned char 
  5142 ;; Auto vars:     Size  Location     Type
  5143 ;;  reg             1    1[COMMON] unsigned char 
  5144 ;; Return value:  Size  Location     Type
  5145 ;;                  1    wreg      void 
  5146 ;; Registers used:
  5147 ;;		wreg
  5148 ;; Tracked objects:
  5149 ;;		On entry : 0/0
  5150 ;;		On exit  : 0/0
  5151 ;;		Unchanged: 0/0
  5152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5154 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5155 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5156 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5157 ;;Total ram usage:        2 bytes
  5158 ;; Hardware stack levels used:    1
  5159 ;; This function calls:
  5160 ;;		Nothing
  5161 ;; This function is called by:
  5162 ;;		_I2C_Isr
  5163 ;; This function uses a non-reentrant model
  5164 ;;
  5165                           
  5166                           
  5167                           ;psect for function _I2C_reg_Slave_InterruptHandler
  5168  02C4                     _I2C_reg_Slave_InterruptHandler:
  5169                           
  5170                           ;incstack = 0
  5171                           ; Regs used in _I2C_reg_Slave_InterruptHandler: [wreg]
  5172                           ;I2C_reg_Slave_InterruptHandler@reg stored from wreg
  5173  02C4  00F1               	movwf	I2C_reg_Slave_InterruptHandler@reg
  5174  02C5                     i1l1543:
  5175                           
  5176                           ;../src/vertebra_slave.c: 37:     flag_i2c_reg = 1;
  5177  02C5  0020               	movlb	0	; select bank0
  5178  02C6  01B3               	clrf	_flag_i2c_reg
  5179  02C7  0AB3               	incf	_flag_i2c_reg,f
  5180  02C8                     i1l1545:
  5181                           
  5182                           ;../src/vertebra_slave.c: 38:     write_reg = reg;
  5183  02C8  0871               	movf	I2C_reg_Slave_InterruptHandler@reg,w
  5184  02C9  00F0               	movwf	??_I2C_reg_Slave_InterruptHandler
  5185  02CA  0870               	movf	??_I2C_reg_Slave_InterruptHandler,w
  5186  02CB  00B1               	movwf	_write_reg
  5187  02CC                     i1l526:
  5188  02CC  0008               	return
  5189  02CD                     __end_of_I2C_reg_Slave_InterruptHandler:
  5190                           
  5191                           	psect	text43
  5192  0277                     __ptext43:	
  5193 ;; *************** function _I2C_SlaveWrCallBack *****************
  5194 ;; Defined at:
  5195 ;;		line 168 in file "../src/i2c_slave.c"
  5196 ;; Parameters:    Size  Location     Type
  5197 ;;		None
  5198 ;; Auto vars:     Size  Location     Type
  5199 ;;		None
  5200 ;; Return value:  Size  Location     Type
  5201 ;;                  1    wreg      void 
  5202 ;; Registers used:
  5203 ;;		wreg, status,2, status,0, pclath, cstack
  5204 ;; Tracked objects:
  5205 ;;		On entry : 0/0
  5206 ;;		On exit  : 0/0
  5207 ;;		Unchanged: 0/0
  5208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5213 ;;Total ram usage:        0 bytes
  5214 ;; Hardware stack levels used:    1
  5215 ;; Hardware stack levels required when called:    2
  5216 ;; This function calls:
  5217 ;;		Absolute function
  5218 ;;		_I2C_SlaveDefWrInterruptHandler
  5219 ;; This function is called by:
  5220 ;;		_I2C_Isr
  5221 ;; This function uses a non-reentrant model
  5222 ;;
  5223                           
  5224                           
  5225                           ;psect for function _I2C_SlaveWrCallBack
  5226  0277                     _I2C_SlaveWrCallBack:
  5227  0277                     i1l1535:	
  5228                           ;incstack = 0
  5229                           ; Regs used in _I2C_SlaveWrCallBack: [wreg+status,2+status,0+pclath+cstack]
  5230                           
  5231                           
  5232                           ;../src/i2c_slave.c: 170:     if (I2C_SlaveWrInterruptHandler)
  5233  0277  0020               	movlb	0	; select bank0
  5234  0278  082B               	movf	_I2C_SlaveWrInterruptHandler,w
  5235  0279  042C               	iorwf	_I2C_SlaveWrInterruptHandler+1,w
  5236  027A  1903               	btfsc	3,2
  5237  027B  2A7D               	goto	u28_21
  5238  027C  2A7E               	goto	u28_20
  5239  027D                     u28_21:
  5240  027D  2A83               	goto	i1l168
  5241  027E                     u28_20:
  5242  027E                     i1l1537:
  5243                           
  5244                           ;../src/i2c_slave.c: 171:     {;../src/i2c_slave.c: 172:         I2C_SlaveWrInterruptHan
      +                          dler();
  5245  027E  082C               	movf	_I2C_SlaveWrInterruptHandler+1,w
  5246  027F  008A               	movwf	10
  5247  0280  082B               	movf	_I2C_SlaveWrInterruptHandler,w
  5248  0281  000A               	callw
  5249  0282  3182               	pagesel	$
  5250  0283                     i1l168:
  5251  0283  0008               	return
  5252  0284                     __end_of_I2C_SlaveWrCallBack:
  5253                           
  5254                           	psect	text44
  5255  029E                     __ptext44:	
  5256 ;; *************** function _I2C_SlaveDefWrInterruptHandler *****************
  5257 ;; Defined at:
  5258 ;;		line 176 in file "../src/i2c_slave.c"
  5259 ;; Parameters:    Size  Location     Type
  5260 ;;		None
  5261 ;; Auto vars:     Size  Location     Type
  5262 ;;		None
  5263 ;; Return value:  Size  Location     Type
  5264 ;;                  1    wreg      void 
  5265 ;; Registers used:
  5266 ;;		wreg, status,2, status,0, pclath, cstack
  5267 ;; Tracked objects:
  5268 ;;		On entry : 0/0
  5269 ;;		On exit  : 0/0
  5270 ;;		Unchanged: 0/0
  5271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5274 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5275 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5276 ;;Total ram usage:        1 bytes
  5277 ;; Hardware stack levels used:    1
  5278 ;; Hardware stack levels required when called:    1
  5279 ;; This function calls:
  5280 ;;		_Get_Data_to_master
  5281 ;;		_I2C_SlaveSendTxData
  5282 ;; This function is called by:
  5283 ;;		_I2C_Open
  5284 ;;		_I2C_SlaveWrCallBack
  5285 ;; This function uses a non-reentrant model
  5286 ;;
  5287                           
  5288                           
  5289                           ;psect for function _I2C_SlaveDefWrInterruptHandler
  5290  029E                     _I2C_SlaveDefWrInterruptHandler:
  5291  029E                     i1l1487:	
  5292                           ;incstack = 0
  5293                           ; Regs used in _I2C_SlaveDefWrInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
  5294                           
  5295                           
  5296                           ;../src/i2c_slave.c: 177:     i2cWrData = Get_Data_to_master();
  5297  029E  3183  2375  3182   	fcall	_Get_Data_to_master
  5298  02A1  00F1               	movwf	??_I2C_SlaveDefWrInterruptHandler
  5299  02A2  0871               	movf	??_I2C_SlaveDefWrInterruptHandler,w
  5300  02A3  00F9               	movwf	_i2cWrData	;volatile
  5301  02A4                     i1l1489:
  5302                           
  5303                           ;../src/i2c_slave.c: 178:     I2C_SlaveSendTxData(i2cWrData);
  5304  02A4  0879               	movf	_i2cWrData,w	;volatile
  5305  02A5  3183  233D  3182   	fcall	_I2C_SlaveSendTxData
  5306  02A8                     i1l171:
  5307  02A8  0008               	return
  5308  02A9                     __end_of_I2C_SlaveDefWrInterruptHandler:
  5309                           
  5310                           	psect	text45
  5311  033D                     __ptext45:	
  5312 ;; *************** function _I2C_SlaveSendTxData *****************
  5313 ;; Defined at:
  5314 ;;		line 266 in file "../src/i2c_slave.c"
  5315 ;; Parameters:    Size  Location     Type
  5316 ;;  data            1    wreg     unsigned char 
  5317 ;; Auto vars:     Size  Location     Type
  5318 ;;  data            1    0[COMMON] unsigned char 
  5319 ;; Return value:  Size  Location     Type
  5320 ;;                  1    wreg      void 
  5321 ;; Registers used:
  5322 ;;		wreg
  5323 ;; Tracked objects:
  5324 ;;		On entry : 0/0
  5325 ;;		On exit  : 0/0
  5326 ;;		Unchanged: 0/0
  5327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5329 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5331 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5332 ;;Total ram usage:        1 bytes
  5333 ;; Hardware stack levels used:    1
  5334 ;; This function calls:
  5335 ;;		Nothing
  5336 ;; This function is called by:
  5337 ;;		_I2C_SlaveDefWrInterruptHandler
  5338 ;; This function uses a non-reentrant model
  5339 ;;
  5340                           
  5341                           
  5342                           ;psect for function _I2C_SlaveSendTxData
  5343  033D                     _I2C_SlaveSendTxData:
  5344                           
  5345                           ;incstack = 0
  5346                           ; Regs used in _I2C_SlaveSendTxData: [wreg]
  5347                           ;I2C_SlaveSendTxData@data stored from wreg
  5348  033D  00F0               	movwf	I2C_SlaveSendTxData@data
  5349  033E                     i1l1483:
  5350                           
  5351                           ;../src/i2c_slave.c: 266: static __attribute__((inline)) void I2C_SlaveSendTxData(uint8_
      +                          t data);../src/i2c_slave.c: 267: {;../src/i2c_slave.c: 268:     SSP1BUF = data;
  5352  033E  0870               	movf	I2C_SlaveSendTxData@data,w
  5353  033F  0024               	movlb	4	; select bank4
  5354  0340  0091               	movwf	17	;volatile
  5355  0341                     i1l221:
  5356  0341  0008               	return
  5357  0342                     __end_of_I2C_SlaveSendTxData:
  5358                           
  5359                           	psect	text46
  5360  0375                     __ptext46:	
  5361 ;; *************** function _Get_Data_to_master *****************
  5362 ;; Defined at:
  5363 ;;		line 280 in file "../src/i2c_slave.c"
  5364 ;; Parameters:    Size  Location     Type
  5365 ;;		None
  5366 ;; Auto vars:     Size  Location     Type
  5367 ;;		None
  5368 ;; Return value:  Size  Location     Type
  5369 ;;                  1    wreg      unsigned char 
  5370 ;; Registers used:
  5371 ;;		wreg
  5372 ;; Tracked objects:
  5373 ;;		On entry : 0/0
  5374 ;;		On exit  : 0/0
  5375 ;;		Unchanged: 0/0
  5376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5381 ;;Total ram usage:        0 bytes
  5382 ;; Hardware stack levels used:    1
  5383 ;; This function calls:
  5384 ;;		Nothing
  5385 ;; This function is called by:
  5386 ;;		_I2C_SlaveDefWrInterruptHandler
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           
  5391                           ;psect for function _Get_Data_to_master
  5392  0375                     _Get_Data_to_master:
  5393  0375                     i1l1479:	
  5394                           ;incstack = 0
  5395                           ; Regs used in _Get_Data_to_master: [wreg]
  5396                           
  5397                           
  5398                           ;../src/i2c_slave.c: 281:     return master_read_data;
  5399  0375  0877               	movf	_master_read_data,w
  5400  0376                     i1l230:
  5401  0376  0008               	return
  5402  0377                     __end_of_Get_Data_to_master:
  5403                           
  5404                           	psect	text47
  5405  0368                     __ptext47:	
  5406 ;; *************** function _I2C_SlaveReleaseClock *****************
  5407 ;; Defined at:
  5408 ;;		line 250 in file "../src/i2c_slave.c"
  5409 ;; Parameters:    Size  Location     Type
  5410 ;;		None
  5411 ;; Auto vars:     Size  Location     Type
  5412 ;;		None
  5413 ;; Return value:  Size  Location     Type
  5414 ;;                  1    wreg      void 
  5415 ;; Registers used:
  5416 ;;		None
  5417 ;; Tracked objects:
  5418 ;;		On entry : 0/0
  5419 ;;		On exit  : 0/0
  5420 ;;		Unchanged: 0/0
  5421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5426 ;;Total ram usage:        0 bytes
  5427 ;; Hardware stack levels used:    1
  5428 ;; This function calls:
  5429 ;;		Nothing
  5430 ;; This function is called by:
  5431 ;;		_I2C_Isr
  5432 ;; This function uses a non-reentrant model
  5433 ;;
  5434                           
  5435                           
  5436                           ;psect for function _I2C_SlaveReleaseClock
  5437  0368                     _I2C_SlaveReleaseClock:
  5438  0368                     i1l1551:	
  5439                           ;incstack = 0
  5440                           ; Regs used in _I2C_SlaveReleaseClock: []
  5441                           
  5442                           
  5443                           ;../src/i2c_slave.c: 252:     SSP1CON1bits.CKP = 1;
  5444  0368  0024               	movlb	4	; select bank4
  5445  0369  1615               	bsf	21,4	;volatile
  5446  036A                     i1l212:
  5447  036A  0008               	return
  5448  036B                     __end_of_I2C_SlaveReleaseClock:
  5449                           
  5450                           	psect	text48
  5451  0284                     __ptext48:	
  5452 ;; *************** function _I2C_SlaveRdCallBack *****************
  5453 ;; Defined at:
  5454 ;;		line 152 in file "../src/i2c_slave.c"
  5455 ;; Parameters:    Size  Location     Type
  5456 ;;		None
  5457 ;; Auto vars:     Size  Location     Type
  5458 ;;		None
  5459 ;; Return value:  Size  Location     Type
  5460 ;;                  1    wreg      void 
  5461 ;; Registers used:
  5462 ;;		wreg, status,2, status,0, pclath, cstack
  5463 ;; Tracked objects:
  5464 ;;		On entry : 0/0
  5465 ;;		On exit  : 0/0
  5466 ;;		Unchanged: 0/0
  5467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5472 ;;Total ram usage:        0 bytes
  5473 ;; Hardware stack levels used:    1
  5474 ;; Hardware stack levels required when called:    2
  5475 ;; This function calls:
  5476 ;;		Absolute function
  5477 ;;		_I2C_SlaveDefRdInterruptHandler
  5478 ;; This function is called by:
  5479 ;;		_I2C_Isr
  5480 ;; This function uses a non-reentrant model
  5481 ;;
  5482                           
  5483                           
  5484                           ;psect for function _I2C_SlaveRdCallBack
  5485  0284                     _I2C_SlaveRdCallBack:
  5486  0284                     i1l1547:	
  5487                           ;incstack = 0
  5488                           ; Regs used in _I2C_SlaveRdCallBack: [wreg+status,2+status,0+pclath+cstack]
  5489                           
  5490                           
  5491                           ;../src/i2c_slave.c: 153:     if (I2C_SlaveRdInterruptHandler)
  5492  0284  0020               	movlb	0	; select bank0
  5493  0285  082D               	movf	_I2C_SlaveRdInterruptHandler,w
  5494  0286  042E               	iorwf	_I2C_SlaveRdInterruptHandler+1,w
  5495  0287  1903               	btfsc	3,2
  5496  0288  2A8A               	goto	u29_21
  5497  0289  2A8B               	goto	u29_20
  5498  028A                     u29_21:
  5499  028A  2A90               	goto	i1l158
  5500  028B                     u29_20:
  5501  028B                     i1l1549:
  5502                           
  5503                           ;../src/i2c_slave.c: 154:     {;../src/i2c_slave.c: 155:         I2C_SlaveRdInterruptHan
      +                          dler();
  5504  028B  082E               	movf	_I2C_SlaveRdInterruptHandler+1,w
  5505  028C  008A               	movwf	10
  5506  028D  082D               	movf	_I2C_SlaveRdInterruptHandler,w
  5507  028E  000A               	callw
  5508  028F  3182               	pagesel	$
  5509  0290                     i1l158:
  5510  0290  0008               	return
  5511  0291                     __end_of_I2C_SlaveRdCallBack:
  5512                           
  5513                           	psect	text49
  5514  02E5                     __ptext49:	
  5515 ;; *************** function _I2C_SlaveDefRdInterruptHandler *****************
  5516 ;; Defined at:
  5517 ;;		line 159 in file "../src/i2c_slave.c"
  5518 ;; Parameters:    Size  Location     Type
  5519 ;;		None
  5520 ;; Auto vars:     Size  Location     Type
  5521 ;;		None
  5522 ;; Return value:  Size  Location     Type
  5523 ;;                  1    wreg      void 
  5524 ;; Registers used:
  5525 ;;		wreg, pclath, cstack
  5526 ;; Tracked objects:
  5527 ;;		On entry : 0/0
  5528 ;;		On exit  : 0/0
  5529 ;;		Unchanged: 0/0
  5530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5533 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5534 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5535 ;;Total ram usage:        1 bytes
  5536 ;; Hardware stack levels used:    1
  5537 ;; Hardware stack levels required when called:    1
  5538 ;; This function calls:
  5539 ;;		_I2C_SlaveGetRxData
  5540 ;; This function is called by:
  5541 ;;		_I2C_Open
  5542 ;;		_I2C_SlaveRdCallBack
  5543 ;; This function uses a non-reentrant model
  5544 ;;
  5545                           
  5546                           
  5547                           ;psect for function _I2C_SlaveDefRdInterruptHandler
  5548  02E5                     _I2C_SlaveDefRdInterruptHandler:
  5549  02E5                     i1l1485:	
  5550                           ;incstack = 0
  5551                           ; Regs used in _I2C_SlaveDefRdInterruptHandler: [wreg+pclath+cstack]
  5552                           
  5553                           
  5554                           ;../src/i2c_slave.c: 160:     i2cRdData = I2C_SlaveGetRxData();
  5555  02E5  3183  236E  3182   	fcall	_I2C_SlaveGetRxData
  5556  02E8  00F0               	movwf	??_I2C_SlaveDefRdInterruptHandler
  5557  02E9  0870               	movf	??_I2C_SlaveDefRdInterruptHandler,w
  5558  02EA  0020               	movlb	0	; select bank0
  5559  02EB  00B7               	movwf	_i2cRdData	;volatile
  5560  02EC                     i1l161:
  5561  02EC  0008               	return
  5562  02ED                     __end_of_I2C_SlaveDefRdInterruptHandler:
  5563                           
  5564                           	psect	text50
  5565  02F5                     __ptext50:	
  5566 ;; *************** function _I2C_SlaveIsTxBufEmpty *****************
  5567 ;; Defined at:
  5568 ;;		line 256 in file "../src/i2c_slave.c"
  5569 ;; Parameters:    Size  Location     Type
  5570 ;;		None
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;		None
  5573 ;; Return value:  Size  Location     Type
  5574 ;;                  1    wreg      _Bool 
  5575 ;; Registers used:
  5576 ;;		wreg, status,0
  5577 ;; Tracked objects:
  5578 ;;		On entry : 0/0
  5579 ;;		On exit  : 0/0
  5580 ;;		Unchanged: 0/0
  5581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5586 ;;Total ram usage:        0 bytes
  5587 ;; Hardware stack levels used:    1
  5588 ;; This function calls:
  5589 ;;		Nothing
  5590 ;; This function is called by:
  5591 ;;		_I2C_Isr
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           
  5595                           
  5596                           ;psect for function _I2C_SlaveIsTxBufEmpty
  5597  02F5                     _I2C_SlaveIsTxBufEmpty:
  5598  02F5                     i1l1531:	
  5599                           ;incstack = 0
  5600                           ; Regs used in _I2C_SlaveIsTxBufEmpty: [wreg+status,0]
  5601                           
  5602                           
  5603                           ;../src/i2c_slave.c: 258:     return !SSP1STATbits.BF;
  5604  02F5  1003               	clrc
  5605  02F6  0024               	movlb	4	; select bank4
  5606  02F7  1C14               	btfss	20,0	;volatile
  5607  02F8  1403               	setc
  5608  02F9  3000               	movlw	0
  5609  02FA  3D09               	addwfc	9,w
  5610  02FB                     i1l215:
  5611  02FB  0008               	return
  5612  02FC                     __end_of_I2C_SlaveIsTxBufEmpty:
  5613                           
  5614                           	psect	text51
  5615  034F                     __ptext51:	
  5616 ;; *************** function _I2C_SlaveIsRxBufFull *****************
  5617 ;; Defined at:
  5618 ;;		line 261 in file "../src/i2c_slave.c"
  5619 ;; Parameters:    Size  Location     Type
  5620 ;;		None
  5621 ;; Auto vars:     Size  Location     Type
  5622 ;;		None
  5623 ;; Return value:  Size  Location     Type
  5624 ;;                  1    wreg      _Bool 
  5625 ;; Registers used:
  5626 ;;		wreg, status,2, status,0
  5627 ;; Tracked objects:
  5628 ;;		On entry : 0/0
  5629 ;;		On exit  : 0/0
  5630 ;;		Unchanged: 0/0
  5631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5636 ;;Total ram usage:        0 bytes
  5637 ;; Hardware stack levels used:    1
  5638 ;; This function calls:
  5639 ;;		Nothing
  5640 ;; This function is called by:
  5641 ;;		_I2C_Isr
  5642 ;; This function uses a non-reentrant model
  5643 ;;
  5644                           
  5645                           
  5646                           ;psect for function _I2C_SlaveIsRxBufFull
  5647  034F                     _I2C_SlaveIsRxBufFull:
  5648  034F                     i1l1539:	
  5649                           ;incstack = 0
  5650                           ; Regs used in _I2C_SlaveIsRxBufFull: [wreg+status,2+status,0]
  5651                           
  5652                           
  5653                           ;../src/i2c_slave.c: 263:     return SSP1STATbits.BF;
  5654  034F  0024               	movlb	4	; select bank4
  5655  0350  0814               	movf	20,w	;volatile
  5656  0351  3901               	andlw	1
  5657  0352                     i1l218:
  5658  0352  0008               	return
  5659  0353                     __end_of_I2C_SlaveIsRxBufFull:
  5660                           
  5661                           	psect	text52
  5662  0342                     __ptext52:	
  5663 ;; *************** function _I2C_SlaveIsRead *****************
  5664 ;; Defined at:
  5665 ;;		line 240 in file "../src/i2c_slave.c"
  5666 ;; Parameters:    Size  Location     Type
  5667 ;;		None
  5668 ;; Auto vars:     Size  Location     Type
  5669 ;;		None
  5670 ;; Return value:  Size  Location     Type
  5671 ;;                  1    wreg      _Bool 
  5672 ;; Registers used:
  5673 ;;		wreg, status,2, status,0
  5674 ;; Tracked objects:
  5675 ;;		On entry : 0/0
  5676 ;;		On exit  : 0/0
  5677 ;;		Unchanged: 0/0
  5678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5683 ;;Total ram usage:        0 bytes
  5684 ;; Hardware stack levels used:    1
  5685 ;; This function calls:
  5686 ;;		Nothing
  5687 ;; This function is called by:
  5688 ;;		_I2C_Isr
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           
  5693                           ;psect for function _I2C_SlaveIsRead
  5694  0342                     _I2C_SlaveIsRead:
  5695  0342                     i1l1523:	
  5696                           ;incstack = 0
  5697                           ; Regs used in _I2C_SlaveIsRead: [wreg+status,2+status,0]
  5698                           
  5699                           
  5700                           ;../src/i2c_slave.c: 242:     return (SSP1STATbits.R_nW);
  5701  0342  0024               	movlb	4	; select bank4
  5702  0343  0C14               	rrf	20,w	;volatile
  5703  0344  0C89               	rrf	9,f
  5704  0345  3901               	andlw	1
  5705  0346                     i1l206:
  5706  0346  0008               	return
  5707  0347                     __end_of_I2C_SlaveIsRead:
  5708                           
  5709                           	psect	text53
  5710  02FC                     __ptext53:	
  5711 ;; *************** function _I2C_SlaveIsAddr *****************
  5712 ;; Defined at:
  5713 ;;		line 235 in file "../src/i2c_slave.c"
  5714 ;; Parameters:    Size  Location     Type
  5715 ;;		None
  5716 ;; Auto vars:     Size  Location     Type
  5717 ;;		None
  5718 ;; Return value:  Size  Location     Type
  5719 ;;                  1    wreg      _Bool 
  5720 ;; Registers used:
  5721 ;;		wreg, status,0
  5722 ;; Tracked objects:
  5723 ;;		On entry : 0/0
  5724 ;;		On exit  : 0/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5731 ;;Total ram usage:        0 bytes
  5732 ;; Hardware stack levels used:    1
  5733 ;; This function calls:
  5734 ;;		Nothing
  5735 ;; This function is called by:
  5736 ;;		_I2C_Isr
  5737 ;; This function uses a non-reentrant model
  5738 ;;
  5739                           
  5740                           
  5741                           ;psect for function _I2C_SlaveIsAddr
  5742  02FC                     _I2C_SlaveIsAddr:
  5743  02FC                     i1l1519:	
  5744                           ;incstack = 0
  5745                           ; Regs used in _I2C_SlaveIsAddr: [wreg+status,0]
  5746                           
  5747                           
  5748                           ;../src/i2c_slave.c: 237:     return !(SSP1STATbits.D_nA);
  5749  02FC  1003               	clrc
  5750  02FD  0024               	movlb	4	; select bank4
  5751  02FE  1E94               	btfss	20,5	;volatile
  5752  02FF  1403               	setc
  5753  0300  3000               	movlw	0
  5754  0301  3D09               	addwfc	9,w
  5755  0302                     i1l203:
  5756  0302  0008               	return
  5757  0303                     __end_of_I2C_SlaveIsAddr:
  5758                           
  5759                           	psect	text54
  5760  036B                     __ptext54:	
  5761 ;; *************** function _I2C_SlaveClearIrq *****************
  5762 ;; Defined at:
  5763 ;;		line 245 in file "../src/i2c_slave.c"
  5764 ;; Parameters:    Size  Location     Type
  5765 ;;		None
  5766 ;; Auto vars:     Size  Location     Type
  5767 ;;		None
  5768 ;; Return value:  Size  Location     Type
  5769 ;;                  1    wreg      void 
  5770 ;; Registers used:
  5771 ;;		None
  5772 ;; Tracked objects:
  5773 ;;		On entry : 0/0
  5774 ;;		On exit  : 0/0
  5775 ;;		Unchanged: 0/0
  5776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5781 ;;Total ram usage:        0 bytes
  5782 ;; Hardware stack levels used:    1
  5783 ;; This function calls:
  5784 ;;		Nothing
  5785 ;; This function is called by:
  5786 ;;		_I2C_Isr
  5787 ;; This function uses a non-reentrant model
  5788 ;;
  5789                           
  5790                           
  5791                           ;psect for function _I2C_SlaveClearIrq
  5792  036B                     _I2C_SlaveClearIrq:
  5793  036B                     i1l1517:	
  5794                           ;incstack = 0
  5795                           ; Regs used in _I2C_SlaveClearIrq: []
  5796                           
  5797                           
  5798                           ;../src/i2c_slave.c: 247:     PIR1bits.SSP1IF = 0;
  5799  036B  0020               	movlb	0	; select bank0
  5800  036C  1191               	bcf	17,3	;volatile
  5801  036D                     i1l209:
  5802  036D  0008               	return
  5803  036E                     __end_of_I2C_SlaveClearIrq:
  5804                           
  5805                           	psect	text55
  5806  0291                     __ptext55:	
  5807 ;; *************** function _I2C_SlaveAddrCallBack *****************
  5808 ;; Defined at:
  5809 ;;		line 186 in file "../src/i2c_slave.c"
  5810 ;; Parameters:    Size  Location     Type
  5811 ;;		None
  5812 ;; Auto vars:     Size  Location     Type
  5813 ;;		None
  5814 ;; Return value:  Size  Location     Type
  5815 ;;                  1    wreg      void 
  5816 ;; Registers used:
  5817 ;;		wreg, status,2, status,0, pclath, cstack
  5818 ;; Tracked objects:
  5819 ;;		On entry : 0/0
  5820 ;;		On exit  : 0/0
  5821 ;;		Unchanged: 0/0
  5822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5827 ;;Total ram usage:        0 bytes
  5828 ;; Hardware stack levels used:    1
  5829 ;; Hardware stack levels required when called:    2
  5830 ;; This function calls:
  5831 ;;		Absolute function
  5832 ;;		_I2C_SlaveDefAddrInterruptHandler
  5833 ;; This function is called by:
  5834 ;;		_I2C_Isr
  5835 ;; This function uses a non-reentrant model
  5836 ;;
  5837                           
  5838                           
  5839                           ;psect for function _I2C_SlaveAddrCallBack
  5840  0291                     _I2C_SlaveAddrCallBack:
  5841  0291                     i1l1527:	
  5842                           ;incstack = 0
  5843                           ; Regs used in _I2C_SlaveAddrCallBack: [wreg+status,2+status,0+pclath+cstack]
  5844                           
  5845                           
  5846                           ;../src/i2c_slave.c: 188:     if (I2C_SlaveAddrInterruptHandler) {
  5847  0291  0020               	movlb	0	; select bank0
  5848  0292  0829               	movf	_I2C_SlaveAddrInterruptHandler,w
  5849  0293  042A               	iorwf	_I2C_SlaveAddrInterruptHandler+1,w
  5850  0294  1903               	btfsc	3,2
  5851  0295  2A97               	goto	u27_21
  5852  0296  2A98               	goto	u27_20
  5853  0297                     u27_21:
  5854  0297  2A9D               	goto	i1l178
  5855  0298                     u27_20:
  5856  0298                     i1l1529:
  5857                           
  5858                           ;../src/i2c_slave.c: 189:         I2C_SlaveAddrInterruptHandler();
  5859  0298  082A               	movf	_I2C_SlaveAddrInterruptHandler+1,w
  5860  0299  008A               	movwf	10
  5861  029A  0829               	movf	_I2C_SlaveAddrInterruptHandler,w
  5862  029B  000A               	callw
  5863  029C  3182               	pagesel	$
  5864  029D                     i1l178:
  5865  029D  0008               	return
  5866  029E                     __end_of_I2C_SlaveAddrCallBack:
  5867                           
  5868                           	psect	text56
  5869  02ED                     __ptext56:	
  5870 ;; *************** function _I2C_SlaveDefAddrInterruptHandler *****************
  5871 ;; Defined at:
  5872 ;;		line 193 in file "../src/i2c_slave.c"
  5873 ;; Parameters:    Size  Location     Type
  5874 ;;		None
  5875 ;; Auto vars:     Size  Location     Type
  5876 ;;		None
  5877 ;; Return value:  Size  Location     Type
  5878 ;;                  1    wreg      void 
  5879 ;; Registers used:
  5880 ;;		wreg, pclath, cstack
  5881 ;; Tracked objects:
  5882 ;;		On entry : 0/0
  5883 ;;		On exit  : 0/0
  5884 ;;		Unchanged: 0/0
  5885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5888 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5889 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5890 ;;Total ram usage:        1 bytes
  5891 ;; Hardware stack levels used:    1
  5892 ;; Hardware stack levels required when called:    1
  5893 ;; This function calls:
  5894 ;;		_I2C_SlaveGetRxData
  5895 ;; This function is called by:
  5896 ;;		_I2C_Open
  5897 ;;		_I2C_SlaveAddrCallBack
  5898 ;; This function uses a non-reentrant model
  5899 ;;
  5900                           
  5901                           
  5902                           ;psect for function _I2C_SlaveDefAddrInterruptHandler
  5903  02ED                     _I2C_SlaveDefAddrInterruptHandler:
  5904  02ED                     i1l1491:	
  5905                           ;incstack = 0
  5906                           ; Regs used in _I2C_SlaveDefAddrInterruptHandler: [wreg+pclath+cstack]
  5907                           
  5908                           
  5909                           ;../src/i2c_slave.c: 194:     i2cSlaveAddr = I2C_SlaveGetRxData();
  5910  02ED  3183  236E  3182   	fcall	_I2C_SlaveGetRxData
  5911  02F0  00F0               	movwf	??_I2C_SlaveDefAddrInterruptHandler
  5912  02F1  0870               	movf	??_I2C_SlaveDefAddrInterruptHandler,w
  5913  02F2  0020               	movlb	0	; select bank0
  5914  02F3  00B6               	movwf	_i2cSlaveAddr	;volatile
  5915  02F4                     i1l181:
  5916  02F4  0008               	return
  5917  02F5                     __end_of_I2C_SlaveDefAddrInterruptHandler:
  5918                           
  5919                           	psect	text57
  5920  036E                     __ptext57:	
  5921 ;; *************** function _I2C_SlaveGetRxData *****************
  5922 ;; Defined at:
  5923 ;;		line 271 in file "../src/i2c_slave.c"
  5924 ;; Parameters:    Size  Location     Type
  5925 ;;		None
  5926 ;; Auto vars:     Size  Location     Type
  5927 ;;		None
  5928 ;; Return value:  Size  Location     Type
  5929 ;;                  1    wreg      unsigned char 
  5930 ;; Registers used:
  5931 ;;		wreg
  5932 ;; Tracked objects:
  5933 ;;		On entry : 0/0
  5934 ;;		On exit  : 0/0
  5935 ;;		Unchanged: 0/0
  5936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5941 ;;Total ram usage:        0 bytes
  5942 ;; Hardware stack levels used:    1
  5943 ;; This function calls:
  5944 ;;		Nothing
  5945 ;; This function is called by:
  5946 ;;		_I2C_Isr
  5947 ;;		_I2C_SlaveDefRdInterruptHandler
  5948 ;;		_I2C_SlaveDefAddrInterruptHandler
  5949 ;; This function uses a non-reentrant model
  5950 ;;
  5951                           
  5952                           
  5953                           ;psect for function _I2C_SlaveGetRxData
  5954  036E                     _I2C_SlaveGetRxData:
  5955  036E                     i1l1475:	
  5956                           ;incstack = 0
  5957                           ; Regs used in _I2C_SlaveGetRxData: [wreg]
  5958                           
  5959                           
  5960                           ;../src/i2c_slave.c: 273:     return SSP1BUF;
  5961  036E  0024               	movlb	4	; select bank4
  5962  036F  0811               	movf	17,w	;volatile
  5963  0370                     i1l224:
  5964  0370  0008               	return
  5965  0371                     __end_of_I2C_SlaveGetRxData:
  5966  007E                     btemp	set	126	;btemp
  5967  007E                     int$flags	set	126
  5968  007E                     wtemp0	set	126
  5969                           
  5970                           	psect	config
  5971                           
  5972                           ;Config register CONFIG1 @ 0x8007
  5973                           ;	Oscillator Selection Bits
  5974                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5975                           ;	Watchdog Timer Enable
  5976                           ;	WDTE = OFF, WDT disabled
  5977                           ;	Power-up Timer Enable
  5978                           ;	PWRTE = OFF, PWRT disabled
  5979                           ;	MCLR Pin Function Select
  5980                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5981                           ;	Flash Program Memory Code Protection
  5982                           ;	CP = OFF, Program memory code protection is disabled
  5983                           ;	Brown-out Reset Enable
  5984                           ;	BOREN = ON, Brown-out Reset enabled
  5985                           ;	Clock Out Enable
  5986                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5987                           ;	Internal/External Switchover Mode
  5988                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  5989                           ;	Fail-Safe Clock Monitor Enable
  5990                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5991  8007                     	org	32775
  5992  8007  3FE4               	dw	16356
  5993                           
  5994                           ;Config register CONFIG2 @ 0x8008
  5995                           ;	Flash Memory Self-Write Protection
  5996                           ;	WRT = OFF, Write protection off
  5997                           ;	CPU System Clock Selection Bit
  5998                           ;	CPUDIV = NOCLKDIV, NO CPU system divide
  5999                           ;	USB Low SPeed Clock Selection bit
  6000                           ;	USBLSCLK = 48MHz, System clock expects 48 MHz, FS/LS USB CLKENs divide-by is set to 8.
  6001                           ;	PLL Multipler Selection Bit
  6002                           ;	PLLMULT = 4x, 4x Output Frequency Selected
  6003                           ;	PLL Enable Bit
  6004                           ;	PLLEN = DISABLED, 3x or 4x PLL Disabled
  6005                           ;	Stack Overflow/Underflow Reset Enable
  6006                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  6007                           ;	Brown-out Reset Voltage Selection
  6008                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  6009                           ;	Low-Power Brown Out Reset
  6010                           ;	LPBOR = OFF, Low-Power BOR is disabled
  6011                           ;	Low-Voltage Programming Enable
  6012                           ;	LVP = ON, Low-voltage programming enabled
  6013  8008                     	org	32776
  6014  8008  3E4F               	dw	15951

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         28
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      7      35
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    I2C_SlaveBusColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Slave_InterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Slave_InterruptHandler(), Absolute function(), 

    I2C_SlaveSetWrColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefWrColInterruptHandler(), 

    I2C_SlaveWrColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), I2C_SlaveDefWrColInterruptHandler(), 

    I2C_SlaveSetAddrIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefAddrInterruptHandler(), 

    I2C_SlaveAddrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), I2C_SlaveDefAddrInterruptHandler(), 

    I2C_SlaveSetWriteIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefWrInterruptHandler(), 

    I2C_SlaveWrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), I2C_SlaveDefWrInterruptHandler(), 

    I2C_SlaveSetReadIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefRdInterruptHandler(), 

    I2C_SlaveRdInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), I2C_SlaveDefRdInterruptHandler(), 

    I2C_SlaveSetIsrHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_Isr(), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), I2C_Isr(), 


Critical Paths under _main in COMMON

    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _Read_Ldr->_ADC_GetConversion
    _I2C_Read_Write->_Data_to_master
    _I2C_Read_Write->_PWM1_LoadDutyValue
    _I2C_Read_Write->_PWM2_LoadDutyValue
    _I2C_Open->_I2C_SlaveSetAddrIntHandler
    _I2C_Open->_I2C_SlaveSetIsrHandler
    _I2C_Open->_I2C_SlaveSetReadIntHandler
    _I2C_Open->_I2C_SlaveSetWrColIntHandler
    _I2C_Open->_I2C_SlaveSetWriteIntHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C_Isr
    _TMR1_ISR->_TMR1_WriteTimer
    _I2C_Isr->_I2C_reg_Slave_InterruptHandler
    _I2C_SlaveWrCallBack->_I2C_SlaveDefWrInterruptHandler
    _I2C_SlaveDefWrInterruptHandler->_I2C_SlaveSendTxData
    _I2C_SlaveRdCallBack->_I2C_SlaveDefRdInterruptHandler
    _I2C_SlaveAddrCallBack->_I2C_SlaveDefAddrInterruptHandler

Critical Paths under _main in BANK0

    _main->_Read_Ldr
    _Read_Ldr->_ADC_GetConversion
    _I2C_Read_Write->_PWM1_LoadDutyValue
    _I2C_Read_Write->_PWM2_LoadDutyValue

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1086
                 _Clear_I2C_reg_flag
                    _Clear_TMR1_flag
                        _Get_I2C_reg
                   _Get_I2C_reg_flag
                      _Get_TMR1_flag
                           _I2C_Open
                     _I2C_Read_Write
                           _Read_Ldr
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
                     _ADC_Initialize
                   _Datos_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0      98
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Datos_Initialize                                     1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Read_Ldr                                             5     5      0      37
                                              2 BANK0      5     5      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    4     2      2      31
                                              4 COMMON     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Read_Write                                       4     4      0     431
                                              2 BANK0      4     4      0
                _Clear_I2C_data_flag
                     _Data_to_master
                  _Get_I2C_data_flag
                _I2C_data_slave_flag
                 _PWM1_LoadDutyValue
                 _PWM2_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM2_LoadDutyValue                                   4     2      2     152
                                              4 COMMON     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _PWM1_LoadDutyValue                                   4     2      2     152
                                              4 COMMON     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_data_slave_flag                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Get_I2C_data_flag                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Data_to_master                                       2     2      0      22
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Clear_I2C_data_flag                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Open                                             0     0      0     520
                 _I2C_SlaveEnableIrq
                      _I2C_SlaveOpen
         _I2C_SlaveSetAddrIntHandler
             _I2C_SlaveSetIsrHandler
         _I2C_SlaveSetReadIntHandler
              _I2C_SlaveSetSlaveAddr
              _I2C_SlaveSetSlaveMask
        _I2C_SlaveSetWrColIntHandler
        _I2C_SlaveSetWriteIntHandler
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetWriteIntHandler                          2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetWrColIntHandler                          2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetSlaveMask                                1     1      0      15
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetSlaveAddr                                1     1      0      15
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetReadIntHandler                           2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetIsrHandler                               2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetAddrIntHandler                           2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveOpen                                        1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveEnableIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Get_TMR1_flag                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Get_I2C_reg_flag                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Get_I2C_reg                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Clear_TMR1_flag                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Clear_I2C_reg_flag                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     208
                   Absolute function *
                            _I2C_Isr *
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     164
                   Absolute function *
        _TMR1_Slave_InterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     164
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_Slave_InterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_Isr                                              2     2      0      44
                                              2 COMMON     2     2      0
              _I2C_SlaveAddrCallBack
                  _I2C_SlaveClearIrq
                 _I2C_SlaveGetRxData
                    _I2C_SlaveIsAddr
                    _I2C_SlaveIsRead
               _I2C_SlaveIsRxBufFull
              _I2C_SlaveIsTxBufEmpty
                _I2C_SlaveRdCallBack
              _I2C_SlaveReleaseClock
                _I2C_SlaveWrCallBack
     _I2C_reg_Slave_InterruptHandler
 ---------------------------------------------------------------------------------
 (6) _I2C_reg_Slave_InterruptHandler                       2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveWrCallBack                                  0     0      0      22
                   Absolute function *
     _I2C_SlaveDefWrInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_SlaveDefWrInterruptHandler                       1     1      0      22
                                              1 COMMON     1     1      0
                 _Get_Data_to_master
                _I2C_SlaveSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_SlaveSendTxData                                  1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _Get_Data_to_master                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveReleaseClock                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveRdCallBack                                  0     0      0       0
                   Absolute function *
     _I2C_SlaveDefRdInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_SlaveDefRdInterruptHandler                       1     1      0       0
                                              0 COMMON     1     1      0
                 _I2C_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveIsTxBufEmpty                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveIsRxBufFull                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveIsRead                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveIsAddr                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveClearIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveAddrCallBack                                0     0      0       0
                   Absolute function *
   _I2C_SlaveDefAddrInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_SlaveDefAddrInterruptHandler                     1     1      0       0
                                              0 COMMON     1     1      0
                 _I2C_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (8) _I2C_SlaveGetRxData                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Clear_I2C_reg_flag
   _Clear_TMR1_flag
   _Get_I2C_reg
   _Get_I2C_reg_flag
   _Get_TMR1_flag
   _I2C_Open
     _I2C_SlaveEnableIrq
     _I2C_SlaveOpen
     _I2C_SlaveSetAddrIntHandler
     _I2C_SlaveSetIsrHandler
     _I2C_SlaveSetReadIntHandler
     _I2C_SlaveSetSlaveAddr
     _I2C_SlaveSetSlaveMask
     _I2C_SlaveSetWrColIntHandler
     _I2C_SlaveSetWriteIntHandler
   _I2C_Read_Write
     _Clear_I2C_data_flag
     _Data_to_master
     _Get_I2C_data_flag
     _I2C_data_slave_flag
     _PWM1_LoadDutyValue
     _PWM2_LoadDutyValue
   _Read_Ldr
     _ADC_GetConversion
   _SYSTEM_Initialize
     _ADC_Initialize
     _Datos_Initialize
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _I2C_Isr *
     _I2C_SlaveAddrCallBack
       Absolute function(Fake) *
       _I2C_SlaveDefAddrInterruptHandler *
         _I2C_SlaveGetRxData
     _I2C_SlaveClearIrq
     _I2C_SlaveGetRxData
     _I2C_SlaveIsAddr
     _I2C_SlaveIsRead
     _I2C_SlaveIsRxBufFull
     _I2C_SlaveIsTxBufEmpty
     _I2C_SlaveRdCallBack
       Absolute function(Fake) *
       _I2C_SlaveDefRdInterruptHandler *
         _I2C_SlaveGetRxData
     _I2C_SlaveReleaseClock
     _I2C_SlaveWrCallBack
       Absolute function(Fake) *
       _I2C_SlaveDefWrInterruptHandler *
         _Get_Data_to_master
         _I2C_SlaveSendTxData
     _I2C_reg_Slave_InterruptHandler
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_Slave_InterruptHandler *
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      7      23       5       43.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      2D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      2D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Nov 23 13:45:37 2020

                    ??_I2C_data_slave_flag 0074                                         l20 01CD  
                                       l23 01D5                                         l17 02C3  
                                       u20 026F                                         u21 026E  
                                       _d1 0020       __size_of_TMR1_Slave_InterruptHandler 0003  
                                      l200 035B                                        l126 02BA  
                                      l151 032C                                        l129 0150  
                                      l154 0326                                        l402 02E4  
                                      l227 0314                                        l164 031A  
                                      l405 0207                                        l174 0332  
                                      l191 0276                                        l520 0372  
                                      l184 0320                                        l281 034A  
                                      l194 033C                                        l514 0269  
                                      l426 02DC                                        l523 0374  
                                      l275 01BA                                        l532 0361  
                                      l197 0337                                        l541 0355  
                                      l429 01EE                                        l381 024A  
                                      l278 02B1                                        l454 021F  
                                      l535 0364                                        l544 0358  
                                      l529 035E                                        l538 034E  
                                      l466 030E                                        l547 019B  
                                      l477 02D4                                        l559 011E  
                                      u500 01D1                                        u501 01D0  
                                      _PR2 001B                                        u530 00C8  
                                      u515 0200                                        u531 00C7  
                                      u540 0161                                        u525 01E7  
                                      u541 0160                                        u550 016F  
                                      u551 016E                           ?_Clear_TMR1_flag 0070  
                    ??_I2C_SlaveRdCallBack 0071                            _timer1ReloadVal 0040  
                      _I2C_SlaveSendTxData 033D              I2C_SlaveSetSlaveMask@maskAddr 0074  
                          __end_of_I2C_Isr 00BE       __size_of_I2C_SlaveSetWrColIntHandler 0006  
                          _TMR2_Initialize 02CD                                        wreg 0009  
                      _I2C_SlaveWrCallBack 0277                                       l1111 02C0  
                                     l1113 02C1                                       l1105 02BB  
                                     l1107 02BE                                       l1131 02B8  
                                     l1211 023D                                       l1141 0274  
                                     l1109 02BF                                       l1133 02B9  
                                     l1221 0248                                       l1213 023F  
                                     l1205 0236                                       l1143 0275  
                                     l1135 026A                                       l1127 02B2  
                                     l1223 02A9                                       l1215 0242  
                                     l1207 0238                                       l1231 0347  
                                     l1161 0359                                       l1137 026F  
                                     l1129 02B4                                       l1225 02AC  
                                     l1217 0244                                       l1209 023A  
                                     l1233 02DD                                       l1241 02D1  
                                     l1139 0270                                       l1147 0339  
                                     l1227 02AD                                       l1219 0246  
                                     l1235 02D5                                       l1243 02D2  
                                     l1149 0334                                       l1229 02AF  
                                     l1237 02CD                                       l1511 0321  
                                     l1239 02D0                                       l1345 0371  
                                     l1513 032D                                       l1601 0356  
                                     l1507 0327                                       l1515 031B  
                                     l1603 011F                                       l1509 0315  
                                     l1605 014D                                       l1359 0373  
                                     l1553 0310                                       l1801 017F  
                                     l1561 020A                                       l1707 0362  
                                     l1811 00C8                                       l1803 0185  
                                     l1555 025C                                       l1571 0215  
                                     l1563 020C                                       l1821 00EC  
                                     l1813 00CD                                       l1805 018F  
                                     l1557 0265                                       l1493 0309  
                                     l1573 021C                                       l1565 020E  
                                     l1823 00F1                                       l1815 00D7  
                                     l1831 00FF                                       l1807 0195  
                                     l1567 020F                                       l1559 0208  
                                     l1673 035F                                       l1825 00F6  
                                     l1833 0119                                       l1817 00E3  
                                     l1809 00C0                                       l1569 0213  
                                     l1649 019C                                       l1841 0154  
                                     l1595 034B                                       l1827 00FB  
                                     l1819 00E7                                       l1851 0167  
                                     l1843 0155                                       l1669 035C  
                                     l1597 0353                                       l1853 016F  
                                     l1845 0159                                       l1791 01D1  
                                     l1783 01BD                                       l1855 0175  
                                     l1847 0161                                       l1839 0151  
                                     l1785 01C9                                       l1849 0164  
                                     l1795 01EF                                       l1787 01CA  
                                     l1797 01D6                                       l1789 01CB  
                                     l1799 017B                                       l1897 0108  
                  __end_of_PWM1_Initialize 02E5                                       _LATA 010C  
                                     _LATC 010E          I2C_reg_Slave_InterruptHandler@reg 0071  
                                     _TMR2 001A                                       _WPUA 020C  
                  __end_of_I2C_SlaveIsAddr 0303                    __end_of_I2C_SlaveIsRead 0347  
                                     _main 0151          I2C_SlaveSetAddrIntHandler@handler 0074  
                                     fsr0h 0005                                       indf0 0000  
                                     fsr0l 0004                           __end_of_I2C_Open 0151  
                                     btemp 007E                       ?_I2C_SlaveSendTxData 0070  
                                     start 0035                       ?_I2C_SlaveWrCallBack 0070  
               ??_TMR1_SetInterruptHandler 0076             __size_of_I2C_SlaveAddrCallBack 000D  
        I2C_SlaveSetReadIntHandler@handler 0074              __end_of_I2C_SlaveAddrCallBack 029E  
                    __end_of_Get_TMR1_flag 0373                    __end_of_PWM2_Initialize 02DD  
           __size_of_OSCILLATOR_Initialize 0009              __end_of_OSCILLATOR_Initialize 02B2  
 __end_of_I2C_SlaveDefAddrInterruptHandler 02F5  __size_of_I2C_SlaveDefAddrInterruptHandler 0008  
       ??_I2C_SlaveDefAddrInterruptHandler 0070          ?_I2C_SlaveDefAddrInterruptHandler 0070  
         _I2C_SlaveDefAddrInterruptHandler 02ED                                      ?_main 0070  
                                    _T1CON 0018                                      _T2CON 001C  
                                    i1l203 0302                                      i1l212 036A  
                                    i1l221 0341                                      i1l206 0346  
                                    i1l230 0376                                      i1l215 02FB  
                                    i1l311 001A                                      i1l224 0370  
                                    i1l312 0033                                      i1l209 036D  
                                    i1l161 02EC                                      i1l313 0025  
                                    i1l218 0352                                      i1l171 02A8  
                                    i1l148 00BD                                      i1l181 02F4  
                                    i1l158 0290                                      i1l318 0033  
                                    i1l168 0283                                      i1l178 029D  
                                    i1l517 0367                                      i1l526 02CC  
                                    i1l463 0235                  __size_of_Datos_Initialize 000E  
                                    i1l459 025B                      _I2C_SlaveReleaseClock 0368  
                                    u32_20 0250                                      u32_21 024F  
                                    u33_20 0052                                      u41_20 000A  
                                    u33_21 0051                                      u41_21 0009  
                                    _TMR1H 0017                                      _TMR1L 0016  
                                    u34_20 005A                                      u42_20 000F  
                                    u34_21 0059                                      u42_21 000E  
                                    u27_20 0298                                      u35_20 006C  
                                    u43_20 0014                                      u27_21 0297  
                                    u35_21 006B                                      u43_21 0013  
                                    u28_20 027E                                      u36_20 0081  
                                    u44_20 001F                                      u28_21 027D  
                                    u36_21 0080                                      u44_21 001E  
                                    u29_20 028B                                      u37_20 0091  
                                    u45_20 0024                                      u29_21 028A  
                                    u37_21 0090                                      u45_21 0023  
                                    u38_20 009A                                      u46_20 002A  
                                    u38_21 0099                                      u46_21 0029  
                                    u39_20 0230                                      u47_20 002F  
                                    u39_21 022F                                      u47_21 002E  
                                    _TRISA 008C                                      _TRISC 008E  
                         __end_of_TMR1_ISR 0236                     ??_I2C_SlaveIsRxBufFull 0070  
                           _WDT_Initialize 0347            __size_of_I2C_SlaveSetIsrHandler 0006  
                  __end_of_TMR1_Initialize 0220                                _Get_I2C_reg 035F  
                                    pclath 000A                                      status 0003  
                 I2C_Read_Write@i2c_WrData 003D                                      wtemp0 007E  
                        ?_Get_I2C_reg_flag 0070                      ??_I2C_SlaveSendTxData 0070  
                          _TMR1_WriteTimer 024B                      ??_I2C_SlaveWrCallBack 0072  
                       ??_Get_I2C_reg_flag 0074                      _I2C_SlaveSetSlaveAddr 0338  
                          __initialization 0037                      _I2C_SlaveSetSlaveMask 0333  
                   __size_of_I2C_SlaveOpen 000D                               __end_of_main 017B  
                         __end_of_Read_Ldr 019C                    __end_of_TMR2_Initialize 02D5  
              ?_INTERRUPT_InterruptManager 0070                                  ??_I2C_Isr 0072  
                                   ??_main 0076                 __end_of_Clear_I2C_reg_flag 0365  
                   __end_of_WDT_Initialize 034B                _I2C_SlaveRdInterruptHandler 002D  
              _I2C_SlaveWrInterruptHandler 002B                 __end_of_I2C_SlaveEnableIrq 035C  
               __end_of_I2C_SlaveGetRxData 0371                                     _ADCON0 009D  
                                   _ADCON1 009E                                     _ADCON2 009F  
                                   _ACTCON 039B                                     _ADRESH 009C  
                                   _ADRESL 009B                                     _APFCON 011D  
                                   _ANSELA 018C                                     _ANSELC 018E  
                                   _BORCON 0116                                     _T1GCON 0019  
                        _Get_I2C_data_flag 0353                    TMR1_WriteTimer@timerVal 0070  
                         ?_PWM1_Initialize 0070                                     i1l1523 0342  
                                   i1l1531 02F5                                     i1l1611 0052  
                                   i1l1517 036B                                     i1l1621 0071  
                                   i1l1613 005A                                     i1l1527 0291  
                                   i1l1519 02FC                                     i1l1551 0368  
                                   i1l1535 0277                                     i1l1543 02C5  
                                   i1l1631 0089                                     i1l1623 0076  
                                   i1l1615 005F                                     i1l1607 0047  
                                   i1l1711 000A                                     i1l1529 0298  
                                   i1l1537 027E                                     i1l1545 02C8  
                                   i1l1625 0079                                     i1l1641 00A4  
                                   i1l1617 0064                                     i1l1609 004A  
                                   i1l1721 002A                                     i1l1713 000F  
                                   i1l1475 036E                                     i1l1491 02ED  
                                   i1l1539 034F                                     i1l1547 0284  
                                   i1l1483 033E                                     i1l1635 0092  
                                   i1l1627 0081                                     i1l1643 00BA  
                                   i1l1619 006C                                     i1l1651 0220  
                                   i1l1723 002F                                     i1l1715 0014  
                                   i1l1485 02E5                                     i1l1549 028B  
                                   i1l1637 009A                                     i1l1629 0085  
                                   i1l1581 0250                                     i1l1653 0222  
                                   i1l1717 001F                                     i1l1709 0006  
                                   i1l1479 0375                                     i1l1487 029E  
                                   i1l1591 0259                                     i1l1583 0251  
                                   i1l1655 0229                                     i1l1489 02A4  
                                   i1l1593 0365                                     i1l1585 0253  
                                   i1l1657 0230                                     i1l1587 0255  
                                   i1l1579 024B                                     i1l1589 0257  
                                   i1l1899 00AC                                     _OSCCON 0099  
                         ?_I2C_SlaveIsAddr 0070                                     _WDTCON 0097  
                         ?_I2C_SlaveIsRead 0070                         ?_Get_I2C_data_flag 0070  
                         ??_Data_to_master 0074                        ??_Get_I2C_data_flag 0074  
                   _I2C_SlaveSetIsrHandler 0327                           ?_PWM2_Initialize 0070  
                  __size_of_I2C_Read_Write 0061                    __size_of_I2C_Initialize 0009  
                   ?_I2C_SlaveReleaseClock 0070                    ??_I2C_SlaveIsTxBufEmpty 0070  
                                ?_I2C_Open 0070                            ?_WDT_Initialize 0070  
                            _I2C_SlaveOpen 026A                   ADC_GetConversion@channel 0039  
                __end_of_Get_I2C_data_flag 0356   TMR1_SetInterruptHandler@InterruptHandler 0074  
                  __end_of_TMR1_WriteTimer 025C                           ?_TMR1_Initialize 0070  
                        _SYSTEM_Initialize 019C                    __end_of__initialization 0043  
              __end_of_Clear_I2C_data_flag 0359         I2C_SlaveSetWrColIntHandler@handler 0074  
             ??_I2C_SlaveSetAddrIntHandler 0076                         ?_SYSTEM_Initialize 0070  
               __end_of_PWM2_LoadDutyValue 01EF                     ?_I2C_SlaveSetSlaveAddr 0070  
              PWM1_LoadDutyValue@dutyValue 0074                     ?_I2C_SlaveSetSlaveMask 0070  
                           __pcstackCOMMON 0070                        ??_SYSTEM_Initialize 0076  
                                ?_TMR1_ISR 0070                         _PWM1_LoadDutyValue 01EF  
                         ?_TMR2_Initialize 0070             I2C_SlaveSetSlaveAddr@slaveAddr 0074  
             ??_I2C_SlaveSetReadIntHandler 0076                           _Datos_Initialize 025C  
                             _datoParaLeer 0035                             _OPTION_REGbits 0095  
                               ??_I2C_Open 0076                        ?_PWM1_LoadDutyValue 0074  
               __end_of_Get_Data_to_master 0377                             ?_I2C_SlaveOpen 0070  
      __size_of_I2C_SlaveSetAddrIntHandler 0006                  __end_of_SYSTEM_Initialize 01BB  
                               __pbssBANK0 0020        __end_of_TMR1_Slave_InterruptHandler 0368  
              _TMR1_Slave_InterruptHandler 0365                                  ?_Read_Ldr 0070  
      __end_of_I2C_SlaveSetWrColIntHandler 0321                _I2C_SlaveSetWrColIntHandler 031B  
                     ??_PWM1_LoadDutyValue 0038                __end_of_I2C_data_slave_flag 034F  
      __size_of_I2C_SlaveSetReadIntHandler 0006                                 __pmaintext 0151  
                               ??_TMR1_ISR 0072                                 __pintentry 0004  
              __end_of_I2C_SlaveRdCallBack 0291              ??_I2C_SlaveSetWrColIntHandler 0076  
                                  _I2C_Isr 0047                    __size_of_ADC_Initialize 0009  
                             _flag_i2c_reg 0033                                    _PWM1DCH 0612  
                                  _PWM1DCL 0611                                    _PWM2DCH 0615  
                                  _PWM2DCL 0614                                    _OSCTUNE 0098  
                                  _PWM1CON 0613                                    _PWM2CON 0616  
                                  _SSP1ADD 0212                                    _SSP1BUF 0211  
               __size_of_Get_I2C_data_flag 0003                                    _SSP1MSK 0213  
                         ?_TMR1_WriteTimer 0070                   __size_of_Clear_TMR1_flag 0002  
                             ?_Get_I2C_reg 0070                                 ??_Read_Ldr 003A  
                  I2C_SlaveSendTxData@data 0070                      _I2C_SlaveAddrCallBack 0291  
                           _I2C_Read_Write 00BE                             _I2C_Initialize 02B2  
                __size_of_Get_I2C_reg_flag 0003                                    __ptext1 019C  
                                  __ptext2 0347                                    __ptext3 02CD  
                                  __ptext4 0208                                    __ptext5 0309  
                                  __ptext6 02D5                                    __ptext7 02DD  
                                  __ptext8 0236                                    __ptext9 02A9  
                          _RegParaEscribir 0034                                  _T1CONbits 0018  
                          ??_I2C_SlaveOpen 0074                      _OSCILLATOR_Initialize 02A9  
        __size_of_TMR1_SetInterruptHandler 0006                   ??_PIN_MANAGER_Initialize 0074  
                ?_TMR1_SetInterruptHandler 0074              I2C_SlaveSetIsrHandler@handler 0074  
               __size_of_SYSTEM_Initialize 001F                                    clrloop0 0304  
              __end_of_I2C_SlaveSendTxData 0342                       end_of_initialization 0043  
                   __size_of_Get_TMR1_flag 0002                __end_of_I2C_SlaveWrCallBack 0284  
            __size_of_I2C_SlaveIsRxBufFull 0004                         _Clear_I2C_reg_flag 0362  
       __end_of_I2C_SlaveSetAddrIntHandler 0333                 _I2C_SlaveSetAddrIntHandler 032D  
                      ?_Clear_I2C_reg_flag 0070                         _I2C_SlaveEnableIrq 0359  
                       _I2C_SlaveGetRxData 036E                    ?_I2C_SlaveSetIsrHandler 0074  
                             _i2cSlaveAddr 0036                     __end_of_I2C_Read_Write 011F  
                   __end_of_I2C_Initialize 02BB                    ??_I2C_SlaveReleaseClock 0070  
                      ?_I2C_SlaveEnableIrq 0070                        ?_I2C_SlaveGetRxData 0070  
       __end_of_I2C_SlaveSetReadIntHandler 0327                 _I2C_SlaveSetReadIntHandler 0321  
                         ??_WDT_Initialize 0074               ?_I2C_SlaveSetWriteIntHandler 0074  
                     ??_Clear_I2C_reg_flag 0074             __size_of_I2C_SlaveIsTxBufEmpty 0007  
            __end_of_I2C_SlaveIsTxBufEmpty 02FC                          __size_of_I2C_Open 0032  
                     ??_I2C_SlaveEnableIrq 0074                       ??_I2C_SlaveGetRxData 0070  
                  ??_I2C_SlaveSetSlaveAddr 0074                    ??_I2C_SlaveSetSlaveMask 0074  
                 __end_of_Datos_Initialize 026A             __end_of_I2C_SlaveSetIsrHandler 032D  
                        ??_Clear_TMR1_flag 0074                   __size_of_PWM1_Initialize 0008  
         ??_I2C_reg_Slave_InterruptHandler 0070            ?_I2C_reg_Slave_InterruptHandler 0070  
                 __size_of_I2C_SlaveIsAddr 0007                            ?_I2C_Read_Write 0070  
                 __size_of_I2C_SlaveIsRead 0005                     ?_I2C_SlaveAddrCallBack 0070  
                          ?_I2C_Initialize 0070                              _Get_TMR1_flag 0371  
                        __size_of_TMR1_ISR 0016                         _PWM2_LoadDutyValue 01D6  
                           _ADC_Initialize 02BB                                  _i2cRdData 0037  
                   ?_OSCILLATOR_Initialize 0070                                  _i2cWrData 0079  
                      start_initialization 0037                   __size_of_PWM2_Initialize 0008  
                      ?_PWM2_LoadDutyValue 0074            __size_of_PIN_MANAGER_Initialize 0015  
                     __size_of_Get_I2C_reg 0003                         _Get_Data_to_master 0375  
                        __size_of_Read_Ldr 0021                       ??_PWM2_LoadDutyValue 0038  
                 __size_of_TMR1_Initialize 0018                PWM2_LoadDutyValue@dutyValue 0074  
             __size_of_Clear_I2C_data_flag 0003                             ?_Get_TMR1_flag 0070  
                      ?_Get_Data_to_master 0070                     __end_of_ADC_Initialize 02C4  
                                 ?_I2C_Isr 0070                           _Get_I2C_reg_flag 035C  
                  __size_of_Data_to_master 0006                                __pbssCOMMON 0076  
                                ___latbits 0002                              __pcstackBANK0 0038  
                 __size_of_TMR2_Initialize 0008                       ??_Get_Data_to_master 0070  
     __size_of_I2C_SlaveSetWriteIntHandler 0006                                  __pnvBANK0 003E  
              __size_of_PWM1_LoadDutyValue 0019                     _PIN_MANAGER_Initialize 0236  
         __end_of_TMR1_SetInterruptHandler 030F                                  _flag_tmr1 0076  
                          ?_ADC_Initialize 0070               __size_of_I2C_data_slave_flag 0004  
                        ??_PWM1_Initialize 0074               ??_INTERRUPT_InterruptManager 0074  
                        ??_I2C_SlaveIsAddr 0070                          ??_I2C_SlaveIsRead 0070  
         ??_I2C_SlaveDefRdInterruptHandler 0070            ?_I2C_SlaveDefRdInterruptHandler 0070  
         ??_I2C_SlaveDefWrInterruptHandler 0071            ?_I2C_SlaveDefWrInterruptHandler 0070  
                                 _I2C_Open 011F               __size_of_I2C_SlaveRdCallBack 000D  
                        ??_PWM2_Initialize 0074                ?_I2C_SlaveSetAddrIntHandler 0074  
                         _master_read_data 0077                              _flag_i2c_data 0032  
                                clear_ram0 0303                                   _PIE1bits 0091  
                                 _PIE2bits 0092                          _I2C_SlaveClearIrq 036B  
                 __size_of_TMR1_WriteTimer 0011        __size_of_INTERRUPT_InterruptManager 0031  
                          ??_Get_TMR1_flag 0074                                   _PIR1bits 0011  
                                 _PIR2bits 0012                         ?_I2C_SlaveClearIrq 0070  
                                 _SSP1CON1 0215                                   _SSP1CON2 0216  
             __end_of_I2C_SlaveIsRxBufFull 0353                                   _TMR1_ISR 0220  
                                 _SSP1STAT 0214             __size_of_I2C_SlaveReleaseClock 0003  
              ?_I2C_SlaveSetReadIntHandler 0074              __end_of_I2C_SlaveReleaseClock 036B  
                      ??_I2C_SlaveClearIrq 0070                          ??_TMR1_Initialize 0076  
                         __size_of_I2C_Isr 0077                                 _ADCON0bits 009D  
                    __end_of_I2C_SlaveOpen 0277                            _Clear_TMR1_flag 0373  
                                _write_reg 0031          _I2C_SlaveDefWrColInterruptHandler 0000  
                                 _Read_Ldr 017B                          ??_TMR2_Initialize 0074  
                __end_of_I2C_SlaveClearIrq 036E             __size_of_I2C_SlaveSetSlaveAddr 0005  
                         ??_I2C_Read_Write 003A              __end_of_I2C_SlaveSetSlaveAddr 033D  
           __size_of_I2C_SlaveSetSlaveMask 0005              __end_of_I2C_SlaveSetSlaveMask 0338  
             __size_of_I2C_SlaveSendTxData 0005                           ??_I2C_Initialize 0074  
                        ?_Datos_Initialize 0070                    ??_I2C_SlaveAddrCallBack 0071  
             __size_of_I2C_SlaveWrCallBack 000D                          _ADC_GetConversion 01BB  
                       ??_Datos_Initialize 0074                    ??_OSCILLATOR_Initialize 0074  
                       ?_ADC_GetConversion 0074              _I2C_SlaveAddrInterruptHandler 0029  
                 _TMR1_SetInterruptHandler 0309                             _Data_to_master 030F  
                    _TMR1_InterruptHandler 003E                        ??_ADC_GetConversion 0038  
           _I2C_SlaveWrColInterruptHandler 0025     __end_of_I2C_reg_Slave_InterruptHandler 02CD  
  __size_of_I2C_reg_Slave_InterruptHandler 0009             _I2C_reg_Slave_InterruptHandler 02C4  
              __size_of_Clear_I2C_reg_flag 0003                         I2C_Read_Write@data 003C  
                                 __ptext10 02B2                                   __ptext11 025C  
                                 __ptext20 030F                                   __ptext12 02BB  
                                 __ptext21 0356                                   __ptext13 017B  
                                 __ptext30 026A                                   __ptext22 011F  
                                 __ptext14 01BB                                   __ptext31 0359  
                                 __ptext23 0315                                   __ptext15 00BE  
                                 __ptext40 0365                                   __ptext32 0371  
                                 __ptext24 031B                                   __ptext16 01D6  
                                 __ptext41 0047                                   __ptext33 035C  
                                 __ptext25 0333                                   __ptext17 01EF  
                                 __ptext50 02F5                                   __ptext42 02C4  
                                 __ptext34 035F                                   __ptext26 0338  
                                 __ptext18 034B                                   __ptext51 034F  
                                 __ptext43 0277                                   __ptext35 0373  
                                 __ptext27 0321                                   __ptext19 0353  
                                 __ptext52 0342                                   __ptext44 029E  
                                 __ptext36 0362                                   __ptext28 0327  
                                 __ptext53 02FC                                   __ptext45 033D  
                                 __ptext29 032D                                   __ptext54 036B  
                                 __ptext46 0375                                   __ptext38 0220  
                                 __ptext55 0291                                   __ptext47 0368  
                                 __ptext39 024B                                   __ptext56 02ED  
                                 __ptext48 0284                                   __ptext57 036E  
                                 __ptext49 02E5                        _Clear_I2C_data_flag 0356  
                             _SSP1CON1bits 0215                      _I2C_SlaveIsTxBufEmpty 02F5  
              __size_of_I2C_SlaveEnableIrq 0003                __size_of_I2C_SlaveGetRxData 0003  
                 __end_of_Get_I2C_reg_flag 035F                              __size_of_main 002A  
             ?_TMR1_Slave_InterruptHandler 0070                  __end_of_ADC_GetConversion 01D6  
             ?_I2C_SlaveSetWrColIntHandler 0074                       ?_Clear_I2C_data_flag 0070  
                                 int$flags 007E                     __end_of_Data_to_master 0315  
       __end_of_INTERRUPT_InterruptManager 0035                 _INTERRUPT_InterruptManager 0004  
                             _SSP1STATbits 0214                          ??_TMR1_WriteTimer 0072  
                  __end_of_Clear_TMR1_flag 0375                                 _INTCONbits 000B  
                  __size_of_WDT_Initialize 0004                              ??_Get_I2C_reg 0074  
                     _I2C_SlaveIsRxBufFull 034F                                   intlevel1 0000  
                      _I2C_data_slave_flag 034B            _I2C_SlaveBusColInterruptHandler 0027  
               __size_of_I2C_SlaveClearIrq 0003                    ?_PIN_MANAGER_Initialize 0070  
            ??_TMR1_Slave_InterruptHandler 0070                            _PWM1_Initialize 02DD  
                      _I2C_SlaveRdCallBack 0284                           ??_ADC_Initialize 0074  
                          _I2C_SlaveIsAddr 02FC                __size_of_PWM2_LoadDutyValue 0019  
                          _I2C_SlaveIsRead 0342                      ??_Clear_I2C_data_flag 0074  
                Data_to_master@i2c_wr_data 0075                              _i2cSlaveState 0078  
       I2C_SlaveSetWriteIntHandler@handler 0074                            ?_Data_to_master 0070  
                     ?_I2C_data_slave_flag 0070        __end_of_I2C_SlaveSetWriteIntHandler 031B  
              _I2C_SlaveSetWriteIntHandler 0315                       ?_I2C_SlaveRdCallBack 0070  
                          _PWM2_Initialize 02D5                     ?_I2C_SlaveIsTxBufEmpty 0070  
            ??_I2C_SlaveSetWriteIntHandler 0076                __size_of_Get_Data_to_master 0002  
                 ??_I2C_SlaveSetIsrHandler 0076                      ?_I2C_SlaveIsRxBufFull 0070  
           __end_of_PIN_MANAGER_Initialize 024B     __end_of_I2C_SlaveDefRdInterruptHandler 02ED  
  __size_of_I2C_SlaveDefRdInterruptHandler 0008             _I2C_SlaveDefRdInterruptHandler 02E5  
   __end_of_I2C_SlaveDefWrInterruptHandler 02A9    __size_of_I2C_SlaveDefWrInterruptHandler 000B  
           _I2C_SlaveDefWrInterruptHandler 029E                 __end_of_PWM1_LoadDutyValue 0208  
                    _MSSP_InterruptHandler 002F                 __size_of_ADC_GetConversion 001B  
                          _TMR1_Initialize 0208                        __end_of_Get_I2C_reg 0362  
