

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Nov 23 14:00:37 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F1455
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,inline,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,inline,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,inline,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,inline,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,inline,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,delta=2
    73                           	psect	intentry,global,class=CODE,delta=2
    74                           	psect	text60,local,class=CODE,merge=1,delta=2
    75                           	psect	text61,local,class=CODE,merge=1,delta=2
    76                           	psect	text62,local,class=CODE,merge=1,delta=2
    77                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    78                           	dabs	1,0x7E,2
    79  0000                     
    80                           ; Version 2.20
    81                           ; Generated 09/04/2020 GMT
    82                           ; 
    83                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC16F1455 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000E                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  008C                     	;# 
   140  008E                     	;# 
   141  0091                     	;# 
   142  0092                     	;# 
   143  0095                     	;# 
   144  0096                     	;# 
   145  0097                     	;# 
   146  0098                     	;# 
   147  0099                     	;# 
   148  009A                     	;# 
   149  009B                     	;# 
   150  009B                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  010C                     	;# 
   156  010E                     	;# 
   157  0111                     	;# 
   158  0112                     	;# 
   159  0113                     	;# 
   160  0114                     	;# 
   161  0115                     	;# 
   162  0116                     	;# 
   163  0117                     	;# 
   164  0118                     	;# 
   165  0119                     	;# 
   166  011D                     	;# 
   167  018C                     	;# 
   168  018E                     	;# 
   169  0191                     	;# 
   170  0191                     	;# 
   171  0192                     	;# 
   172  0193                     	;# 
   173  0193                     	;# 
   174  0194                     	;# 
   175  0195                     	;# 
   176  0196                     	;# 
   177  0197                     	;# 
   178  0199                     	;# 
   179  019A                     	;# 
   180  019B                     	;# 
   181  019B                     	;# 
   182  019C                     	;# 
   183  019D                     	;# 
   184  019E                     	;# 
   185  019F                     	;# 
   186  020C                     	;# 
   187  0211                     	;# 
   188  0211                     	;# 
   189  0212                     	;# 
   190  0212                     	;# 
   191  0213                     	;# 
   192  0213                     	;# 
   193  0214                     	;# 
   194  0214                     	;# 
   195  0215                     	;# 
   196  0215                     	;# 
   197  0215                     	;# 
   198  0216                     	;# 
   199  0216                     	;# 
   200  0217                     	;# 
   201  0217                     	;# 
   202  0391                     	;# 
   203  0392                     	;# 
   204  0393                     	;# 
   205  039A                     	;# 
   206  039B                     	;# 
   207  0611                     	;# 
   208  0612                     	;# 
   209  0613                     	;# 
   210  0613                     	;# 
   211  0614                     	;# 
   212  0615                     	;# 
   213  0616                     	;# 
   214  0616                     	;# 
   215  0691                     	;# 
   216  0692                     	;# 
   217  0693                     	;# 
   218  0694                     	;# 
   219  0695                     	;# 
   220  0E8E                     	;# 
   221  0E8F                     	;# 
   222  0E90                     	;# 
   223  0E91                     	;# 
   224  0E92                     	;# 
   225  0E93                     	;# 
   226  0E94                     	;# 
   227  0E94                     	;# 
   228  0E95                     	;# 
   229  0E96                     	;# 
   230  0E97                     	;# 
   231  0E98                     	;# 
   232  0E99                     	;# 
   233  0E9A                     	;# 
   234  0E9B                     	;# 
   235  0E9C                     	;# 
   236  0E9D                     	;# 
   237  0E9E                     	;# 
   238  0E9F                     	;# 
   239  0FE4                     	;# 
   240  0FE5                     	;# 
   241  0FE6                     	;# 
   242  0FE7                     	;# 
   243  0FE8                     	;# 
   244  0FE9                     	;# 
   245  0FEA                     	;# 
   246  0FEB                     	;# 
   247  0FED                     	;# 
   248  0FEE                     	;# 
   249  0FEF                     	;# 
   250  0000                     	;# 
   251  0001                     	;# 
   252  0002                     	;# 
   253  0003                     	;# 
   254  0004                     	;# 
   255  0005                     	;# 
   256  0006                     	;# 
   257  0007                     	;# 
   258  0008                     	;# 
   259  0009                     	;# 
   260  000A                     	;# 
   261  000B                     	;# 
   262  000C                     	;# 
   263  000E                     	;# 
   264  0011                     	;# 
   265  0012                     	;# 
   266  0015                     	;# 
   267  0016                     	;# 
   268  0016                     	;# 
   269  0017                     	;# 
   270  0018                     	;# 
   271  0019                     	;# 
   272  001A                     	;# 
   273  001B                     	;# 
   274  001C                     	;# 
   275  008C                     	;# 
   276  008E                     	;# 
   277  0091                     	;# 
   278  0092                     	;# 
   279  0095                     	;# 
   280  0096                     	;# 
   281  0097                     	;# 
   282  0098                     	;# 
   283  0099                     	;# 
   284  009A                     	;# 
   285  009B                     	;# 
   286  009B                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  010C                     	;# 
   292  010E                     	;# 
   293  0111                     	;# 
   294  0112                     	;# 
   295  0113                     	;# 
   296  0114                     	;# 
   297  0115                     	;# 
   298  0116                     	;# 
   299  0117                     	;# 
   300  0118                     	;# 
   301  0119                     	;# 
   302  011D                     	;# 
   303  018C                     	;# 
   304  018E                     	;# 
   305  0191                     	;# 
   306  0191                     	;# 
   307  0192                     	;# 
   308  0193                     	;# 
   309  0193                     	;# 
   310  0194                     	;# 
   311  0195                     	;# 
   312  0196                     	;# 
   313  0197                     	;# 
   314  0199                     	;# 
   315  019A                     	;# 
   316  019B                     	;# 
   317  019B                     	;# 
   318  019C                     	;# 
   319  019D                     	;# 
   320  019E                     	;# 
   321  019F                     	;# 
   322  020C                     	;# 
   323  0211                     	;# 
   324  0211                     	;# 
   325  0212                     	;# 
   326  0212                     	;# 
   327  0213                     	;# 
   328  0213                     	;# 
   329  0214                     	;# 
   330  0214                     	;# 
   331  0215                     	;# 
   332  0215                     	;# 
   333  0215                     	;# 
   334  0216                     	;# 
   335  0216                     	;# 
   336  0217                     	;# 
   337  0217                     	;# 
   338  0391                     	;# 
   339  0392                     	;# 
   340  0393                     	;# 
   341  039A                     	;# 
   342  039B                     	;# 
   343  0611                     	;# 
   344  0612                     	;# 
   345  0613                     	;# 
   346  0613                     	;# 
   347  0614                     	;# 
   348  0615                     	;# 
   349  0616                     	;# 
   350  0616                     	;# 
   351  0691                     	;# 
   352  0692                     	;# 
   353  0693                     	;# 
   354  0694                     	;# 
   355  0695                     	;# 
   356  0E8E                     	;# 
   357  0E8F                     	;# 
   358  0E90                     	;# 
   359  0E91                     	;# 
   360  0E92                     	;# 
   361  0E93                     	;# 
   362  0E94                     	;# 
   363  0E94                     	;# 
   364  0E95                     	;# 
   365  0E96                     	;# 
   366  0E97                     	;# 
   367  0E98                     	;# 
   368  0E99                     	;# 
   369  0E9A                     	;# 
   370  0E9B                     	;# 
   371  0E9C                     	;# 
   372  0E9D                     	;# 
   373  0E9E                     	;# 
   374  0E9F                     	;# 
   375  0FE4                     	;# 
   376  0FE5                     	;# 
   377  0FE6                     	;# 
   378  0FE7                     	;# 
   379  0FE8                     	;# 
   380  0FE9                     	;# 
   381  0FEA                     	;# 
   382  0FEB                     	;# 
   383  0FED                     	;# 
   384  0FEE                     	;# 
   385  0FEF                     	;# 
   386  0000                     	;# 
   387  0001                     	;# 
   388  0002                     	;# 
   389  0003                     	;# 
   390  0004                     	;# 
   391  0005                     	;# 
   392  0006                     	;# 
   393  0007                     	;# 
   394  0008                     	;# 
   395  0009                     	;# 
   396  000A                     	;# 
   397  000B                     	;# 
   398  000C                     	;# 
   399  000E                     	;# 
   400  0011                     	;# 
   401  0012                     	;# 
   402  0015                     	;# 
   403  0016                     	;# 
   404  0016                     	;# 
   405  0017                     	;# 
   406  0018                     	;# 
   407  0019                     	;# 
   408  001A                     	;# 
   409  001B                     	;# 
   410  001C                     	;# 
   411  008C                     	;# 
   412  008E                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0095                     	;# 
   416  0096                     	;# 
   417  0097                     	;# 
   418  0098                     	;# 
   419  0099                     	;# 
   420  009A                     	;# 
   421  009B                     	;# 
   422  009B                     	;# 
   423  009C                     	;# 
   424  009D                     	;# 
   425  009E                     	;# 
   426  009F                     	;# 
   427  010C                     	;# 
   428  010E                     	;# 
   429  0111                     	;# 
   430  0112                     	;# 
   431  0113                     	;# 
   432  0114                     	;# 
   433  0115                     	;# 
   434  0116                     	;# 
   435  0117                     	;# 
   436  0118                     	;# 
   437  0119                     	;# 
   438  011D                     	;# 
   439  018C                     	;# 
   440  018E                     	;# 
   441  0191                     	;# 
   442  0191                     	;# 
   443  0192                     	;# 
   444  0193                     	;# 
   445  0193                     	;# 
   446  0194                     	;# 
   447  0195                     	;# 
   448  0196                     	;# 
   449  0197                     	;# 
   450  0199                     	;# 
   451  019A                     	;# 
   452  019B                     	;# 
   453  019B                     	;# 
   454  019C                     	;# 
   455  019D                     	;# 
   456  019E                     	;# 
   457  019F                     	;# 
   458  020C                     	;# 
   459  0211                     	;# 
   460  0211                     	;# 
   461  0212                     	;# 
   462  0212                     	;# 
   463  0213                     	;# 
   464  0213                     	;# 
   465  0214                     	;# 
   466  0214                     	;# 
   467  0215                     	;# 
   468  0215                     	;# 
   469  0215                     	;# 
   470  0216                     	;# 
   471  0216                     	;# 
   472  0217                     	;# 
   473  0217                     	;# 
   474  0391                     	;# 
   475  0392                     	;# 
   476  0393                     	;# 
   477  039A                     	;# 
   478  039B                     	;# 
   479  0611                     	;# 
   480  0612                     	;# 
   481  0613                     	;# 
   482  0613                     	;# 
   483  0614                     	;# 
   484  0615                     	;# 
   485  0616                     	;# 
   486  0616                     	;# 
   487  0691                     	;# 
   488  0692                     	;# 
   489  0693                     	;# 
   490  0694                     	;# 
   491  0695                     	;# 
   492  0E8E                     	;# 
   493  0E8F                     	;# 
   494  0E90                     	;# 
   495  0E91                     	;# 
   496  0E92                     	;# 
   497  0E93                     	;# 
   498  0E94                     	;# 
   499  0E94                     	;# 
   500  0E95                     	;# 
   501  0E96                     	;# 
   502  0E97                     	;# 
   503  0E98                     	;# 
   504  0E99                     	;# 
   505  0E9A                     	;# 
   506  0E9B                     	;# 
   507  0E9C                     	;# 
   508  0E9D                     	;# 
   509  0E9E                     	;# 
   510  0E9F                     	;# 
   511  0FE4                     	;# 
   512  0FE5                     	;# 
   513  0FE6                     	;# 
   514  0FE7                     	;# 
   515  0FE8                     	;# 
   516  0FE9                     	;# 
   517  0FEA                     	;# 
   518  0FEB                     	;# 
   519  0FED                     	;# 
   520  0FEE                     	;# 
   521  0FEF                     	;# 
   522  0000                     	;# 
   523  0001                     	;# 
   524  0002                     	;# 
   525  0003                     	;# 
   526  0004                     	;# 
   527  0005                     	;# 
   528  0006                     	;# 
   529  0007                     	;# 
   530  0008                     	;# 
   531  0009                     	;# 
   532  000A                     	;# 
   533  000B                     	;# 
   534  000C                     	;# 
   535  000E                     	;# 
   536  0011                     	;# 
   537  0012                     	;# 
   538  0015                     	;# 
   539  0016                     	;# 
   540  0016                     	;# 
   541  0017                     	;# 
   542  0018                     	;# 
   543  0019                     	;# 
   544  001A                     	;# 
   545  001B                     	;# 
   546  001C                     	;# 
   547  008C                     	;# 
   548  008E                     	;# 
   549  0091                     	;# 
   550  0092                     	;# 
   551  0095                     	;# 
   552  0096                     	;# 
   553  0097                     	;# 
   554  0098                     	;# 
   555  0099                     	;# 
   556  009A                     	;# 
   557  009B                     	;# 
   558  009B                     	;# 
   559  009C                     	;# 
   560  009D                     	;# 
   561  009E                     	;# 
   562  009F                     	;# 
   563  010C                     	;# 
   564  010E                     	;# 
   565  0111                     	;# 
   566  0112                     	;# 
   567  0113                     	;# 
   568  0114                     	;# 
   569  0115                     	;# 
   570  0116                     	;# 
   571  0117                     	;# 
   572  0118                     	;# 
   573  0119                     	;# 
   574  011D                     	;# 
   575  018C                     	;# 
   576  018E                     	;# 
   577  0191                     	;# 
   578  0191                     	;# 
   579  0192                     	;# 
   580  0193                     	;# 
   581  0193                     	;# 
   582  0194                     	;# 
   583  0195                     	;# 
   584  0196                     	;# 
   585  0197                     	;# 
   586  0199                     	;# 
   587  019A                     	;# 
   588  019B                     	;# 
   589  019B                     	;# 
   590  019C                     	;# 
   591  019D                     	;# 
   592  019E                     	;# 
   593  019F                     	;# 
   594  020C                     	;# 
   595  0211                     	;# 
   596  0211                     	;# 
   597  0212                     	;# 
   598  0212                     	;# 
   599  0213                     	;# 
   600  0213                     	;# 
   601  0214                     	;# 
   602  0214                     	;# 
   603  0215                     	;# 
   604  0215                     	;# 
   605  0215                     	;# 
   606  0216                     	;# 
   607  0216                     	;# 
   608  0217                     	;# 
   609  0217                     	;# 
   610  0391                     	;# 
   611  0392                     	;# 
   612  0393                     	;# 
   613  039A                     	;# 
   614  039B                     	;# 
   615  0611                     	;# 
   616  0612                     	;# 
   617  0613                     	;# 
   618  0613                     	;# 
   619  0614                     	;# 
   620  0615                     	;# 
   621  0616                     	;# 
   622  0616                     	;# 
   623  0691                     	;# 
   624  0692                     	;# 
   625  0693                     	;# 
   626  0694                     	;# 
   627  0695                     	;# 
   628  0E8E                     	;# 
   629  0E8F                     	;# 
   630  0E90                     	;# 
   631  0E91                     	;# 
   632  0E92                     	;# 
   633  0E93                     	;# 
   634  0E94                     	;# 
   635  0E94                     	;# 
   636  0E95                     	;# 
   637  0E96                     	;# 
   638  0E97                     	;# 
   639  0E98                     	;# 
   640  0E99                     	;# 
   641  0E9A                     	;# 
   642  0E9B                     	;# 
   643  0E9C                     	;# 
   644  0E9D                     	;# 
   645  0E9E                     	;# 
   646  0E9F                     	;# 
   647  0FE4                     	;# 
   648  0FE5                     	;# 
   649  0FE6                     	;# 
   650  0FE7                     	;# 
   651  0FE8                     	;# 
   652  0FE9                     	;# 
   653  0FEA                     	;# 
   654  0FEB                     	;# 
   655  0FED                     	;# 
   656  0FEE                     	;# 
   657  0FEF                     	;# 
   658  0000                     	;# 
   659  0001                     	;# 
   660  0002                     	;# 
   661  0003                     	;# 
   662  0004                     	;# 
   663  0005                     	;# 
   664  0006                     	;# 
   665  0007                     	;# 
   666  0008                     	;# 
   667  0009                     	;# 
   668  000A                     	;# 
   669  000B                     	;# 
   670  000C                     	;# 
   671  000E                     	;# 
   672  0011                     	;# 
   673  0012                     	;# 
   674  0015                     	;# 
   675  0016                     	;# 
   676  0016                     	;# 
   677  0017                     	;# 
   678  0018                     	;# 
   679  0019                     	;# 
   680  001A                     	;# 
   681  001B                     	;# 
   682  001C                     	;# 
   683  008C                     	;# 
   684  008E                     	;# 
   685  0091                     	;# 
   686  0092                     	;# 
   687  0095                     	;# 
   688  0096                     	;# 
   689  0097                     	;# 
   690  0098                     	;# 
   691  0099                     	;# 
   692  009A                     	;# 
   693  009B                     	;# 
   694  009B                     	;# 
   695  009C                     	;# 
   696  009D                     	;# 
   697  009E                     	;# 
   698  009F                     	;# 
   699  010C                     	;# 
   700  010E                     	;# 
   701  0111                     	;# 
   702  0112                     	;# 
   703  0113                     	;# 
   704  0114                     	;# 
   705  0115                     	;# 
   706  0116                     	;# 
   707  0117                     	;# 
   708  0118                     	;# 
   709  0119                     	;# 
   710  011D                     	;# 
   711  018C                     	;# 
   712  018E                     	;# 
   713  0191                     	;# 
   714  0191                     	;# 
   715  0192                     	;# 
   716  0193                     	;# 
   717  0193                     	;# 
   718  0194                     	;# 
   719  0195                     	;# 
   720  0196                     	;# 
   721  0197                     	;# 
   722  0199                     	;# 
   723  019A                     	;# 
   724  019B                     	;# 
   725  019B                     	;# 
   726  019C                     	;# 
   727  019D                     	;# 
   728  019E                     	;# 
   729  019F                     	;# 
   730  020C                     	;# 
   731  0211                     	;# 
   732  0211                     	;# 
   733  0212                     	;# 
   734  0212                     	;# 
   735  0213                     	;# 
   736  0213                     	;# 
   737  0214                     	;# 
   738  0214                     	;# 
   739  0215                     	;# 
   740  0215                     	;# 
   741  0215                     	;# 
   742  0216                     	;# 
   743  0216                     	;# 
   744  0217                     	;# 
   745  0217                     	;# 
   746  0391                     	;# 
   747  0392                     	;# 
   748  0393                     	;# 
   749  039A                     	;# 
   750  039B                     	;# 
   751  0611                     	;# 
   752  0612                     	;# 
   753  0613                     	;# 
   754  0613                     	;# 
   755  0614                     	;# 
   756  0615                     	;# 
   757  0616                     	;# 
   758  0616                     	;# 
   759  0691                     	;# 
   760  0692                     	;# 
   761  0693                     	;# 
   762  0694                     	;# 
   763  0695                     	;# 
   764  0E8E                     	;# 
   765  0E8F                     	;# 
   766  0E90                     	;# 
   767  0E91                     	;# 
   768  0E92                     	;# 
   769  0E93                     	;# 
   770  0E94                     	;# 
   771  0E94                     	;# 
   772  0E95                     	;# 
   773  0E96                     	;# 
   774  0E97                     	;# 
   775  0E98                     	;# 
   776  0E99                     	;# 
   777  0E9A                     	;# 
   778  0E9B                     	;# 
   779  0E9C                     	;# 
   780  0E9D                     	;# 
   781  0E9E                     	;# 
   782  0E9F                     	;# 
   783  0FE4                     	;# 
   784  0FE5                     	;# 
   785  0FE6                     	;# 
   786  0FE7                     	;# 
   787  0FE8                     	;# 
   788  0FE9                     	;# 
   789  0FEA                     	;# 
   790  0FEB                     	;# 
   791  0FED                     	;# 
   792  0FEE                     	;# 
   793  0FEF                     	;# 
   794  0000                     	;# 
   795  0001                     	;# 
   796  0002                     	;# 
   797  0003                     	;# 
   798  0004                     	;# 
   799  0005                     	;# 
   800  0006                     	;# 
   801  0007                     	;# 
   802  0008                     	;# 
   803  0009                     	;# 
   804  000A                     	;# 
   805  000B                     	;# 
   806  000C                     	;# 
   807  000E                     	;# 
   808  0011                     	;# 
   809  0012                     	;# 
   810  0015                     	;# 
   811  0016                     	;# 
   812  0016                     	;# 
   813  0017                     	;# 
   814  0018                     	;# 
   815  0019                     	;# 
   816  001A                     	;# 
   817  001B                     	;# 
   818  001C                     	;# 
   819  008C                     	;# 
   820  008E                     	;# 
   821  0091                     	;# 
   822  0092                     	;# 
   823  0095                     	;# 
   824  0096                     	;# 
   825  0097                     	;# 
   826  0098                     	;# 
   827  0099                     	;# 
   828  009A                     	;# 
   829  009B                     	;# 
   830  009B                     	;# 
   831  009C                     	;# 
   832  009D                     	;# 
   833  009E                     	;# 
   834  009F                     	;# 
   835  010C                     	;# 
   836  010E                     	;# 
   837  0111                     	;# 
   838  0112                     	;# 
   839  0113                     	;# 
   840  0114                     	;# 
   841  0115                     	;# 
   842  0116                     	;# 
   843  0117                     	;# 
   844  0118                     	;# 
   845  0119                     	;# 
   846  011D                     	;# 
   847  018C                     	;# 
   848  018E                     	;# 
   849  0191                     	;# 
   850  0191                     	;# 
   851  0192                     	;# 
   852  0193                     	;# 
   853  0193                     	;# 
   854  0194                     	;# 
   855  0195                     	;# 
   856  0196                     	;# 
   857  0197                     	;# 
   858  0199                     	;# 
   859  019A                     	;# 
   860  019B                     	;# 
   861  019B                     	;# 
   862  019C                     	;# 
   863  019D                     	;# 
   864  019E                     	;# 
   865  019F                     	;# 
   866  020C                     	;# 
   867  0211                     	;# 
   868  0211                     	;# 
   869  0212                     	;# 
   870  0212                     	;# 
   871  0213                     	;# 
   872  0213                     	;# 
   873  0214                     	;# 
   874  0214                     	;# 
   875  0215                     	;# 
   876  0215                     	;# 
   877  0215                     	;# 
   878  0216                     	;# 
   879  0216                     	;# 
   880  0217                     	;# 
   881  0217                     	;# 
   882  0391                     	;# 
   883  0392                     	;# 
   884  0393                     	;# 
   885  039A                     	;# 
   886  039B                     	;# 
   887  0611                     	;# 
   888  0612                     	;# 
   889  0613                     	;# 
   890  0613                     	;# 
   891  0614                     	;# 
   892  0615                     	;# 
   893  0616                     	;# 
   894  0616                     	;# 
   895  0691                     	;# 
   896  0692                     	;# 
   897  0693                     	;# 
   898  0694                     	;# 
   899  0695                     	;# 
   900  0E8E                     	;# 
   901  0E8F                     	;# 
   902  0E90                     	;# 
   903  0E91                     	;# 
   904  0E92                     	;# 
   905  0E93                     	;# 
   906  0E94                     	;# 
   907  0E94                     	;# 
   908  0E95                     	;# 
   909  0E96                     	;# 
   910  0E97                     	;# 
   911  0E98                     	;# 
   912  0E99                     	;# 
   913  0E9A                     	;# 
   914  0E9B                     	;# 
   915  0E9C                     	;# 
   916  0E9D                     	;# 
   917  0E9E                     	;# 
   918  0E9F                     	;# 
   919  0FE4                     	;# 
   920  0FE5                     	;# 
   921  0FE6                     	;# 
   922  0FE7                     	;# 
   923  0FE8                     	;# 
   924  0FE9                     	;# 
   925  0FEA                     	;# 
   926  0FEB                     	;# 
   927  0FED                     	;# 
   928  0FEE                     	;# 
   929  0FEF                     	;# 
   930  0000                     	;# 
   931  0001                     	;# 
   932  0002                     	;# 
   933  0003                     	;# 
   934  0004                     	;# 
   935  0005                     	;# 
   936  0006                     	;# 
   937  0007                     	;# 
   938  0008                     	;# 
   939  0009                     	;# 
   940  000A                     	;# 
   941  000B                     	;# 
   942  000C                     	;# 
   943  000E                     	;# 
   944  0011                     	;# 
   945  0012                     	;# 
   946  0015                     	;# 
   947  0016                     	;# 
   948  0016                     	;# 
   949  0017                     	;# 
   950  0018                     	;# 
   951  0019                     	;# 
   952  001A                     	;# 
   953  001B                     	;# 
   954  001C                     	;# 
   955  008C                     	;# 
   956  008E                     	;# 
   957  0091                     	;# 
   958  0092                     	;# 
   959  0095                     	;# 
   960  0096                     	;# 
   961  0097                     	;# 
   962  0098                     	;# 
   963  0099                     	;# 
   964  009A                     	;# 
   965  009B                     	;# 
   966  009B                     	;# 
   967  009C                     	;# 
   968  009D                     	;# 
   969  009E                     	;# 
   970  009F                     	;# 
   971  010C                     	;# 
   972  010E                     	;# 
   973  0111                     	;# 
   974  0112                     	;# 
   975  0113                     	;# 
   976  0114                     	;# 
   977  0115                     	;# 
   978  0116                     	;# 
   979  0117                     	;# 
   980  0118                     	;# 
   981  0119                     	;# 
   982  011D                     	;# 
   983  018C                     	;# 
   984  018E                     	;# 
   985  0191                     	;# 
   986  0191                     	;# 
   987  0192                     	;# 
   988  0193                     	;# 
   989  0193                     	;# 
   990  0194                     	;# 
   991  0195                     	;# 
   992  0196                     	;# 
   993  0197                     	;# 
   994  0199                     	;# 
   995  019A                     	;# 
   996  019B                     	;# 
   997  019B                     	;# 
   998  019C                     	;# 
   999  019D                     	;# 
  1000  019E                     	;# 
  1001  019F                     	;# 
  1002  020C                     	;# 
  1003  0211                     	;# 
  1004  0211                     	;# 
  1005  0212                     	;# 
  1006  0212                     	;# 
  1007  0213                     	;# 
  1008  0213                     	;# 
  1009  0214                     	;# 
  1010  0214                     	;# 
  1011  0215                     	;# 
  1012  0215                     	;# 
  1013  0215                     	;# 
  1014  0216                     	;# 
  1015  0216                     	;# 
  1016  0217                     	;# 
  1017  0217                     	;# 
  1018  0391                     	;# 
  1019  0392                     	;# 
  1020  0393                     	;# 
  1021  039A                     	;# 
  1022  039B                     	;# 
  1023  0611                     	;# 
  1024  0612                     	;# 
  1025  0613                     	;# 
  1026  0613                     	;# 
  1027  0614                     	;# 
  1028  0615                     	;# 
  1029  0616                     	;# 
  1030  0616                     	;# 
  1031  0691                     	;# 
  1032  0692                     	;# 
  1033  0693                     	;# 
  1034  0694                     	;# 
  1035  0695                     	;# 
  1036  0E8E                     	;# 
  1037  0E8F                     	;# 
  1038  0E90                     	;# 
  1039  0E91                     	;# 
  1040  0E92                     	;# 
  1041  0E93                     	;# 
  1042  0E94                     	;# 
  1043  0E94                     	;# 
  1044  0E95                     	;# 
  1045  0E96                     	;# 
  1046  0E97                     	;# 
  1047  0E98                     	;# 
  1048  0E99                     	;# 
  1049  0E9A                     	;# 
  1050  0E9B                     	;# 
  1051  0E9C                     	;# 
  1052  0E9D                     	;# 
  1053  0E9E                     	;# 
  1054  0E9F                     	;# 
  1055  0FE4                     	;# 
  1056  0FE5                     	;# 
  1057  0FE6                     	;# 
  1058  0FE7                     	;# 
  1059  0FE8                     	;# 
  1060  0FE9                     	;# 
  1061  0FEA                     	;# 
  1062  0FEB                     	;# 
  1063  0FED                     	;# 
  1064  0FEE                     	;# 
  1065  0FEF                     	;# 
  1066                           
  1067                           	psect	idataBANK0
  1068  04B8                     __pidataBANK0:
  1069                           
  1070                           ;initializer for _cicloMax
  1071  04B8  344B               	retlw	75
  1072                           
  1073                           ;initializer for _cicloReposo
  1074  04B9  342D               	retlw	45
  1075                           
  1076                           ;initializer for _cicloMin
  1077  04BA  340F               	retlw	15
  1078                           
  1079                           	psect	stringtext1
  1080  02D7                     __pstringtext1:
  1081  02D7                     _i2c_fsmStateTable:
  1082  02D7  34A2               	retlw	low _I2C_DO_IDLE
  1083  02D8  3404               	retlw	high _I2C_DO_IDLE
  1084  02D9  3445               	retlw	low _I2C_DO_SEND_ADR_READ
  1085  02DA  3404               	retlw	high _I2C_DO_SEND_ADR_READ
  1086  02DB  344E               	retlw	low _I2C_DO_SEND_ADR_WRITE
  1087  02DC  3404               	retlw	high _I2C_DO_SEND_ADR_WRITE
  1088  02DD  34ED               	retlw	low _I2C_DO_TX
  1089  02DE  3400               	retlw	high _I2C_DO_TX
  1090  02DF  3442               	retlw	low _I2C_DO_RX
  1091  02E0  3401               	retlw	high _I2C_DO_RX
  1092  02E1  3456               	retlw	low _I2C_DO_RCEN
  1093  02E2  3404               	retlw	high _I2C_DO_RCEN
  1094  02E3  342B               	retlw	low _I2C_DO_TX_EMPTY
  1095  02E4  3402               	retlw	high _I2C_DO_TX_EMPTY
  1096  02E5  349D               	retlw	low _I2C_DO_SEND_RESTART_READ
  1097  02E6  3404               	retlw	high _I2C_DO_SEND_RESTART_READ
  1098  02E7  3498               	retlw	low _I2C_DO_SEND_RESTART_WRITE
  1099  02E8  3404               	retlw	high _I2C_DO_SEND_RESTART_WRITE
  1100  02E9  3493               	retlw	low _I2C_DO_SEND_RESTART
  1101  02EA  3404               	retlw	high _I2C_DO_SEND_RESTART
  1102  02EB  348E               	retlw	low _I2C_DO_SEND_STOP
  1103  02EC  3404               	retlw	high _I2C_DO_SEND_STOP
  1104  02ED  3489               	retlw	low _I2C_DO_RX_ACK
  1105  02EE  3404               	retlw	high _I2C_DO_RX_ACK
  1106  02EF  3484               	retlw	low _I2C_DO_RX_NACK_STOP
  1107  02F0  3404               	retlw	high _I2C_DO_RX_NACK_STOP
  1108  02F1  347F               	retlw	low _I2C_DO_RX_NACK_RESTART
  1109  02F2  3404               	retlw	high _I2C_DO_RX_NACK_RESTART
  1110  02F3  347A               	retlw	low _I2C_DO_RESET
  1111  02F4  3404               	retlw	high _I2C_DO_RESET
  1112  02F5  345A               	retlw	low _I2C_DO_ADDRESS_NACK
  1113  02F6  3402               	retlw	high _I2C_DO_ADDRESS_NACK
  1114  02F7                     __end_of_i2c_fsmStateTable:
  1115                           
  1116                           	psect	nvBANK0
  1117  0058                     __pnvBANK0:
  1118  0058                     _TMR1_InterruptHandler:
  1119  0058                     	ds	2
  1120  005A                     _timer1ReloadVal:
  1121  005A                     	ds	2
  1122  0018                     _T1CONbits	set	24
  1123  0018                     _T1CON	set	24
  1124  0016                     _TMR1L	set	22
  1125  0017                     _TMR1H	set	23
  1126  0019                     _T1GCON	set	25
  1127  000B                     _INTCONbits	set	11
  1128  0011                     _PIR1bits	set	17
  1129  0095                     _OPTION_REGbits	set	149
  1130  008E                     _TRISC	set	142
  1131  008C                     _TRISA	set	140
  1132  0097                     _WDTCON	set	151
  1133  0098                     _OSCTUNE	set	152
  1134  0099                     _OSCCON	set	153
  1135  0091                     _PIE1bits	set	145
  1136  011D                     _APFCON	set	285
  1137  010E                     _LATC	set	270
  1138  010C                     _LATA	set	268
  1139  0116                     _BORCON	set	278
  1140  018C                     _ANSELA	set	396
  1141  018E                     _ANSELC	set	398
  1142  020C                     _WPUA	set	524
  1143  0216                     _SSP1CON2bits	set	534
  1144  0211                     _SSP1BUF	set	529
  1145  0215                     _SSP1CON1bits	set	533
  1146  0212                     _SSP1ADD	set	530
  1147  0216                     _SSP1CON2	set	534
  1148  0215                     _SSP1CON1	set	533
  1149  0214                     _SSP1STAT	set	532
  1150  039B                     _ACTCON	set	923
  1151                           
  1152                           	psect	cinit
  1153  001B                     start_initialization:	
  1154                           ; #config settings
  1155                           
  1156  001B                     __initialization:
  1157                           
  1158                           ; Initialize objects allocated to BANK0
  1159  001B  3184  24B8  3180   	fcall	__pidataBANK0	;fetch initializer
  1160  001E  00DC               	movwf	__pdataBANK0& (0+127)
  1161  001F  3184  24B9  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1162  0022  00DD               	movwf	(__pdataBANK0+1)& (0+127)
  1163  0023  3184  24BA  3180   	fcall	__pidataBANK0+2	;fetch initializer
  1164  0026  00DE               	movwf	(__pdataBANK0+2)& (0+127)
  1165                           
  1166                           ; Clear objects allocated to COMMON
  1167  0027  01FA               	clrf	__pbssCOMMON& (0+127)
  1168  0028  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1169                           
  1170                           ; Clear objects allocated to BANK0
  1171  0029  3020               	movlw	low __pbssBANK0
  1172  002A  0084               	movwf	4
  1173  002B  3000               	movlw	high __pbssBANK0
  1174  002C  0085               	movwf	5
  1175  002D  3021               	movlw	33
  1176  002E  3184  245D  3180   	fcall	clear_ram0
  1177  0031                     end_of_initialization:	
  1178                           ;End of C runtime variable initialization code
  1179                           
  1180  0031                     __end_of__initialization:
  1181  0031  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1182  0032  0020               	movlb	0
  1183  0033  3183  2B67         	ljmp	_main	;jump to C main() function
  1184                           
  1185                           	psect	bssCOMMON
  1186  007A                     __pbssCOMMON:
  1187  007A                     _flag:
  1188  007A                     	ds	1
  1189  007B                     _estado_mov_viejo:
  1190  007B                     	ds	1
  1191                           
  1192                           	psect	bssBANK0
  1193  0020                     __pbssBANK0:
  1194  0020                     _I2C_Status:
  1195  0020                     	ds	29
  1196  003D                     _MSSP_InterruptHandler:
  1197  003D                     	ds	2
  1198  003F                     _ciclo:
  1199  003F                     	ds	1
  1200  0040                     _estado_mov_nuevo:
  1201  0040                     	ds	1
  1202                           
  1203                           	psect	dataBANK0
  1204  005C                     __pdataBANK0:
  1205  005C                     _cicloMax:
  1206  005C                     	ds	1
  1207  005D                     _cicloReposo:
  1208  005D                     	ds	1
  1209  005E                     _cicloMin:
  1210  005E                     	ds	1
  1211                           
  1212                           	psect	clrtext
  1213  045D                     clear_ram0:	
  1214                           ;	Called with FSR0 containing the base address, and
  1215                           ;	WREG with the size to clear
  1216                           
  1217  045D  0064               	clrwdt	;clear the watchdog before getting into this loop
  1218  045E                     clrloop0:
  1219  045E  0180               	clrf	0	;clear RAM location pointed to by FSR
  1220  045F  3101               	addfsr 0,1
  1221  0460  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1222  0461  2C5E               	goto	clrloop0	;have we reached the end yet?
  1223  0462  3400               	retlw	0	;all done for this memory range, return
  1224                           
  1225                           	psect	cstackCOMMON
  1226  0070                     __pcstackCOMMON:
  1227  0070                     ?_I2C_DO_IDLE:
  1228  0070                     ?_I2C_DO_SEND_ADR_READ:	
  1229                           ; 1 bytes @ 0x0
  1230                           
  1231  0070                     ?_I2C_DO_SEND_ADR_WRITE:	
  1232                           ; 1 bytes @ 0x0
  1233                           
  1234  0070                     ?_I2C_DO_TX:	
  1235                           ; 1 bytes @ 0x0
  1236                           
  1237  0070                     ?_I2C_DO_RX:	
  1238                           ; 1 bytes @ 0x0
  1239                           
  1240  0070                     ?_I2C_DO_RCEN:	
  1241                           ; 1 bytes @ 0x0
  1242                           
  1243  0070                     ?_I2C_DO_TX_EMPTY:	
  1244                           ; 1 bytes @ 0x0
  1245                           
  1246  0070                     ?_I2C_DO_SEND_RESTART_READ:	
  1247                           ; 1 bytes @ 0x0
  1248                           
  1249  0070                     ?_I2C_DO_SEND_RESTART_WRITE:	
  1250                           ; 1 bytes @ 0x0
  1251                           
  1252  0070                     ?_I2C_DO_SEND_RESTART:	
  1253                           ; 1 bytes @ 0x0
  1254                           
  1255  0070                     ?_I2C_DO_SEND_STOP:	
  1256                           ; 1 bytes @ 0x0
  1257                           
  1258  0070                     ?_I2C_DO_RX_ACK:	
  1259                           ; 1 bytes @ 0x0
  1260                           
  1261  0070                     ?_I2C_DO_RX_NACK_STOP:	
  1262                           ; 1 bytes @ 0x0
  1263                           
  1264  0070                     ?_I2C_DO_RX_NACK_RESTART:	
  1265                           ; 1 bytes @ 0x0
  1266                           
  1267  0070                     ?_I2C_DO_RESET:	
  1268                           ; 1 bytes @ 0x0
  1269                           
  1270  0070                     ?_I2C_DO_ADDRESS_NACK:	
  1271                           ; 1 bytes @ 0x0
  1272                           
  1273  0070                     ?_I2C_MasterClearIrq:	
  1274                           ; 1 bytes @ 0x0
  1275                           
  1276  0070                     ?_I2C_MasterOpen:	
  1277                           ; 1 bytes @ 0x0
  1278                           
  1279  0070                     ?_I2C_MasterDisableIrq:	
  1280                           ; 1 bytes @ 0x0
  1281                           
  1282  0070                     ?_I2C_MasterClose:	
  1283                           ; 1 bytes @ 0x0
  1284                           
  1285  0070                     ?_I2C_MasterStart:	
  1286                           ; 1 bytes @ 0x0
  1287                           
  1288  0070                     ?_I2C_Poller:	
  1289                           ; 1 bytes @ 0x0
  1290                           
  1291  0070                     ?_I2C_MasterWaitForEvent:	
  1292                           ; 1 bytes @ 0x0
  1293                           
  1294  0070                     ?_I2C_MasterFsm:	
  1295                           ; 1 bytes @ 0x0
  1296                           
  1297  0070                     ?_I2C_MasterIsNack:	
  1298                           ; 1 bytes @ 0x0
  1299                           
  1300  0070                     ?_I2C_MasterSendTxData:	
  1301                           ; 1 bytes @ 0x0
  1302                           
  1303  0070                     ?_I2C_MasterGetRxData:	
  1304                           ; 1 bytes @ 0x0
  1305                           
  1306  0070                     ?_I2C_MasterSendAck:	
  1307                           ; 1 bytes @ 0x0
  1308                           
  1309  0070                     ?_I2C_MasterStartRx:	
  1310                           ; 1 bytes @ 0x0
  1311                           
  1312  0070                     ?_I2C_MasterSetIrq:	
  1313                           ; 1 bytes @ 0x0
  1314                           
  1315  0070                     ?_I2C_MasterEnableRestart:	
  1316                           ; 1 bytes @ 0x0
  1317                           
  1318  0070                     ?_I2C_MasterStop:	
  1319                           ; 1 bytes @ 0x0
  1320                           
  1321  0070                     ?_I2C_MasterSendNack:	
  1322                           ; 1 bytes @ 0x0
  1323                           
  1324  0070                     ?_PIN_MANAGER_Initialize:	
  1325                           ; 1 bytes @ 0x0
  1326                           
  1327  0070                     ?_OSCILLATOR_Initialize:	
  1328                           ; 1 bytes @ 0x0
  1329                           
  1330  0070                     ?_WDT_Initialize:	
  1331                           ; 1 bytes @ 0x0
  1332                           
  1333  0070                     ?_TMR1_Initialize:	
  1334                           ; 1 bytes @ 0x0
  1335                           
  1336  0070                     ?_TMR1_ISR:	
  1337                           ; 1 bytes @ 0x0
  1338                           
  1339  0070                     ?_Get_Master_TMR1_flag:	
  1340                           ; 1 bytes @ 0x0
  1341                           
  1342  0070                     ?_Read_All_Slave_Sensors:	
  1343                           ; 1 bytes @ 0x0
  1344                           
  1345  0070                     ?_Clear_Master_TMR1_flag:	
  1346                           ; 1 bytes @ 0x0
  1347                           
  1348  0070                     ?_TMR1_Master_InterruptHandler:	
  1349                           ; 1 bytes @ 0x0
  1350                           
  1351  0070                     ??_TMR1_Master_InterruptHandler:	
  1352                           ; 1 bytes @ 0x0
  1353                           
  1354  0070                     ?_I2C_Initialize:	
  1355                           ; 1 bytes @ 0x0
  1356                           
  1357  0070                     ?_I2C_Open:	
  1358                           ; 1 bytes @ 0x0
  1359                           
  1360  0070                     ?_I2C_Close:	
  1361                           ; 1 bytes @ 0x0
  1362                           
  1363  0070                     ?_I2C_MasterOperation:	
  1364                           ; 1 bytes @ 0x0
  1365                           
  1366  0070                     ?_I2C_MasterWrite:	
  1367                           ; 1 bytes @ 0x0
  1368                           
  1369  0070                     ?_SYSTEM_Initialize:	
  1370                           ; 1 bytes @ 0x0
  1371                           
  1372  0070                     ?_INTERRUPT_InterruptManager:	
  1373                           ; 1 bytes @ 0x0
  1374                           
  1375  0070                     ?_main:	
  1376                           ; 1 bytes @ 0x0
  1377                           
  1378  0070                     ?_TMR1_WriteTimer:	
  1379                           ; 1 bytes @ 0x0
  1380                           
  1381  0070                     ?_Read_Slave_Sensors:	
  1382                           ; 1 bytes @ 0x0
  1383                           
  1384  0070                     TMR1_WriteTimer@timerVal:	
  1385                           ; 1 bytes @ 0x0
  1386                           
  1387                           
  1388                           ; 2 bytes @ 0x0
  1389  0070                     	ds	2
  1390  0072                     ??_I2C_DO_IDLE:
  1391  0072                     ??_I2C_DO_SEND_ADR_READ:	
  1392                           ; 1 bytes @ 0x2
  1393                           
  1394  0072                     ??_I2C_DO_RX:	
  1395                           ; 1 bytes @ 0x2
  1396                           
  1397  0072                     ??_I2C_DO_RCEN:	
  1398                           ; 1 bytes @ 0x2
  1399                           
  1400  0072                     ??_I2C_DO_TX_EMPTY:	
  1401                           ; 1 bytes @ 0x2
  1402                           
  1403  0072                     ??_I2C_DO_SEND_RESTART_READ:	
  1404                           ; 1 bytes @ 0x2
  1405                           
  1406  0072                     ??_I2C_DO_SEND_RESTART_WRITE:	
  1407                           ; 1 bytes @ 0x2
  1408                           
  1409  0072                     ??_I2C_DO_SEND_RESTART:	
  1410                           ; 1 bytes @ 0x2
  1411                           
  1412  0072                     ??_I2C_DO_SEND_STOP:	
  1413                           ; 1 bytes @ 0x2
  1414                           
  1415  0072                     ??_I2C_DO_RX_ACK:	
  1416                           ; 1 bytes @ 0x2
  1417                           
  1418  0072                     ??_I2C_DO_RX_NACK_STOP:	
  1419                           ; 1 bytes @ 0x2
  1420                           
  1421  0072                     ??_I2C_DO_RX_NACK_RESTART:	
  1422                           ; 1 bytes @ 0x2
  1423                           
  1424  0072                     ??_I2C_DO_RESET:	
  1425                           ; 1 bytes @ 0x2
  1426                           
  1427  0072                     ??_I2C_DO_ADDRESS_NACK:	
  1428                           ; 1 bytes @ 0x2
  1429                           
  1430  0072                     ??_I2C_MasterClearIrq:	
  1431                           ; 1 bytes @ 0x2
  1432                           
  1433  0072                     ??_I2C_MasterOpen:	
  1434                           ; 1 bytes @ 0x2
  1435                           
  1436  0072                     ??_I2C_MasterDisableIrq:	
  1437                           ; 1 bytes @ 0x2
  1438                           
  1439  0072                     ??_I2C_MasterClose:	
  1440                           ; 1 bytes @ 0x2
  1441                           
  1442  0072                     ??_I2C_MasterStart:	
  1443                           ; 1 bytes @ 0x2
  1444                           
  1445  0072                     ?_I2C_SetCallback:	
  1446                           ; 1 bytes @ 0x2
  1447                           
  1448  0072                     ??_I2C_MasterWaitForEvent:	
  1449                           ; 1 bytes @ 0x2
  1450                           
  1451  0072                     ??_I2C_MasterIsNack:	
  1452                           ; 1 bytes @ 0x2
  1453                           
  1454  0072                     ??_I2C_MasterSendTxData:	
  1455                           ; 1 bytes @ 0x2
  1456                           
  1457  0072                     ??_I2C_MasterGetRxData:	
  1458                           ; 1 bytes @ 0x2
  1459                           
  1460  0072                     ??_I2C_MasterSendAck:	
  1461                           ; 1 bytes @ 0x2
  1462                           
  1463  0072                     ??_I2C_MasterStartRx:	
  1464                           ; 1 bytes @ 0x2
  1465                           
  1466  0072                     ??_I2C_MasterSetIrq:	
  1467                           ; 1 bytes @ 0x2
  1468                           
  1469  0072                     ??_I2C_MasterEnableRestart:	
  1470                           ; 1 bytes @ 0x2
  1471                           
  1472  0072                     ??_I2C_MasterStop:	
  1473                           ; 1 bytes @ 0x2
  1474                           
  1475  0072                     ??_I2C_MasterSendNack:	
  1476                           ; 1 bytes @ 0x2
  1477                           
  1478  0072                     ??_PIN_MANAGER_Initialize:	
  1479                           ; 1 bytes @ 0x2
  1480                           
  1481  0072                     ??_OSCILLATOR_Initialize:	
  1482                           ; 1 bytes @ 0x2
  1483                           
  1484  0072                     ??_WDT_Initialize:	
  1485                           ; 1 bytes @ 0x2
  1486                           
  1487  0072                     ??_TMR1_ISR:	
  1488                           ; 1 bytes @ 0x2
  1489                           
  1490  0072                     ??_Get_Master_TMR1_flag:	
  1491                           ; 1 bytes @ 0x2
  1492                           
  1493  0072                     ??_Clear_Master_TMR1_flag:	
  1494                           ; 1 bytes @ 0x2
  1495                           
  1496  0072                     ?_TMR1_SetInterruptHandler:	
  1497                           ; 1 bytes @ 0x2
  1498                           
  1499  0072                     ??_I2C_Initialize:	
  1500                           ; 1 bytes @ 0x2
  1501                           
  1502  0072                     ??_I2C_Open:	
  1503                           ; 1 bytes @ 0x2
  1504                           
  1505  0072                     ??_I2C_Close:	
  1506                           ; 1 bytes @ 0x2
  1507                           
  1508  0072                     ?_I2C_SetBuffer:	
  1509                           ; 1 bytes @ 0x2
  1510                           
  1511  0072                     ??_INTERRUPT_InterruptManager:	
  1512                           ; 1 bytes @ 0x2
  1513                           
  1514  0072                     ??_TMR1_WriteTimer:	
  1515                           ; 1 bytes @ 0x2
  1516                           
  1517  0072                     I2C_MasterSendTxData@data:	
  1518                           ; 1 bytes @ 0x2
  1519                           
  1520  0072                     I2C_SetBuffer@bufferSize:	
  1521                           ; 1 bytes @ 0x2
  1522                           
  1523  0072                     I2C_SetCallback@cb:	
  1524                           ; 2 bytes @ 0x2
  1525                           
  1526  0072                     TMR1_SetInterruptHandler@InterruptHandler:	
  1527                           ; 2 bytes @ 0x2
  1528                           
  1529                           
  1530                           ; 2 bytes @ 0x2
  1531  0072                     	ds	1
  1532  0073                     ??_I2C_DO_SEND_ADR_WRITE:
  1533  0073                     ??_I2C_DO_TX:	
  1534                           ; 1 bytes @ 0x3
  1535                           
  1536  0073                     I2C_Open@address:	
  1537                           ; 1 bytes @ 0x3
  1538                           
  1539  0073                     I2C_Close@returnValue:	
  1540                           ; 1 bytes @ 0x3
  1541                           
  1542                           
  1543                           ; 1 bytes @ 0x3
  1544  0073                     	ds	1
  1545  0074                     ??_TMR1_Initialize:
  1546  0074                     ??_TMR1_SetInterruptHandler:	
  1547                           ; 1 bytes @ 0x4
  1548                           
  1549  0074                     ??_I2C_SetBuffer:	
  1550                           ; 1 bytes @ 0x4
  1551                           
  1552  0074                     ??_SYSTEM_Initialize:	
  1553                           ; 1 bytes @ 0x4
  1554                           
  1555  0074                     I2C_Open@returnValue:	
  1556                           ; 1 bytes @ 0x4
  1557                           
  1558  0074                     I2C_SetCallback@ptr:	
  1559                           ; 1 bytes @ 0x4
  1560                           
  1561                           
  1562                           ; 1 bytes @ 0x4
  1563  0074                     	ds	1
  1564  0075                     ??_I2C_SetCallback:
  1565  0075                     I2C_SetBuffer@buffer:	
  1566                           ; 1 bytes @ 0x5
  1567                           
  1568                           
  1569                           ; 1 bytes @ 0x5
  1570  0075                     	ds	1
  1571  0076                     ??_I2C_MasterFsm:
  1572  0076                     I2C_SetCallback@idx:	
  1573                           ; 1 bytes @ 0x6
  1574                           
  1575                           
  1576                           ; 1 bytes @ 0x6
  1577  0076                     	ds	1
  1578  0077                     ?_I2C_SetDataCompleteCallback:
  1579  0077                     ?_I2C_SetAddressNackCallback:	
  1580                           ; 1 bytes @ 0x7
  1581                           
  1582  0077                     I2C_SetDataCompleteCallback@cb:	
  1583                           ; 1 bytes @ 0x7
  1584                           
  1585  0077                     I2C_SetAddressNackCallback@cb:	
  1586                           ; 2 bytes @ 0x7
  1587                           
  1588                           
  1589                           ; 2 bytes @ 0x7
  1590  0077                     	ds	2
  1591  0079                     ??_I2C_Poller:
  1592  0079                     ??_I2C_MasterOperation:	
  1593                           ; 1 bytes @ 0x9
  1594                           
  1595  0079                     I2C_SetDataCompleteCallback@ptr:	
  1596                           ; 1 bytes @ 0x9
  1597                           
  1598  0079                     I2C_SetAddressNackCallback@ptr:	
  1599                           ; 1 bytes @ 0x9
  1600                           
  1601                           
  1602                           ; 1 bytes @ 0x9
  1603  0079                     	ds	1
  1604  007A                     ??_I2C_CallbackReturnStop:
  1605  007A                     ??_I2C_CallbackReturnReset:	
  1606                           ; 1 bytes @ 0xA
  1607                           
  1608  007A                     ??_rd1RegCompleteHandler:	
  1609                           ; 1 bytes @ 0xA
  1610                           
  1611  007A                     ??_wr1RegCompleteHandler:	
  1612                           ; 1 bytes @ 0xA
  1613                           
  1614  007A                     ??_I2C_MasterWrite:	
  1615                           ; 1 bytes @ 0xA
  1616                           
  1617  007A                     ??_main:	
  1618                           ; 1 bytes @ 0xA
  1619                           
  1620                           
  1621                           	psect	cstackBANK0
  1622  0041                     __pcstackBANK0:	
  1623                           ; 1 bytes @ 0xA
  1624                           
  1625  0041                     ??_I2C_SetDataCompleteCallback:
  1626  0041                     ??_I2C_SetAddressNackCallback:	
  1627                           ; 1 bytes @ 0x0
  1628                           
  1629  0041                     I2C_MasterOperation@read:	
  1630                           ; 1 bytes @ 0x0
  1631                           
  1632                           
  1633                           ; 1 bytes @ 0x0
  1634  0041                     	ds	1
  1635  0042                     ?_I2C_CallbackReturnStop:
  1636  0042                     ?_I2C_CallbackReturnReset:	
  1637                           ; 1 bytes @ 0x1
  1638                           
  1639  0042                     ?_rd1RegCompleteHandler:	
  1640                           ; 1 bytes @ 0x1
  1641                           
  1642  0042                     ?_wr1RegCompleteHandler:	
  1643                           ; 1 bytes @ 0x1
  1644                           
  1645  0042                     I2C_MasterOperation@returnValue:	
  1646                           ; 1 bytes @ 0x1
  1647                           
  1648  0042                     I2C_CallbackReturnStop@funPtr:	
  1649                           ; 1 bytes @ 0x1
  1650                           
  1651  0042                     I2C_CallbackReturnReset@funPtr:	
  1652                           ; 1 bytes @ 0x1
  1653                           
  1654  0042                     rd1RegCompleteHandler@ptr:	
  1655                           ; 1 bytes @ 0x1
  1656                           
  1657  0042                     wr1RegCompleteHandler@ptr:	
  1658                           ; 1 bytes @ 0x1
  1659                           
  1660                           
  1661                           ; 1 bytes @ 0x1
  1662  0042                     	ds	1
  1663  0043                     ?_I2C_Read1ByteRegister:
  1664  0043                     ?_I2C_Write1ByteRegister:	
  1665                           ; 1 bytes @ 0x2
  1666                           
  1667  0043                     I2C_Read1ByteRegister@reg:	
  1668                           ; 1 bytes @ 0x2
  1669                           
  1670  0043                     I2C_Write1ByteRegister@reg:	
  1671                           ; 1 bytes @ 0x2
  1672                           
  1673                           
  1674                           ; 1 bytes @ 0x2
  1675  0043                     	ds	1
  1676  0044                     ??_I2C_Read1ByteRegister:
  1677  0044                     I2C_Write1ByteRegister@data:	
  1678                           ; 1 bytes @ 0x3
  1679                           
  1680                           
  1681                           ; 1 bytes @ 0x3
  1682  0044                     	ds	1
  1683  0045                     ??_I2C_Write1ByteRegister:
  1684  0045                     I2C_Read1ByteRegister@address:	
  1685                           ; 1 bytes @ 0x4
  1686                           
  1687                           
  1688                           ; 1 bytes @ 0x4
  1689  0045                     	ds	1
  1690  0046                     I2C_Read1ByteRegister@returnValue:
  1691  0046                     I2C_Write1ByteRegister@address:	
  1692                           ; 1 bytes @ 0x5
  1693                           
  1694                           
  1695                           ; 1 bytes @ 0x5
  1696  0046                     	ds	1
  1697  0047                     ??_Read_Slave_Sensors:
  1698                           
  1699                           ; 1 bytes @ 0x6
  1700  0047                     	ds	5
  1701  004C                     Read_Slave_Sensors@valor1:
  1702                           
  1703                           ; 1 bytes @ 0xB
  1704  004C                     	ds	1
  1705  004D                     Read_Slave_Sensors@valor2:
  1706                           
  1707                           ; 1 bytes @ 0xC
  1708  004D                     	ds	1
  1709  004E                     Read_Slave_Sensors@valor3:
  1710                           
  1711                           ; 1 bytes @ 0xD
  1712  004E                     	ds	1
  1713  004F                     Read_Slave_Sensors@valor4:
  1714                           
  1715                           ; 1 bytes @ 0xE
  1716  004F                     	ds	1
  1717  0050                     Read_Slave_Sensors@valorLuz:
  1718                           
  1719                           ; 2 bytes @ 0xF
  1720  0050                     	ds	2
  1721  0052                     Read_Slave_Sensors@valorLuz2:
  1722                           
  1723                           ; 2 bytes @ 0x11
  1724  0052                     	ds	2
  1725  0054                     Read_Slave_Sensors@esclavo:
  1726                           
  1727                           ; 1 bytes @ 0x13
  1728  0054                     	ds	1
  1729  0055                     ??_Read_All_Slave_Sensors:
  1730                           
  1731                           ; 1 bytes @ 0x14
  1732  0055                     	ds	1
  1733  0056                     Read_All_Slave_Sensors@n:
  1734                           
  1735                           ; 2 bytes @ 0x15
  1736  0056                     	ds	2
  1737                           
  1738                           	psect	maintext
  1739  0367                     __pmaintext:	
  1740 ;;
  1741 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1742 ;;
  1743 ;; *************** function _main *****************
  1744 ;; Defined at:
  1745 ;;		line 15 in file "../src/main.c"
  1746 ;; Parameters:    Size  Location     Type
  1747 ;;		None
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;		None
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  1    wreg      void 
  1752 ;; Registers used:
  1753 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1754 ;; Tracked objects:
  1755 ;;		On entry : B1F/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1763 ;;Total ram usage:        0 bytes
  1764 ;; Hardware stack levels required when called:   14
  1765 ;; This function calls:
  1766 ;;		_Clear_Master_TMR1_flag
  1767 ;;		_Get_Master_TMR1_flag
  1768 ;;		_Read_All_Slave_Sensors
  1769 ;;		_SYSTEM_Initialize
  1770 ;; This function is called by:
  1771 ;;		Startup code after reset
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           
  1776                           ;psect for function _main
  1777  0367                     _main:
  1778  0367                     l2684:	
  1779                           ;incstack = 0
  1780                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1781                           
  1782                           
  1783                           ;../src/main.c: 18:     SYSTEM_Initialize();
  1784  0367  3183  23DD  3183   	fcall	_SYSTEM_Initialize
  1785  036A                     l2686:
  1786                           
  1787                           ;../src/main.c: 21:     (INTCONbits.GIE = 1);
  1788  036A  178B               	bsf	11,7	;volatile
  1789  036B                     l2688:
  1790                           
  1791                           ;../src/main.c: 24:     (INTCONbits.PEIE = 1);
  1792  036B  170B               	bsf	11,6	;volatile
  1793  036C                     l2690:
  1794                           
  1795                           ;../src/main.c: 28:     {;../src/main.c: 29:         if (Get_Master_TMR1_flag())
  1796  036C  3184  24DD  3183   	fcall	_Get_Master_TMR1_flag
  1797  036F  3A00               	xorlw	0
  1798  0370  1903               	skipnz
  1799  0371  2B73               	goto	u871
  1800  0372  2B74               	goto	u870
  1801  0373                     u871:
  1802  0373  2B6C               	goto	l2690
  1803  0374                     u870:
  1804  0374                     l2692:
  1805                           
  1806                           ;../src/main.c: 30:         {;../src/main.c: 31:              Read_All_Slave_Sensors();
  1807  0374  3183  2316  3183   	fcall	_Read_All_Slave_Sensors
  1808  0377                     l2694:
  1809                           
  1810                           ;../src/main.c: 32:              Clear_Master_TMR1_flag();
  1811  0377  3184  24DF  3183   	fcall	_Clear_Master_TMR1_flag
  1812  037A  2B6C               	goto	l2690
  1813  037B  3180  2819         	ljmp	start
  1814  037D                     __end_of_main:
  1815                           
  1816                           	psect	text1
  1817  03DD                     __ptext1:	
  1818 ;; *************** function _SYSTEM_Initialize *****************
  1819 ;; Defined at:
  1820 ;;		line 4 in file "../src/init.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;		None
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;		None
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  1    wreg      void 
  1827 ;; Registers used:
  1828 ;;		wreg, status,2, status,0, pclath, cstack
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1838 ;;Total ram usage:        0 bytes
  1839 ;; Hardware stack levels used:    1
  1840 ;; Hardware stack levels required when called:    5
  1841 ;; This function calls:
  1842 ;;		_I2C_Initialize
  1843 ;;		_OSCILLATOR_Initialize
  1844 ;;		_PIN_MANAGER_Initialize
  1845 ;;		_TMR1_Initialize
  1846 ;;		_WDT_Initialize
  1847 ;; This function is called by:
  1848 ;;		_main
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           
  1852                           
  1853                           ;psect for function _SYSTEM_Initialize
  1854  03DD                     _SYSTEM_Initialize:
  1855  03DD                     l2146:	
  1856                           ;incstack = 0
  1857                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1858                           
  1859                           
  1860                           ;../src/init.c: 7:     I2C_Initialize();
  1861  03DD  3184  243C  3183   	fcall	_I2C_Initialize
  1862                           
  1863                           ;../src/init.c: 8:     PIN_MANAGER_Initialize();
  1864  03E0  3183  2393  3183   	fcall	_PIN_MANAGER_Initialize
  1865                           
  1866                           ;../src/init.c: 9:     OSCILLATOR_Initialize();
  1867  03E3  3184  2433  3183   	fcall	_OSCILLATOR_Initialize
  1868                           
  1869                           ;../src/init.c: 10:     WDT_Initialize();
  1870  03E6  3184  24AC  3183   	fcall	_WDT_Initialize
  1871                           
  1872                           ;../src/init.c: 11:     TMR1_Initialize();
  1873  03E9  3183  234F  3183   	fcall	_TMR1_Initialize
  1874  03EC                     l364:
  1875  03EC  0008               	return
  1876  03ED                     __end_of_SYSTEM_Initialize:
  1877                           
  1878                           	psect	text2
  1879  04AC                     __ptext2:	
  1880 ;; *************** function _WDT_Initialize *****************
  1881 ;; Defined at:
  1882 ;;		line 26 in file "../src/init.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;		None
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;		None
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    wreg      void 
  1889 ;; Registers used:
  1890 ;;		wreg
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1900 ;;Total ram usage:        0 bytes
  1901 ;; Hardware stack levels used:    1
  1902 ;; Hardware stack levels required when called:    3
  1903 ;; This function calls:
  1904 ;;		Nothing
  1905 ;; This function is called by:
  1906 ;;		_SYSTEM_Initialize
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           
  1911                           ;psect for function _WDT_Initialize
  1912  04AC                     _WDT_Initialize:
  1913  04AC                     l1496:	
  1914                           ;incstack = 0
  1915                           ; Regs used in _WDT_Initialize: [wreg]
  1916                           
  1917                           
  1918                           ;../src/init.c: 29:     WDTCON = 0x16;
  1919  04AC  3016               	movlw	22
  1920  04AD  0021               	movlb	1	; select bank1
  1921  04AE  0097               	movwf	23	;volatile
  1922  04AF                     l370:
  1923  04AF  0008               	return
  1924  04B0                     __end_of_WDT_Initialize:
  1925                           
  1926                           	psect	text3
  1927  034F                     __ptext3:	
  1928 ;; *************** function _TMR1_Initialize *****************
  1929 ;; Defined at:
  1930 ;;		line 8 in file "../src/tmr1.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;		None
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;		None
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  1    wreg      void 
  1937 ;; Registers used:
  1938 ;;		wreg, status,2, status,0, pclath, cstack
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1948 ;;Total ram usage:        0 bytes
  1949 ;; Hardware stack levels used:    1
  1950 ;; Hardware stack levels required when called:    4
  1951 ;; This function calls:
  1952 ;;		_TMR1_SetInterruptHandler
  1953 ;; This function is called by:
  1954 ;;		_SYSTEM_Initialize
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           
  1959                           ;psect for function _TMR1_Initialize
  1960  034F                     _TMR1_Initialize:
  1961  034F                     l2084:	
  1962                           ;incstack = 0
  1963                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1964                           
  1965                           
  1966                           ;../src/tmr1.c: 12:     T1GCON = 0x00;
  1967  034F  0020               	movlb	0	; select bank0
  1968  0350  0199               	clrf	25	;volatile
  1969  0351                     l2086:
  1970                           
  1971                           ;../src/tmr1.c: 15:     TMR1H = 0x0B;
  1972  0351  300B               	movlw	11
  1973  0352  0097               	movwf	23	;volatile
  1974  0353                     l2088:
  1975                           
  1976                           ;../src/tmr1.c: 18:     TMR1L = 0xDC;
  1977  0353  30DC               	movlw	220
  1978  0354  0096               	movwf	22	;volatile
  1979  0355                     l2090:
  1980                           
  1981                           ;../src/tmr1.c: 21:     PIR1bits.TMR1IF = 0;
  1982  0355  1011               	bcf	17,0	;volatile
  1983  0356                     l2092:
  1984                           
  1985                           ;../src/tmr1.c: 24:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  1986  0356  0817               	movf	23,w	;volatile
  1987  0357  00DB               	movwf	_timer1ReloadVal+1	;volatile
  1988  0358  0816               	movf	22,w	;volatile
  1989  0359  00DA               	movwf	_timer1ReloadVal	;volatile
  1990  035A                     l2094:
  1991                           
  1992                           ;../src/tmr1.c: 27:     PIE1bits.TMR1IE = 1;
  1993  035A  0021               	movlb	1	; select bank1
  1994  035B  1411               	bsf	17,0	;volatile
  1995  035C                     l2096:
  1996                           
  1997                           ;../src/tmr1.c: 30:     TMR1_SetInterruptHandler(TMR1_Master_InterruptHandler);
  1998  035C  30D6               	movlw	low _TMR1_Master_InterruptHandler
  1999  035D  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  2000  035E  3004               	movlw	high _TMR1_Master_InterruptHandler
  2001  035F  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  2002  0360  3184  2463  3183   	fcall	_TMR1_SetInterruptHandler
  2003  0363                     l2098:
  2004                           
  2005                           ;../src/tmr1.c: 33:     T1CON = 0x31;
  2006  0363  3031               	movlw	49
  2007  0364  0020               	movlb	0	; select bank0
  2008  0365  0098               	movwf	24	;volatile
  2009  0366                     l480:
  2010  0366  0008               	return
  2011  0367                     __end_of_TMR1_Initialize:
  2012                           
  2013                           	psect	text4
  2014  0463                     __ptext4:	
  2015 ;; *************** function _TMR1_SetInterruptHandler *****************
  2016 ;; Defined at:
  2017 ;;		line 72 in file "../src/tmr1.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  2020 ;;		 -> TMR1_Master_InterruptHandler(1), 
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;		None
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  1    wreg      void 
  2025 ;; Registers used:
  2026 ;;		wreg
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2032 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2035 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2036 ;;Total ram usage:        2 bytes
  2037 ;; Hardware stack levels used:    1
  2038 ;; Hardware stack levels required when called:    3
  2039 ;; This function calls:
  2040 ;;		Nothing
  2041 ;; This function is called by:
  2042 ;;		_TMR1_Initialize
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           
  2047                           ;psect for function _TMR1_SetInterruptHandler
  2048  0463                     _TMR1_SetInterruptHandler:
  2049  0463                     l2082:	
  2050                           ;incstack = 0
  2051                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  2052                           
  2053                           
  2054                           ;../src/tmr1.c: 73:     TMR1_InterruptHandler = InterruptHandler;
  2055  0463  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  2056  0464  0020               	movlb	0	; select bank0
  2057  0465  00D9               	movwf	_TMR1_InterruptHandler+1
  2058  0466  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  2059  0467  00D8               	movwf	_TMR1_InterruptHandler
  2060  0468                     l492:
  2061  0468  0008               	return
  2062  0469                     __end_of_TMR1_SetInterruptHandler:
  2063                           
  2064                           	psect	text5
  2065  0393                     __ptext5:	
  2066 ;; *************** function _PIN_MANAGER_Initialize *****************
  2067 ;; Defined at:
  2068 ;;		line 4 in file "../src/pin_manager.c"
  2069 ;; Parameters:    Size  Location     Type
  2070 ;;		None
  2071 ;; Auto vars:     Size  Location     Type
  2072 ;;		None
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  1    wreg      void 
  2075 ;; Registers used:
  2076 ;;		wreg, status,2
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2086 ;;Total ram usage:        0 bytes
  2087 ;; Hardware stack levels used:    1
  2088 ;; Hardware stack levels required when called:    3
  2089 ;; This function calls:
  2090 ;;		Nothing
  2091 ;; This function is called by:
  2092 ;;		_SYSTEM_Initialize
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           
  2097                           ;psect for function _PIN_MANAGER_Initialize
  2098  0393                     _PIN_MANAGER_Initialize:
  2099  0393                     l1470:	
  2100                           ;incstack = 0
  2101                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2102                           
  2103                           
  2104                           ;../src/pin_manager.c: 9:     LATA = 0x00;
  2105  0393  0022               	movlb	2	; select bank2
  2106  0394  018C               	clrf	12	;volatile
  2107  0395                     l1472:
  2108                           
  2109                           ;../src/pin_manager.c: 10:     LATC = 0x02;
  2110  0395  3002               	movlw	2
  2111  0396  008E               	movwf	14	;volatile
  2112  0397                     l1474:
  2113                           
  2114                           ;../src/pin_manager.c: 15:     TRISA = 0x30;
  2115  0397  3030               	movlw	48
  2116  0398  0021               	movlb	1	; select bank1
  2117  0399  008C               	movwf	12	;volatile
  2118  039A                     l1476:
  2119                           
  2120                           ;../src/pin_manager.c: 16:     TRISC = 0x3F;
  2121  039A  303F               	movlw	63
  2122  039B  008E               	movwf	14	;volatile
  2123  039C                     l1478:
  2124                           
  2125                           ;../src/pin_manager.c: 21:     ANSELC = 0x0C;
  2126  039C  300C               	movlw	12
  2127  039D  0023               	movlb	3	; select bank3
  2128  039E  008E               	movwf	14	;volatile
  2129  039F                     l1480:
  2130                           
  2131                           ;../src/pin_manager.c: 22:     ANSELA = 0x10;
  2132  039F  3010               	movlw	16
  2133  03A0  008C               	movwf	12	;volatile
  2134  03A1                     l1482:
  2135                           
  2136                           ;../src/pin_manager.c: 27:     WPUA = 0x00;
  2137  03A1  0024               	movlb	4	; select bank4
  2138  03A2  018C               	clrf	12	;volatile
  2139  03A3                     l1484:
  2140                           
  2141                           ;../src/pin_manager.c: 28:     OPTION_REGbits.nWPUEN = 1;
  2142  03A3  0021               	movlb	1	; select bank1
  2143  03A4  1795               	bsf	21,7	;volatile
  2144  03A5                     l1486:
  2145                           
  2146                           ;../src/pin_manager.c: 34:     APFCON = 0x00;
  2147  03A5  0022               	movlb	2	; select bank2
  2148  03A6  019D               	clrf	29	;volatile
  2149  03A7                     l449:
  2150  03A7  0008               	return
  2151  03A8                     __end_of_PIN_MANAGER_Initialize:
  2152                           
  2153                           	psect	text6
  2154  0433                     __ptext6:	
  2155 ;; *************** function _OSCILLATOR_Initialize *****************
  2156 ;; Defined at:
  2157 ;;		line 14 in file "../src/init.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;		None
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;		None
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  1    wreg      void 
  2164 ;; Registers used:
  2165 ;;		wreg, status,2
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2175 ;;Total ram usage:        0 bytes
  2176 ;; Hardware stack levels used:    1
  2177 ;; Hardware stack levels required when called:    3
  2178 ;; This function calls:
  2179 ;;		Nothing
  2180 ;; This function is called by:
  2181 ;;		_SYSTEM_Initialize
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           
  2186                           ;psect for function _OSCILLATOR_Initialize
  2187  0433                     _OSCILLATOR_Initialize:
  2188  0433                     l1488:	
  2189                           ;incstack = 0
  2190                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2191                           
  2192                           
  2193                           ;../src/init.c: 17:     OSCCON = 0x32;
  2194  0433  3032               	movlw	50
  2195  0434  0021               	movlb	1	; select bank1
  2196  0435  0099               	movwf	25	;volatile
  2197  0436                     l1490:
  2198                           
  2199                           ;../src/init.c: 19:     OSCTUNE = 0x00;
  2200  0436  0198               	clrf	24	;volatile
  2201  0437                     l1492:
  2202                           
  2203                           ;../src/init.c: 21:     ACTCON = 0x00;
  2204  0437  0027               	movlb	7	; select bank7
  2205  0438  019B               	clrf	27	;volatile
  2206  0439                     l1494:
  2207                           
  2208                           ;../src/init.c: 23:     BORCON = 0x00;
  2209  0439  0022               	movlb	2	; select bank2
  2210  043A  0196               	clrf	22	;volatile
  2211  043B                     l367:
  2212  043B  0008               	return
  2213  043C                     __end_of_OSCILLATOR_Initialize:
  2214                           
  2215                           	psect	text7
  2216  043C                     __ptext7:	
  2217 ;; *************** function _I2C_Initialize *****************
  2218 ;; Defined at:
  2219 ;;		line 117 in file "../src/i2c_master.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;		None
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;		None
  2224 ;; Return value:  Size  Location     Type
  2225 ;;                  1    wreg      void 
  2226 ;; Registers used:
  2227 ;;		wreg, status,2
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2237 ;;Total ram usage:        0 bytes
  2238 ;; Hardware stack levels used:    1
  2239 ;; Hardware stack levels required when called:    3
  2240 ;; This function calls:
  2241 ;;		Nothing
  2242 ;; This function is called by:
  2243 ;;		_SYSTEM_Initialize
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           
  2248                           ;psect for function _I2C_Initialize
  2249  043C                     _I2C_Initialize:
  2250  043C                     l1462:	
  2251                           ;incstack = 0
  2252                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  2253                           
  2254                           
  2255                           ;../src/i2c_master.c: 119:     SSP1STAT = 0x00;
  2256  043C  0024               	movlb	4	; select bank4
  2257  043D  0194               	clrf	20	;volatile
  2258  043E                     l1464:
  2259                           
  2260                           ;../src/i2c_master.c: 120:     SSP1CON1 = 0x08;
  2261  043E  3008               	movlw	8
  2262  043F  0095               	movwf	21	;volatile
  2263  0440                     l1466:
  2264                           
  2265                           ;../src/i2c_master.c: 121:     SSP1CON2 = 0x00;
  2266  0440  0196               	clrf	22	;volatile
  2267                           
  2268                           ;../src/i2c_master.c: 122:     SSP1ADD = 0x04;
  2269  0441  3004               	movlw	4
  2270  0442  0092               	movwf	18	;volatile
  2271  0443                     l1468:
  2272                           
  2273                           ;../src/i2c_master.c: 123:     SSP1CON1bits.SSPEN = 0;
  2274  0443  1295               	bcf	21,5	;volatile
  2275  0444                     l105:
  2276  0444  0008               	return
  2277  0445                     __end_of_I2C_Initialize:
  2278                           
  2279                           	psect	text8
  2280  0316                     __ptext8:	
  2281 ;; *************** function _Read_All_Slave_Sensors *****************
  2282 ;; Defined at:
  2283 ;;		line 50 in file "../src/vertebra_master_ldr.c"
  2284 ;; Parameters:    Size  Location     Type
  2285 ;;		None
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;  n               2   21[BANK0 ] int 
  2288 ;; Return value:  Size  Location     Type
  2289 ;;                  1    wreg      void 
  2290 ;; Registers used:
  2291 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2292 ;; Tracked objects:
  2293 ;;		On entry : 0/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2298 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2299 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2300 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2301 ;;Total ram usage:        3 bytes
  2302 ;; Hardware stack levels used:    1
  2303 ;; Hardware stack levels required when called:   13
  2304 ;; This function calls:
  2305 ;;		_Read_Slave_Sensors
  2306 ;; This function is called by:
  2307 ;;		_main
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           
  2312                           ;psect for function _Read_All_Slave_Sensors
  2313  0316                     _Read_All_Slave_Sensors:
  2314  0316                     l2676:	
  2315                           ;incstack = 0
  2316                           ; Regs used in _Read_All_Slave_Sensors: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2317                           
  2318                           
  2319                           ;../src/vertebra_master_ldr.c: 51:     int n=0;
  2320  0316  0020               	movlb	0	; select bank0
  2321  0317  01D6               	clrf	Read_All_Slave_Sensors@n
  2322  0318  01D7               	clrf	Read_All_Slave_Sensors@n+1
  2323                           
  2324                           ;../src/vertebra_master_ldr.c: 53:     while(n<2){
  2325  0319  2B25               	goto	l2682
  2326  031A                     l2678:
  2327                           
  2328                           ;../src/vertebra_master_ldr.c: 54:         Read_Slave_Sensors(31+n);
  2329  031A  0020               	movlb	0	; select bank0
  2330  031B  0856               	movf	Read_All_Slave_Sensors@n,w
  2331  031C  3E1F               	addlw	31
  2332  031D  3180  2035  3183   	fcall	_Read_Slave_Sensors
  2333  0320                     l2680:
  2334                           
  2335                           ;../src/vertebra_master_ldr.c: 55:         n++;
  2336  0320  3001               	movlw	1
  2337  0321  0020               	movlb	0	; select bank0
  2338  0322  07D6               	addwf	Read_All_Slave_Sensors@n,f
  2339  0323  3000               	movlw	0
  2340  0324  3DD7               	addwfc	Read_All_Slave_Sensors@n+1,f
  2341  0325                     l2682:
  2342                           
  2343                           ;../src/vertebra_master_ldr.c: 53:     while(n<2){
  2344  0325  0857               	movf	Read_All_Slave_Sensors@n+1,w
  2345  0326  3A80               	xorlw	128
  2346  0327  00D5               	movwf	??_Read_All_Slave_Sensors
  2347  0328  3080               	movlw	128
  2348  0329  0255               	subwf	??_Read_All_Slave_Sensors,w
  2349  032A  1D03               	skipz
  2350  032B  2B2E               	goto	u865
  2351  032C  3002               	movlw	2
  2352  032D  0256               	subwf	Read_All_Slave_Sensors@n,w
  2353  032E                     u865:
  2354  032E  1C03               	skipc
  2355  032F  2B31               	goto	u861
  2356  0330  2B32               	goto	u860
  2357  0331                     u861:
  2358  0331  2B1A               	goto	l2678
  2359  0332                     u860:
  2360  0332                     l536:
  2361  0332  0008               	return
  2362  0333                     __end_of_Read_All_Slave_Sensors:
  2363                           
  2364                           	psect	text9
  2365  0035                     __ptext9:	
  2366 ;; *************** function _Read_Slave_Sensors *****************
  2367 ;; Defined at:
  2368 ;;		line 18 in file "../src/vertebra_master_ldr.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;  esclavo         1    wreg     unsigned char 
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;  esclavo         1   19[BANK0 ] unsigned char 
  2373 ;;  valorLuz2       2   17[BANK0 ] unsigned short 
  2374 ;;  valorLuz        2   15[BANK0 ] unsigned short 
  2375 ;;  valor4          1   14[BANK0 ] unsigned char 
  2376 ;;  valor3          1   13[BANK0 ] unsigned char 
  2377 ;;  valor2          1   12[BANK0 ] unsigned char 
  2378 ;;  valor1          1   11[BANK0 ] unsigned char 
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  1    wreg      void 
  2381 ;; Registers used:
  2382 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2389 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2390 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2391 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2392 ;;Total ram usage:       14 bytes
  2393 ;; Hardware stack levels used:    1
  2394 ;; Hardware stack levels required when called:   12
  2395 ;; This function calls:
  2396 ;;		_I2C_Read1ByteRegister
  2397 ;;		_I2C_Write1ByteRegister
  2398 ;; This function is called by:
  2399 ;;		_Read_All_Slave_Sensors
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           
  2404                           ;psect for function _Read_Slave_Sensors
  2405  0035                     _Read_Slave_Sensors:
  2406                           
  2407                           ;incstack = 0
  2408                           ; Regs used in _Read_Slave_Sensors: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2409                           ;Read_Slave_Sensors@esclavo stored from wreg
  2410  0035  0020               	movlb	0	; select bank0
  2411  0036  00D4               	movwf	Read_Slave_Sensors@esclavo
  2412  0037                     l2646:
  2413                           
  2414                           ;../src/vertebra_master_ldr.c: 19:     uint8_t valor1,valor2,valor3,valor4;;../src/verte
      +                          bra_master_ldr.c: 20:     uint16_t valorLuz,valorLuz2;;../src/vertebra_master_ldr.c: 23:
      +                               valor1= I2C_Read1ByteRegister(esclavo,1);
  2415  0037  01C3               	clrf	I2C_Read1ByteRegister@reg
  2416  0038  0AC3               	incf	I2C_Read1ByteRegister@reg,f
  2417  0039  0854               	movf	Read_Slave_Sensors@esclavo,w
  2418  003A  3181  21C2  3180   	fcall	_I2C_Read1ByteRegister
  2419  003D  0020               	movlb	0	; select bank0
  2420  003E  00C7               	movwf	??_Read_Slave_Sensors
  2421  003F  0847               	movf	??_Read_Slave_Sensors,w
  2422  0040  00CC               	movwf	Read_Slave_Sensors@valor1
  2423                           
  2424                           ;../src/vertebra_master_ldr.c: 24:     valor2 = I2C_Read1ByteRegister(esclavo,2);
  2425  0041  3002               	movlw	2
  2426  0042  00C7               	movwf	??_Read_Slave_Sensors
  2427  0043  0847               	movf	??_Read_Slave_Sensors,w
  2428  0044  00C3               	movwf	I2C_Read1ByteRegister@reg
  2429  0045  0854               	movf	Read_Slave_Sensors@esclavo,w
  2430  0046  3181  21C2  3180   	fcall	_I2C_Read1ByteRegister
  2431  0049  0020               	movlb	0	; select bank0
  2432  004A  00C8               	movwf	??_Read_Slave_Sensors+1
  2433  004B  0848               	movf	??_Read_Slave_Sensors+1,w
  2434  004C  00CD               	movwf	Read_Slave_Sensors@valor2
  2435  004D                     l2648:
  2436                           
  2437                           ;../src/vertebra_master_ldr.c: 25:     valorLuz= ((uint16_t)((valor1 << 8) + valor2));
  2438  004D  084D               	movf	Read_Slave_Sensors@valor2,w
  2439  004E  00C7               	movwf	??_Read_Slave_Sensors
  2440  004F  01C8               	clrf	??_Read_Slave_Sensors+1
  2441  0050  084C               	movf	Read_Slave_Sensors@valor1,w
  2442  0051  00C9               	movwf	??_Read_Slave_Sensors+2
  2443  0052  01CA               	clrf	??_Read_Slave_Sensors+3
  2444  0053  0849               	movf	??_Read_Slave_Sensors+2,w
  2445  0054  00CA               	movwf	??_Read_Slave_Sensors+3
  2446  0055  01C9               	clrf	??_Read_Slave_Sensors+2
  2447  0056  0847               	movf	??_Read_Slave_Sensors,w
  2448  0057  0749               	addwf	??_Read_Slave_Sensors+2,w
  2449  0058  00D0               	movwf	Read_Slave_Sensors@valorLuz
  2450  0059  0848               	movf	??_Read_Slave_Sensors+1,w
  2451  005A  3D4A               	addwfc	??_Read_Slave_Sensors+3,w
  2452  005B  00D1               	movwf	Read_Slave_Sensors@valorLuz+1
  2453  005C                     l2650:
  2454                           
  2455                           ;../src/vertebra_master_ldr.c: 27:     valor3= I2C_Read1ByteRegister(esclavo,3);
  2456  005C  3003               	movlw	3
  2457  005D  00C7               	movwf	??_Read_Slave_Sensors
  2458  005E  0847               	movf	??_Read_Slave_Sensors,w
  2459  005F  00C3               	movwf	I2C_Read1ByteRegister@reg
  2460  0060  0854               	movf	Read_Slave_Sensors@esclavo,w
  2461  0061  3181  21C2  3180   	fcall	_I2C_Read1ByteRegister
  2462  0064  0020               	movlb	0	; select bank0
  2463  0065  00C8               	movwf	??_Read_Slave_Sensors+1
  2464  0066  0848               	movf	??_Read_Slave_Sensors+1,w
  2465  0067  00CE               	movwf	Read_Slave_Sensors@valor3
  2466  0068                     l2652:
  2467                           
  2468                           ;../src/vertebra_master_ldr.c: 28:     valor4 = I2C_Read1ByteRegister(esclavo,4);
  2469  0068  3004               	movlw	4
  2470  0069  00C7               	movwf	??_Read_Slave_Sensors
  2471  006A  0847               	movf	??_Read_Slave_Sensors,w
  2472  006B  00C3               	movwf	I2C_Read1ByteRegister@reg
  2473  006C  0854               	movf	Read_Slave_Sensors@esclavo,w
  2474  006D  3181  21C2  3180   	fcall	_I2C_Read1ByteRegister
  2475  0070  0020               	movlb	0	; select bank0
  2476  0071  00C8               	movwf	??_Read_Slave_Sensors+1
  2477  0072  0848               	movf	??_Read_Slave_Sensors+1,w
  2478  0073  00CF               	movwf	Read_Slave_Sensors@valor4
  2479  0074                     l2654:
  2480                           
  2481                           ;../src/vertebra_master_ldr.c: 29:     valorLuz2= ((uint16_t)((valor3 << 8) + valor4));
  2482  0074  084F               	movf	Read_Slave_Sensors@valor4,w
  2483  0075  00C7               	movwf	??_Read_Slave_Sensors
  2484  0076  01C8               	clrf	??_Read_Slave_Sensors+1
  2485  0077  084E               	movf	Read_Slave_Sensors@valor3,w
  2486  0078  00C9               	movwf	??_Read_Slave_Sensors+2
  2487  0079  01CA               	clrf	??_Read_Slave_Sensors+3
  2488  007A  0849               	movf	??_Read_Slave_Sensors+2,w
  2489  007B  00CA               	movwf	??_Read_Slave_Sensors+3
  2490  007C  01C9               	clrf	??_Read_Slave_Sensors+2
  2491  007D  0847               	movf	??_Read_Slave_Sensors,w
  2492  007E  0749               	addwf	??_Read_Slave_Sensors+2,w
  2493  007F  00D2               	movwf	Read_Slave_Sensors@valorLuz2
  2494  0080  0848               	movf	??_Read_Slave_Sensors+1,w
  2495  0081  3D4A               	addwfc	??_Read_Slave_Sensors+3,w
  2496  0082  00D3               	movwf	Read_Slave_Sensors@valorLuz2+1
  2497  0083                     l2656:
  2498                           
  2499                           ;../src/vertebra_master_ldr.c: 32:     if (valorLuz > 512 && valorLuz2 < 512){
  2500  0083  3002               	movlw	2
  2501  0084  0251               	subwf	Read_Slave_Sensors@valorLuz+1,w
  2502  0085  3001               	movlw	1
  2503  0086  1903               	skipnz
  2504  0087  0250               	subwf	Read_Slave_Sensors@valorLuz,w
  2505  0088  1C03               	skipc
  2506  0089  288B               	goto	u801
  2507  008A  288C               	goto	u800
  2508  008B                     u801:
  2509  008B  28A2               	goto	l2662
  2510  008C                     u800:
  2511  008C                     l2658:
  2512  008C  3002               	movlw	2
  2513  008D  0253               	subwf	Read_Slave_Sensors@valorLuz2+1,w
  2514  008E  3000               	movlw	0
  2515  008F  1903               	skipnz
  2516  0090  0252               	subwf	Read_Slave_Sensors@valorLuz2,w
  2517  0091  1803               	skipnc
  2518  0092  2894               	goto	u811
  2519  0093  2895               	goto	u810
  2520  0094                     u811:
  2521  0094  28A2               	goto	l2662
  2522  0095                     u810:
  2523  0095                     l2660:
  2524  0095  300F               	movlw	15
  2525  0096  00C7               	movwf	??_Read_Slave_Sensors
  2526  0097  0847               	movf	??_Read_Slave_Sensors,w
  2527  0098  00C3               	movwf	I2C_Write1ByteRegister@reg
  2528  0099  300F               	movlw	15
  2529  009A  00C8               	movwf	??_Read_Slave_Sensors+1
  2530  009B  0848               	movf	??_Read_Slave_Sensors+1,w
  2531  009C  00C4               	movwf	I2C_Write1ByteRegister@data
  2532  009D  0854               	movf	Read_Slave_Sensors@esclavo,w
  2533  009E  3181  21F8  3180   	fcall	_I2C_Write1ByteRegister
  2534                           
  2535                           ;../src/vertebra_master_ldr.c: 35:     }
  2536  00A1  28EC               	goto	l530
  2537  00A2                     l2662:
  2538  00A2  3002               	movlw	2
  2539  00A3  0251               	subwf	Read_Slave_Sensors@valorLuz+1,w
  2540  00A4  3000               	movlw	0
  2541  00A5  1903               	skipnz
  2542  00A6  0250               	subwf	Read_Slave_Sensors@valorLuz,w
  2543  00A7  1803               	skipnc
  2544  00A8  28AA               	goto	u821
  2545  00A9  28AB               	goto	u820
  2546  00AA                     u821:
  2547  00AA  28C1               	goto	l2668
  2548  00AB                     u820:
  2549  00AB                     l2664:
  2550  00AB  3002               	movlw	2
  2551  00AC  0253               	subwf	Read_Slave_Sensors@valorLuz2+1,w
  2552  00AD  3001               	movlw	1
  2553  00AE  1903               	skipnz
  2554  00AF  0252               	subwf	Read_Slave_Sensors@valorLuz2,w
  2555  00B0  1C03               	skipc
  2556  00B1  28B3               	goto	u831
  2557  00B2  28B4               	goto	u830
  2558  00B3                     u831:
  2559  00B3  28C1               	goto	l2668
  2560  00B4                     u830:
  2561  00B4                     l2666:
  2562  00B4  300F               	movlw	15
  2563  00B5  00C7               	movwf	??_Read_Slave_Sensors
  2564  00B6  0847               	movf	??_Read_Slave_Sensors,w
  2565  00B7  00C3               	movwf	I2C_Write1ByteRegister@reg
  2566  00B8  304B               	movlw	75
  2567  00B9  00C8               	movwf	??_Read_Slave_Sensors+1
  2568  00BA  0848               	movf	??_Read_Slave_Sensors+1,w
  2569  00BB  00C4               	movwf	I2C_Write1ByteRegister@data
  2570  00BC  0854               	movf	Read_Slave_Sensors@esclavo,w
  2571  00BD  3181  21F8  3180   	fcall	_I2C_Write1ByteRegister
  2572                           
  2573                           ;../src/vertebra_master_ldr.c: 39:     }
  2574  00C0  28EC               	goto	l530
  2575  00C1                     l2668:
  2576  00C1  3002               	movlw	2
  2577  00C2  0251               	subwf	Read_Slave_Sensors@valorLuz+1,w
  2578  00C3  3001               	movlw	1
  2579  00C4  1903               	skipnz
  2580  00C5  0250               	subwf	Read_Slave_Sensors@valorLuz,w
  2581  00C6  1C03               	skipc
  2582  00C7  28C9               	goto	u841
  2583  00C8  28CA               	goto	u840
  2584  00C9                     u841:
  2585  00C9  28E0               	goto	l2674
  2586  00CA                     u840:
  2587  00CA                     l2670:
  2588  00CA  3002               	movlw	2
  2589  00CB  0253               	subwf	Read_Slave_Sensors@valorLuz2+1,w
  2590  00CC  3001               	movlw	1
  2591  00CD  1903               	skipnz
  2592  00CE  0252               	subwf	Read_Slave_Sensors@valorLuz2,w
  2593  00CF  1C03               	skipc
  2594  00D0  28D2               	goto	u851
  2595  00D1  28D3               	goto	u850
  2596  00D2                     u851:
  2597  00D2  28E0               	goto	l2674
  2598  00D3                     u850:
  2599  00D3                     l2672:
  2600  00D3  300F               	movlw	15
  2601  00D4  00C7               	movwf	??_Read_Slave_Sensors
  2602  00D5  0847               	movf	??_Read_Slave_Sensors,w
  2603  00D6  00C3               	movwf	I2C_Write1ByteRegister@reg
  2604  00D7  302D               	movlw	45
  2605  00D8  00C8               	movwf	??_Read_Slave_Sensors+1
  2606  00D9  0848               	movf	??_Read_Slave_Sensors+1,w
  2607  00DA  00C4               	movwf	I2C_Write1ByteRegister@data
  2608  00DB  0854               	movf	Read_Slave_Sensors@esclavo,w
  2609  00DC  3181  21F8  3180   	fcall	_I2C_Write1ByteRegister
  2610                           
  2611                           ;../src/vertebra_master_ldr.c: 43:     }
  2612  00DF  28EC               	goto	l530
  2613  00E0                     l2674:
  2614  00E0  300F               	movlw	15
  2615  00E1  00C7               	movwf	??_Read_Slave_Sensors
  2616  00E2  0847               	movf	??_Read_Slave_Sensors,w
  2617  00E3  00C3               	movwf	I2C_Write1ByteRegister@reg
  2618  00E4  302D               	movlw	45
  2619  00E5  00C8               	movwf	??_Read_Slave_Sensors+1
  2620  00E6  0848               	movf	??_Read_Slave_Sensors+1,w
  2621  00E7  00C4               	movwf	I2C_Write1ByteRegister@data
  2622  00E8  0854               	movf	Read_Slave_Sensors@esclavo,w
  2623  00E9  3181  21F8  3180   	fcall	_I2C_Write1ByteRegister
  2624  00EC                     l530:
  2625  00EC  0008               	return
  2626  00ED                     __end_of_Read_Slave_Sensors:
  2627                           
  2628                           	psect	text10
  2629  01F8                     __ptext10:	
  2630 ;; *************** function _I2C_Write1ByteRegister *****************
  2631 ;; Defined at:
  2632 ;;		line 27 in file "../src/i2c_master_functions.c"
  2633 ;; Parameters:    Size  Location     Type
  2634 ;;  address         1    wreg     unsigned char 
  2635 ;;  reg             1    2[BANK0 ] unsigned char 
  2636 ;;  data            1    3[BANK0 ] unsigned char 
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;  address         1    5[BANK0 ] unsigned char 
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  1    wreg      void 
  2641 ;; Registers used:
  2642 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2648 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2649 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2650 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2651 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2652 ;;Total ram usage:        4 bytes
  2653 ;; Hardware stack levels used:    1
  2654 ;; Hardware stack levels required when called:   11
  2655 ;; This function calls:
  2656 ;;		_I2C_Close
  2657 ;;		_I2C_MasterWrite
  2658 ;;		_I2C_Open
  2659 ;;		_I2C_SetAddressNackCallback
  2660 ;;		_I2C_SetBuffer
  2661 ;;		_I2C_SetDataCompleteCallback
  2662 ;; This function is called by:
  2663 ;;		_Read_Slave_Sensors
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           
  2668                           ;psect for function _I2C_Write1ByteRegister
  2669  01F8                     _I2C_Write1ByteRegister:
  2670                           
  2671                           ;incstack = 0
  2672                           ; Regs used in _I2C_Write1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2673                           ;I2C_Write1ByteRegister@address stored from wreg
  2674  01F8  0020               	movlb	0	; select bank0
  2675  01F9  00C6               	movwf	I2C_Write1ByteRegister@address
  2676  01FA                     l2632:
  2677  01FA                     l2634:	
  2678                           ;../src/i2c_master_functions.c: 27: void I2C_Write1ByteRegister(i2c_address_t address, u
      +                          int8_t reg, uint8_t data);../src/i2c_master_functions.c: 28: {;../src/i2c_master_functio
      +                          ns.c: 29:     while(!I2C_Open(address));
  2679                           
  2680  01FA  0020               	movlb	0	; select bank0
  2681  01FB  0846               	movf	I2C_Write1ByteRegister@address,w
  2682  01FC  3181  2188  3181   	fcall	_I2C_Open
  2683  01FF  3A00               	xorlw	0
  2684  0200  1903               	skipnz
  2685  0201  2A03               	goto	u781
  2686  0202  2A04               	goto	u780
  2687  0203                     u781:
  2688  0203  29FA               	goto	l2634
  2689  0204                     u780:
  2690  0204                     l2636:
  2691                           
  2692                           ;../src/i2c_master_functions.c: 30:     I2C_SetDataCompleteCallback(wr1RegCompleteHandle
      +                          r,&data);
  2693  0204  30BA               	movlw	low _wr1RegCompleteHandler
  2694  0205  00F7               	movwf	I2C_SetDataCompleteCallback@cb
  2695  0206  3003               	movlw	high _wr1RegCompleteHandler
  2696  0207  00F8               	movwf	I2C_SetDataCompleteCallback@cb+1
  2697  0208  3044               	movlw	(low (I2C_Write1ByteRegister@data| 0))& (0+255)
  2698  0209  0020               	movlb	0	; select bank0
  2699  020A  00C5               	movwf	??_I2C_Write1ByteRegister
  2700  020B  0845               	movf	??_I2C_Write1ByteRegister,w
  2701  020C  00F9               	movwf	I2C_SetDataCompleteCallback@ptr
  2702  020D  3184  240B  3181   	fcall	_I2C_SetDataCompleteCallback
  2703  0210                     l2638:
  2704                           
  2705                           ;../src/i2c_master_functions.c: 31:     I2C_SetBuffer(&reg,1);
  2706  0210  3001               	movlw	1
  2707  0211  00F2               	movwf	I2C_SetBuffer@bufferSize
  2708  0212  3000               	movlw	0
  2709  0213  00F3               	movwf	I2C_SetBuffer@bufferSize+1
  2710  0214  3043               	movlw	(low (I2C_Write1ByteRegister@reg| 0))& (0+255)
  2711  0215  3183  23ED  3181   	fcall	_I2C_SetBuffer
  2712  0218                     l2640:
  2713                           
  2714                           ;../src/i2c_master_functions.c: 32:     I2C_SetAddressNackCallback(((void*)0),((void*)0)
      +                          );
  2715  0218  3000               	movlw	0
  2716  0219  00F7               	movwf	I2C_SetAddressNackCallback@cb
  2717  021A  00F8               	movwf	I2C_SetAddressNackCallback@cb+1
  2718  021B  01F9               	clrf	I2C_SetAddressNackCallback@ptr
  2719  021C  3183  23FD  3181   	fcall	_I2C_SetAddressNackCallback
  2720  021F                     l2642:
  2721                           
  2722                           ;../src/i2c_master_functions.c: 33:     I2C_MasterWrite();
  2723  021F  3184  2475  3181   	fcall	_I2C_MasterWrite
  2724  0222                     l2644:	
  2725                           ;../src/i2c_master_functions.c: 34:     while(I2C_BUSY == I2C_Close());
  2726                           
  2727  0222  3183  2333  3181   	fcall	_I2C_Close
  2728  0225  3A01               	xorlw	1
  2729  0226  1903               	skipnz
  2730  0227  2A29               	goto	u791
  2731  0228  2A2A               	goto	u790
  2732  0229                     u791:
  2733  0229  2A22               	goto	l2644
  2734  022A                     u790:
  2735  022A                     l327:
  2736  022A  0008               	return
  2737  022B                     __end_of_I2C_Write1ByteRegister:
  2738                           
  2739                           	psect	text11
  2740  01C2                     __ptext11:	
  2741 ;; *************** function _I2C_Read1ByteRegister *****************
  2742 ;; Defined at:
  2743 ;;		line 13 in file "../src/i2c_master_functions.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;  address         1    wreg     unsigned char 
  2746 ;;  reg             1    2[BANK0 ] unsigned char 
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;  address         1    4[BANK0 ] unsigned char 
  2749 ;;  returnValue     1    5[BANK0 ] unsigned char 
  2750 ;; Return value:  Size  Location     Type
  2751 ;;                  1    wreg      unsigned char 
  2752 ;; Registers used:
  2753 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2759 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2760 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2761 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2762 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2763 ;;Total ram usage:        4 bytes
  2764 ;; Hardware stack levels used:    1
  2765 ;; Hardware stack levels required when called:   11
  2766 ;; This function calls:
  2767 ;;		_I2C_Close
  2768 ;;		_I2C_MasterWrite
  2769 ;;		_I2C_Open
  2770 ;;		_I2C_SetAddressNackCallback
  2771 ;;		_I2C_SetBuffer
  2772 ;;		_I2C_SetDataCompleteCallback
  2773 ;; This function is called by:
  2774 ;;		_Read_Slave_Sensors
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777                           
  2778                           
  2779                           ;psect for function _I2C_Read1ByteRegister
  2780  01C2                     _I2C_Read1ByteRegister:
  2781                           
  2782                           ;incstack = 0
  2783                           ; Regs used in _I2C_Read1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2784                           ;I2C_Read1ByteRegister@address stored from wreg
  2785  01C2  0020               	movlb	0	; select bank0
  2786  01C3  00C5               	movwf	I2C_Read1ByteRegister@address
  2787  01C4                     l2614:
  2788                           
  2789                           ;../src/i2c_master_functions.c: 13: uint8_t I2C_Read1ByteRegister(i2c_address_t address,
      +                           uint8_t reg);../src/i2c_master_functions.c: 14: {;../src/i2c_master_functions.c: 15:   
      +                            uint8_t returnValue = 0x00;
  2790  01C4  01C6               	clrf	I2C_Read1ByteRegister@returnValue
  2791  01C5                     l2616:	
  2792                           ;../src/i2c_master_functions.c: 17:     while(!I2C_Open(address));
  2793                           
  2794  01C5  0020               	movlb	0	; select bank0
  2795  01C6  0845               	movf	I2C_Read1ByteRegister@address,w
  2796  01C7  3181  2188  3181   	fcall	_I2C_Open
  2797  01CA  3A00               	xorlw	0
  2798  01CB  1903               	skipnz
  2799  01CC  29CE               	goto	u761
  2800  01CD  29CF               	goto	u760
  2801  01CE                     u761:
  2802  01CE  29C5               	goto	l2616
  2803  01CF                     u760:
  2804  01CF                     l2618:
  2805                           
  2806                           ;../src/i2c_master_functions.c: 18:     I2C_SetDataCompleteCallback(rd1RegCompleteHandle
      +                          r,&returnValue);
  2807  01CF  30A8               	movlw	low _rd1RegCompleteHandler
  2808  01D0  00F7               	movwf	I2C_SetDataCompleteCallback@cb
  2809  01D1  3003               	movlw	high _rd1RegCompleteHandler
  2810  01D2  00F8               	movwf	I2C_SetDataCompleteCallback@cb+1
  2811  01D3  3046               	movlw	(low (I2C_Read1ByteRegister@returnValue| 0))& (0+255)
  2812  01D4  0020               	movlb	0	; select bank0
  2813  01D5  00C4               	movwf	??_I2C_Read1ByteRegister
  2814  01D6  0844               	movf	??_I2C_Read1ByteRegister,w
  2815  01D7  00F9               	movwf	I2C_SetDataCompleteCallback@ptr
  2816  01D8  3184  240B  3181   	fcall	_I2C_SetDataCompleteCallback
  2817  01DB                     l2620:
  2818                           
  2819                           ;../src/i2c_master_functions.c: 19:     I2C_SetBuffer(&reg,1);
  2820  01DB  3001               	movlw	1
  2821  01DC  00F2               	movwf	I2C_SetBuffer@bufferSize
  2822  01DD  3000               	movlw	0
  2823  01DE  00F3               	movwf	I2C_SetBuffer@bufferSize+1
  2824  01DF  3043               	movlw	(low (I2C_Read1ByteRegister@reg| 0))& (0+255)
  2825  01E0  3183  23ED  3181   	fcall	_I2C_SetBuffer
  2826  01E3                     l2622:
  2827                           
  2828                           ;../src/i2c_master_functions.c: 20:     I2C_SetAddressNackCallback(((void*)0),((void*)0)
      +                          );
  2829  01E3  3000               	movlw	0
  2830  01E4  00F7               	movwf	I2C_SetAddressNackCallback@cb
  2831  01E5  00F8               	movwf	I2C_SetAddressNackCallback@cb+1
  2832  01E6  01F9               	clrf	I2C_SetAddressNackCallback@ptr
  2833  01E7  3183  23FD  3181   	fcall	_I2C_SetAddressNackCallback
  2834  01EA                     l2624:
  2835                           
  2836                           ;../src/i2c_master_functions.c: 21:     I2C_MasterWrite();
  2837  01EA  3184  2475  3181   	fcall	_I2C_MasterWrite
  2838  01ED                     l2626:	
  2839                           ;../src/i2c_master_functions.c: 22:     while(I2C_BUSY == I2C_Close());
  2840                           
  2841  01ED  3183  2333  3181   	fcall	_I2C_Close
  2842  01F0  3A01               	xorlw	1
  2843  01F1  1903               	skipnz
  2844  01F2  29F4               	goto	u771
  2845  01F3  29F5               	goto	u770
  2846  01F4                     u771:
  2847  01F4  29ED               	goto	l2626
  2848  01F5                     u770:
  2849  01F5                     l2628:
  2850                           
  2851                           ;../src/i2c_master_functions.c: 24:     return returnValue;
  2852  01F5  0020               	movlb	0	; select bank0
  2853  01F6  0846               	movf	I2C_Read1ByteRegister@returnValue,w
  2854  01F7                     l318:
  2855  01F7  0008               	return
  2856  01F8                     __end_of_I2C_Read1ByteRegister:
  2857                           
  2858                           	psect	text12
  2859  03FD                     __ptext12:	
  2860 ;; *************** function _I2C_SetAddressNackCallback *****************
  2861 ;; Defined at:
  2862 ;;		line 218 in file "../src/i2c_master.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;  cb              2    7[COMMON] PTR FTN(PTR void ,)enum 
  2865 ;;		 -> Absolute function(1), 
  2866 ;;  ptr             1    9[COMMON] PTR void 
  2867 ;;		 -> NULL(0), 
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;		None
  2870 ;; Return value:  Size  Location     Type
  2871 ;;                  1    wreg      void 
  2872 ;; Registers used:
  2873 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2879 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2881 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2882 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2883 ;;Total ram usage:        4 bytes
  2884 ;; Hardware stack levels used:    1
  2885 ;; Hardware stack levels required when called:    4
  2886 ;; This function calls:
  2887 ;;		_I2C_SetCallback
  2888 ;; This function is called by:
  2889 ;;		_I2C_Read1ByteRegister
  2890 ;;		_I2C_Write1ByteRegister
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           
  2895                           ;psect for function _I2C_SetAddressNackCallback
  2896  03FD                     _I2C_SetAddressNackCallback:
  2897  03FD                     l2612:	
  2898                           ;incstack = 0
  2899                           ; Regs used in _I2C_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  2900                           
  2901                           
  2902                           ;../src/i2c_master.c: 218: void I2C_SetAddressNackCallback(i2c_callback_t cb, void *ptr)
      +                          ;../src/i2c_master.c: 219: {;../src/i2c_master.c: 220:     I2C_SetCallback(I2C_ADDR_NACK
      +                          , cb, ptr);
  2903  03FD  0878               	movf	I2C_SetAddressNackCallback@cb+1,w
  2904  03FE  00F3               	movwf	I2C_SetCallback@cb+1
  2905  03FF  0877               	movf	I2C_SetAddressNackCallback@cb,w
  2906  0400  00F2               	movwf	I2C_SetCallback@cb
  2907  0401  0879               	movf	I2C_SetAddressNackCallback@ptr,w
  2908  0402  0020               	movlb	0	; select bank0
  2909  0403  00C1               	movwf	??_I2C_SetAddressNackCallback
  2910  0404  0841               	movf	??_I2C_SetAddressNackCallback,w
  2911  0405  00F4               	movwf	I2C_SetCallback@ptr
  2912  0406  3002               	movlw	2
  2913  0407  3182  22B1  3183   	fcall	_I2C_SetCallback
  2914  040A                     l132:
  2915  040A  0008               	return
  2916  040B                     __end_of_I2C_SetAddressNackCallback:
  2917                           
  2918                           	psect	text13
  2919  0188                     __ptext13:	
  2920 ;; *************** function _I2C_Open *****************
  2921 ;; Defined at:
  2922 ;;		line 126 in file "../src/i2c_master.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;  address         1    wreg     unsigned char 
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;  address         1    3[COMMON] unsigned char 
  2927 ;;  returnValue     1    4[COMMON] enum E353
  2928 ;; Return value:  Size  Location     Type
  2929 ;;                  1    wreg      enum E353
  2930 ;; Registers used:
  2931 ;;		wreg, status,2, status,0, pclath, cstack
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2938 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2939 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2940 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2941 ;;Total ram usage:        3 bytes
  2942 ;; Hardware stack levels used:    1
  2943 ;; Hardware stack levels required when called:    4
  2944 ;; This function calls:
  2945 ;;		_I2C_MasterClearIrq
  2946 ;;		_I2C_MasterOpen
  2947 ;; This function is called by:
  2948 ;;		_I2C_Read1ByteRegister
  2949 ;;		_I2C_Write1ByteRegister
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           
  2954                           ;psect for function _I2C_Open
  2955  0188                     _I2C_Open:
  2956                           
  2957                           ;incstack = 0
  2958                           ; Regs used in _I2C_Open: [wreg+status,2+status,0+pclath+cstack]
  2959                           ;I2C_Open@address stored from wreg
  2960  0188  00F3               	movwf	I2C_Open@address
  2961  0189                     l2558:
  2962                           
  2963                           ;../src/i2c_master.c: 126: i2c_error_t I2C_Open(i2c_address_t address);../src/i2c_master
      +                          .c: 127: {;../src/i2c_master.c: 128:     i2c_error_t returnValue = I2C_BUSY;
  2964  0189  01F4               	clrf	I2C_Open@returnValue
  2965  018A  0AF4               	incf	I2C_Open@returnValue,f
  2966                           
  2967                           ;../src/i2c_master.c: 130:     if(!I2C_Status.inUse)
  2968  018B  0020               	movlb	0	; select bank0
  2969  018C  193C               	btfsc	_I2C_Status+28,2
  2970  018D  298F               	goto	u741
  2971  018E  2990               	goto	u740
  2972  018F                     u741:
  2973  018F  29C0               	goto	l108
  2974  0190                     u740:
  2975  0190                     l2560:
  2976                           
  2977                           ;../src/i2c_master.c: 131:     {;../src/i2c_master.c: 132:         I2C_Status.address = 
      +                          address;
  2978  0190  0873               	movf	I2C_Open@address,w
  2979  0191  00F2               	movwf	??_I2C_Open
  2980  0192  0872               	movf	??_I2C_Open,w
  2981  0193  00B6               	movwf	_I2C_Status+22
  2982  0194                     l2562:
  2983                           
  2984                           ;../src/i2c_master.c: 133:         I2C_Status.busy = 0;
  2985  0194  10BC               	bcf	_I2C_Status+28,1
  2986  0195                     l2564:
  2987                           
  2988                           ;../src/i2c_master.c: 134:         I2C_Status.inUse = 1;
  2989  0195  153C               	bsf	_I2C_Status+28,2
  2990  0196                     l2566:
  2991                           
  2992                           ;../src/i2c_master.c: 135:         I2C_Status.addressNackCheck = 0;
  2993  0196  103C               	bcf	_I2C_Status+28,0
  2994                           
  2995                           ;../src/i2c_master.c: 136:         I2C_Status.state = I2C_RESET;
  2996  0197  300E               	movlw	14
  2997  0198  00F2               	movwf	??_I2C_Open
  2998  0199  0872               	movf	??_I2C_Open,w
  2999  019A  00BA               	movwf	_I2C_Status+26
  3000                           
  3001                           ;../src/i2c_master.c: 137:         I2C_Status.time_out_value = 500;
  3002  019B  30F4               	movlw	244
  3003  019C  00B4               	movwf	_I2C_Status+20
  3004  019D  3001               	movlw	1
  3005  019E  00B5               	movwf	_I2C_Status+21
  3006  019F                     l2568:
  3007                           
  3008                           ;../src/i2c_master.c: 138:         I2C_Status.bufferFree = 1;
  3009  019F  15BC               	bsf	_I2C_Status+28,3
  3010                           
  3011                           ;../src/i2c_master.c: 141:         I2C_Status.callbackTable[I2C_DATA_COMPLETE]=I2C_Callb
      +                          ackReturnStop;
  3012  01A0  30DB               	movlw	low _I2C_CallbackReturnStop
  3013  01A1  00A0               	movwf	_I2C_Status
  3014  01A2  3004               	movlw	high _I2C_CallbackReturnStop
  3015  01A3  00A1               	movwf	_I2C_Status+1
  3016  01A4                     l2570:
  3017                           
  3018                           ;../src/i2c_master.c: 142:         I2C_Status.callbackPayload[I2C_DATA_COMPLETE] = ((voi
      +                          d*)0);
  3019  01A4  01AC               	clrf	low ((_I2C_Status| 0+12))
  3020  01A5                     l2572:
  3021                           
  3022                           ;../src/i2c_master.c: 143:         I2C_Status.callbackTable[I2C_WRITE_COLLISION]=I2C_Cal
      +                          lbackReturnStop;
  3023  01A5  30DB               	movlw	low _I2C_CallbackReturnStop
  3024  01A6  00A2               	movwf	low ((_I2C_Status| 0+2))
  3025  01A7  3004               	movlw	high _I2C_CallbackReturnStop
  3026  01A8  00A3               	movwf	(low ((_I2C_Status| 0+2))+1)
  3027                           
  3028                           ;../src/i2c_master.c: 144:         I2C_Status.callbackPayload[I2C_WRITE_COLLISION] = ((v
      +                          oid*)0);
  3029  01A9  01AD               	clrf	low ((_I2C_Status| 0+13))
  3030  01AA                     l2574:
  3031                           
  3032                           ;../src/i2c_master.c: 145:         I2C_Status.callbackTable[I2C_ADDR_NACK]=I2C_CallbackR
      +                          eturnStop;
  3033  01AA  30DB               	movlw	low _I2C_CallbackReturnStop
  3034  01AB  00A4               	movwf	low ((_I2C_Status| 0+4))
  3035  01AC  3004               	movlw	high _I2C_CallbackReturnStop
  3036  01AD  00A5               	movwf	(low ((_I2C_Status| 0+4))+1)
  3037  01AE                     l2576:
  3038                           
  3039                           ;../src/i2c_master.c: 146:         I2C_Status.callbackPayload[I2C_ADDR_NACK] = ((void*)0
      +                          );
  3040  01AE  01AE               	clrf	low ((_I2C_Status| 0+14))
  3041                           
  3042                           ;../src/i2c_master.c: 147:         I2C_Status.callbackTable[I2C_DATA_NACK]=I2C_CallbackR
      +                          eturnStop;
  3043  01AF  30DB               	movlw	low _I2C_CallbackReturnStop
  3044  01B0  00A6               	movwf	low ((_I2C_Status| 0+6))
  3045  01B1  3004               	movlw	high _I2C_CallbackReturnStop
  3046  01B2  00A7               	movwf	(low ((_I2C_Status| 0+6))+1)
  3047  01B3                     l2578:
  3048                           
  3049                           ;../src/i2c_master.c: 148:         I2C_Status.callbackPayload[I2C_DATA_NACK] = ((void*)0
      +                          );
  3050  01B3  01AF               	clrf	low ((_I2C_Status| 0+15))
  3051  01B4                     l2580:
  3052                           
  3053                           ;../src/i2c_master.c: 149:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2C_CallbackRet
      +                          urnReset;
  3054  01B4  30D9               	movlw	low _I2C_CallbackReturnReset
  3055  01B5  00A8               	movwf	low ((_I2C_Status| 0+8))
  3056  01B6  3004               	movlw	high _I2C_CallbackReturnReset
  3057  01B7  00A9               	movwf	(low ((_I2C_Status| 0+8))+1)
  3058                           
  3059                           ;../src/i2c_master.c: 150:         I2C_Status.callbackPayload[I2C_TIMEOUT] = ((void*)0);
  3060  01B8  01B0               	clrf	low ((_I2C_Status| 0+16))
  3061  01B9                     l2582:
  3062                           
  3063                           ;../src/i2c_master.c: 152:         I2C_MasterClearIrq();
  3064  01B9  3184  24D3  3181   	fcall	_I2C_MasterClearIrq
  3065  01BC                     l2584:
  3066                           
  3067                           ;../src/i2c_master.c: 153:         I2C_MasterOpen();
  3068  01BC  3184  2419  3181   	fcall	_I2C_MasterOpen
  3069  01BF                     l2586:
  3070                           
  3071                           ;../src/i2c_master.c: 154:         returnValue = I2C_NOERR;
  3072  01BF  01F4               	clrf	I2C_Open@returnValue
  3073  01C0                     l108:	
  3074                           ;../src/i2c_master.c: 155:     }
  3075                           
  3076                           
  3077                           ;../src/i2c_master.c: 156:     return returnValue;
  3078  01C0  0874               	movf	I2C_Open@returnValue,w
  3079  01C1                     l109:
  3080  01C1  0008               	return
  3081  01C2                     __end_of_I2C_Open:
  3082                           
  3083                           	psect	text14
  3084  0419                     __ptext14:	
  3085 ;; *************** function _I2C_MasterOpen *****************
  3086 ;; Defined at:
  3087 ;;		line 427 in file "../src/i2c_master.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;		None
  3090 ;; Auto vars:     Size  Location     Type
  3091 ;;		None
  3092 ;; Return value:  Size  Location     Type
  3093 ;;                  1    wreg      _Bool 
  3094 ;; Registers used:
  3095 ;;		wreg, status,2
  3096 ;; Tracked objects:
  3097 ;;		On entry : 0/0
  3098 ;;		On exit  : 0/0
  3099 ;;		Unchanged: 0/0
  3100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3105 ;;Total ram usage:        0 bytes
  3106 ;; Hardware stack levels used:    1
  3107 ;; Hardware stack levels required when called:    3
  3108 ;; This function calls:
  3109 ;;		Nothing
  3110 ;; This function is called by:
  3111 ;;		_I2C_Open
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114                           
  3115                           
  3116                           ;psect for function _I2C_MasterOpen
  3117  0419                     _I2C_MasterOpen:
  3118  0419                     l1958:	
  3119                           ;incstack = 0
  3120                           ; Regs used in _I2C_MasterOpen: [wreg+status,2]
  3121                           
  3122                           
  3123                           ;../src/i2c_master.c: 429:     if(!SSP1CON1bits.SSPEN)
  3124  0419  0024               	movlb	4	; select bank4
  3125  041A  1A95               	btfsc	21,5	;volatile
  3126  041B  2C1D               	goto	u411
  3127  041C  2C1E               	goto	u410
  3128  041D                     u411:
  3129  041D  2C25               	goto	l239
  3130  041E                     u410:
  3131  041E                     l1960:
  3132                           
  3133                           ;../src/i2c_master.c: 430:     {;../src/i2c_master.c: 431:         SSP1STAT = 0x00;
  3134  041E  0194               	clrf	20	;volatile
  3135  041F                     l1962:
  3136                           
  3137                           ;../src/i2c_master.c: 432:         SSP1CON1 = 0x08;
  3138  041F  3008               	movlw	8
  3139  0420  0095               	movwf	21	;volatile
  3140  0421                     l1964:
  3141                           
  3142                           ;../src/i2c_master.c: 433:         SSP1CON2 = 0x00;
  3143  0421  0196               	clrf	22	;volatile
  3144                           
  3145                           ;../src/i2c_master.c: 434:         SSP1ADD = 0x04;
  3146  0422  3004               	movlw	4
  3147  0423  0092               	movwf	18	;volatile
  3148  0424                     l1966:
  3149                           
  3150                           ;../src/i2c_master.c: 435:         SSP1CON1bits.SSPEN = 1;
  3151  0424  1695               	bsf	21,5	;volatile
  3152  0425                     l239:
  3153  0425  0008               	return
  3154  0426                     __end_of_I2C_MasterOpen:
  3155                           
  3156                           	psect	text15
  3157  0475                     __ptext15:	
  3158 ;; *************** function _I2C_MasterWrite *****************
  3159 ;; Defined at:
  3160 ;;		line 198 in file "../src/i2c_master.c"
  3161 ;; Parameters:    Size  Location     Type
  3162 ;;		None
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;		None
  3165 ;; Return value:  Size  Location     Type
  3166 ;;                  1    wreg      enum E353
  3167 ;; Registers used:
  3168 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3169 ;; Tracked objects:
  3170 ;;		On entry : 0/0
  3171 ;;		On exit  : 0/0
  3172 ;;		Unchanged: 0/0
  3173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3178 ;;Total ram usage:        0 bytes
  3179 ;; Hardware stack levels used:    1
  3180 ;; Hardware stack levels required when called:   10
  3181 ;; This function calls:
  3182 ;;		_I2C_MasterOperation
  3183 ;; This function is called by:
  3184 ;;		_I2C_Read1ByteRegister
  3185 ;;		_I2C_Write1ByteRegister
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           
  3189                           
  3190                           ;psect for function _I2C_MasterWrite
  3191  0475                     _I2C_MasterWrite:
  3192  0475                     l2608:	
  3193                           ;incstack = 0
  3194                           ; Regs used in _I2C_MasterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3195                           
  3196                           
  3197                           ;../src/i2c_master.c: 200:     return I2C_MasterOperation(0);;	Return value of _I2C_Mast
      +                          erWrite is never used
  3198  0475  3000               	movlw	0
  3199  0476  3182  22F7  3184   	fcall	_I2C_MasterOperation
  3200  0479                     l122:
  3201  0479  0008               	return
  3202  047A                     __end_of_I2C_MasterWrite:
  3203                           
  3204                           	psect	text16
  3205  02F7                     __ptext16:	
  3206 ;; *************** function _I2C_MasterOperation *****************
  3207 ;; Defined at:
  3208 ;;		line 174 in file "../src/i2c_master.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;  read            1    wreg     _Bool 
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;  read            1    0[BANK0 ] _Bool 
  3213 ;;  returnValue     1    1[BANK0 ] enum E353
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  1    wreg      enum E353
  3216 ;; Registers used:
  3217 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/0
  3220 ;;		On exit  : 0/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3224 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3225 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3226 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3227 ;;Total ram usage:        3 bytes
  3228 ;; Hardware stack levels used:    1
  3229 ;; Hardware stack levels required when called:    9
  3230 ;; This function calls:
  3231 ;;		_I2C_MasterStart
  3232 ;;		_I2C_Poller
  3233 ;; This function is called by:
  3234 ;;		_I2C_MasterWrite
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238                           
  3239                           ;psect for function _I2C_MasterOperation
  3240  02F7                     _I2C_MasterOperation:
  3241                           
  3242                           ;incstack = 0
  3243                           ; Regs used in _I2C_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3244                           ;I2C_MasterOperation@read stored from wreg
  3245  02F7  0020               	movlb	0	; select bank0
  3246  02F8  00C1               	movwf	I2C_MasterOperation@read
  3247  02F9                     l2538:
  3248                           
  3249                           ;../src/i2c_master.c: 174: i2c_error_t I2C_MasterOperation(_Bool read);../src/i2c_master
      +                          .c: 175: {;../src/i2c_master.c: 176:     i2c_error_t returnValue = I2C_BUSY;
  3250  02F9  01C2               	clrf	I2C_MasterOperation@returnValue
  3251  02FA  0AC2               	incf	I2C_MasterOperation@returnValue,f
  3252                           
  3253                           ;../src/i2c_master.c: 177:     if(!I2C_Status.busy)
  3254  02FB  18BC               	btfsc	_I2C_Status+28,1
  3255  02FC  2AFE               	goto	u721
  3256  02FD  2AFF               	goto	u720
  3257  02FE                     u721:
  3258  02FE  2B13               	goto	l2554
  3259  02FF                     u720:
  3260  02FF                     l2540:
  3261                           
  3262                           ;../src/i2c_master.c: 178:     {;../src/i2c_master.c: 179:         I2C_Status.busy = 1;
  3263  02FF  14BC               	bsf	_I2C_Status+28,1
  3264  0300                     l2542:
  3265                           
  3266                           ;../src/i2c_master.c: 180:         returnValue = I2C_NOERR;
  3267  0300  01C2               	clrf	I2C_MasterOperation@returnValue
  3268  0301                     l2544:
  3269                           
  3270                           ;../src/i2c_master.c: 182:         if(read)
  3271  0301  0841               	movf	I2C_MasterOperation@read,w
  3272  0302  1903               	btfsc	3,2
  3273  0303  2B05               	goto	u731
  3274  0304  2B06               	goto	u730
  3275  0305                     u731:
  3276  0305  2B09               	goto	l2548
  3277  0306                     u730:
  3278  0306                     l2546:
  3279                           
  3280                           ;../src/i2c_master.c: 183:         {;../src/i2c_master.c: 184:             I2C_Status.st
      +                          ate = I2C_SEND_ADR_READ;
  3281  0306  01BA               	clrf	_I2C_Status+26
  3282  0307  0ABA               	incf	_I2C_Status+26,f
  3283                           
  3284                           ;../src/i2c_master.c: 185:         }
  3285  0308  2B0D               	goto	l2550
  3286  0309                     l2548:
  3287                           
  3288                           ;../src/i2c_master.c: 187:         {;../src/i2c_master.c: 188:             I2C_Status.st
      +                          ate = I2C_SEND_ADR_WRITE;
  3289  0309  3002               	movlw	2
  3290  030A  00F9               	movwf	??_I2C_MasterOperation
  3291  030B  0879               	movf	??_I2C_MasterOperation,w
  3292  030C  00BA               	movwf	_I2C_Status+26
  3293  030D                     l2550:
  3294                           
  3295                           ;../src/i2c_master.c: 190:         I2C_MasterStart();
  3296  030D  3184  24CA  3182   	fcall	_I2C_MasterStart
  3297  0310                     l2552:
  3298                           
  3299                           ;../src/i2c_master.c: 191:         I2C_Poller();
  3300  0310  3184  2426  3182   	fcall	_I2C_Poller
  3301  0313                     l2554:
  3302                           
  3303                           ;../src/i2c_master.c: 193:     return returnValue;
  3304  0313  0020               	movlb	0	; select bank0
  3305  0314  0842               	movf	I2C_MasterOperation@returnValue,w
  3306  0315                     l119:
  3307  0315  0008               	return
  3308  0316                     __end_of_I2C_MasterOperation:
  3309                           
  3310                           	psect	text17
  3311  0426                     __ptext17:	
  3312 ;; *************** function _I2C_Poller *****************
  3313 ;; Defined at:
  3314 ;;		line 237 in file "../src/i2c_master.c"
  3315 ;; Parameters:    Size  Location     Type
  3316 ;;		None
  3317 ;; Auto vars:     Size  Location     Type
  3318 ;;		None
  3319 ;; Return value:  Size  Location     Type
  3320 ;;                  1    wreg      void 
  3321 ;; Registers used:
  3322 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3323 ;; Tracked objects:
  3324 ;;		On entry : 0/0
  3325 ;;		On exit  : 0/0
  3326 ;;		Unchanged: 0/0
  3327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3332 ;;Total ram usage:        0 bytes
  3333 ;; Hardware stack levels used:    1
  3334 ;; Hardware stack levels required when called:    8
  3335 ;; This function calls:
  3336 ;;		_I2C_MasterFsm
  3337 ;;		_I2C_MasterWaitForEvent
  3338 ;; This function is called by:
  3339 ;;		_I2C_MasterOperation
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           
  3344                           ;psect for function _I2C_Poller
  3345  0426                     _I2C_Poller:
  3346  0426                     l2530:	
  3347                           ;incstack = 0
  3348                           ; Regs used in _I2C_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3349                           
  3350                           
  3351                           ;../src/i2c_master.c: 239:     while(I2C_Status.busy)
  3352  0426  2C2D               	goto	l2536
  3353  0427                     l2532:
  3354                           
  3355                           ;../src/i2c_master.c: 240:     {;../src/i2c_master.c: 241:         I2C_MasterWaitForEven
      +                          t();
  3356  0427  3184  2469  3184   	fcall	_I2C_MasterWaitForEvent
  3357  042A                     l2534:
  3358                           
  3359                           ;../src/i2c_master.c: 242:         I2C_MasterFsm();
  3360  042A  3182  2286  3184   	fcall	_I2C_MasterFsm
  3361  042D                     l2536:
  3362                           
  3363                           ;../src/i2c_master.c: 239:     while(I2C_Status.busy)
  3364  042D  0020               	movlb	0	; select bank0
  3365  042E  18BC               	btfsc	_I2C_Status+28,1
  3366  042F  2C31               	goto	u711
  3367  0430  2C32               	goto	u710
  3368  0431                     u711:
  3369  0431  2C27               	goto	l2532
  3370  0432                     u710:
  3371  0432                     l143:
  3372  0432  0008               	return
  3373  0433                     __end_of_I2C_Poller:
  3374                           
  3375                           	psect	text18
  3376  0469                     __ptext18:	
  3377 ;; *************** function _I2C_MasterWaitForEvent *****************
  3378 ;; Defined at:
  3379 ;;		line 509 in file "../src/i2c_master.c"
  3380 ;; Parameters:    Size  Location     Type
  3381 ;;		None
  3382 ;; Auto vars:     Size  Location     Type
  3383 ;;		None
  3384 ;; Return value:  Size  Location     Type
  3385 ;;                  1    wreg      void 
  3386 ;; Registers used:
  3387 ;;		None
  3388 ;; Tracked objects:
  3389 ;;		On entry : 0/0
  3390 ;;		On exit  : 0/0
  3391 ;;		Unchanged: 0/0
  3392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3397 ;;Total ram usage:        0 bytes
  3398 ;; Hardware stack levels used:    1
  3399 ;; Hardware stack levels required when called:    3
  3400 ;; This function calls:
  3401 ;;		Nothing
  3402 ;; This function is called by:
  3403 ;;		_I2C_Poller
  3404 ;; This function uses a non-reentrant model
  3405 ;;
  3406                           
  3407                           
  3408                           ;psect for function _I2C_MasterWaitForEvent
  3409  0469                     _I2C_MasterWaitForEvent:
  3410  0469                     l281:	
  3411                           ;incstack = 0
  3412                           ; Regs used in _I2C_MasterWaitForEvent: []
  3413                           ;../src/i2c_master.c: 511:     while(1)
  3414                           
  3415                           
  3416                           ;../src/i2c_master.c: 512:     {;../src/i2c_master.c: 513:         if(PIR1bits.SSP1IF)
  3417  0469  0020               	movlb	0	; select bank0
  3418  046A  1D91               	btfss	17,3	;volatile
  3419  046B  2C6D               	goto	u681
  3420  046C  2C6E               	goto	u680
  3421  046D                     u681:
  3422  046D  2C69               	goto	l281
  3423  046E                     u680:
  3424  046E                     l285:
  3425  046E  0008               	return
  3426  046F                     __end_of_I2C_MasterWaitForEvent:
  3427                           
  3428                           	psect	text19
  3429  0286                     __ptext19:	
  3430 ;; *************** function _I2C_MasterFsm *****************
  3431 ;; Defined at:
  3432 ;;		line 246 in file "../src/i2c_master.c"
  3433 ;; Parameters:    Size  Location     Type
  3434 ;;		None
  3435 ;; Auto vars:     Size  Location     Type
  3436 ;;		None
  3437 ;; Return value:  Size  Location     Type
  3438 ;;                  1    wreg      void 
  3439 ;; Registers used:
  3440 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3441 ;; Tracked objects:
  3442 ;;		On entry : 0/0
  3443 ;;		On exit  : 0/0
  3444 ;;		Unchanged: 0/0
  3445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3448 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3449 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3450 ;;Total ram usage:        3 bytes
  3451 ;; Hardware stack levels used:    1
  3452 ;; Hardware stack levels required when called:    7
  3453 ;; This function calls:
  3454 ;;		_I2C_DO_ADDRESS_NACK
  3455 ;;		_I2C_DO_IDLE
  3456 ;;		_I2C_DO_RCEN
  3457 ;;		_I2C_DO_RESET
  3458 ;;		_I2C_DO_RX
  3459 ;;		_I2C_DO_RX_ACK
  3460 ;;		_I2C_DO_RX_NACK_RESTART
  3461 ;;		_I2C_DO_RX_NACK_STOP
  3462 ;;		_I2C_DO_SEND_ADR_READ
  3463 ;;		_I2C_DO_SEND_ADR_WRITE
  3464 ;;		_I2C_DO_SEND_RESTART
  3465 ;;		_I2C_DO_SEND_RESTART_READ
  3466 ;;		_I2C_DO_SEND_RESTART_WRITE
  3467 ;;		_I2C_DO_SEND_STOP
  3468 ;;		_I2C_DO_TX
  3469 ;;		_I2C_DO_TX_EMPTY
  3470 ;;		_I2C_MasterClearIrq
  3471 ;;		_I2C_MasterIsNack
  3472 ;; This function is called by:
  3473 ;;		_I2C_Poller
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476                           
  3477                           
  3478                           ;psect for function _I2C_MasterFsm
  3479  0286                     _I2C_MasterFsm:
  3480  0286                     l2518:	
  3481                           ;incstack = 0
  3482                           ; Regs used in _I2C_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3483                           
  3484                           
  3485                           ;../src/i2c_master.c: 248:     I2C_MasterClearIrq();
  3486  0286  3184  24D3  3182   	fcall	_I2C_MasterClearIrq
  3487  0289                     l2520:
  3488                           
  3489                           ;../src/i2c_master.c: 250:     if(I2C_Status.addressNackCheck && I2C_MasterIsNack())
  3490  0289  0020               	movlb	0	; select bank0
  3491  028A  1C3C               	btfss	_I2C_Status+28,0
  3492  028B  2A8D               	goto	u691
  3493  028C  2A8E               	goto	u690
  3494  028D                     u691:
  3495  028D  2A9B               	goto	l2526
  3496  028E                     u690:
  3497  028E                     l2522:
  3498  028E  3184  246F  3182   	fcall	_I2C_MasterIsNack
  3499  0291  3A00               	xorlw	0
  3500  0292  1903               	skipnz
  3501  0293  2A95               	goto	u701
  3502  0294  2A96               	goto	u700
  3503  0295                     u701:
  3504  0295  2A9B               	goto	l2526
  3505  0296                     u700:
  3506  0296                     l2524:
  3507                           
  3508                           ;../src/i2c_master.c: 251:     {;../src/i2c_master.c: 252:         I2C_Status.state = I2
      +                          C_ADDRESS_NACK;
  3509  0296  300F               	movlw	15
  3510  0297  00F6               	movwf	??_I2C_MasterFsm
  3511  0298  0876               	movf	??_I2C_MasterFsm,w
  3512  0299  0020               	movlb	0	; select bank0
  3513  029A  00BA               	movwf	_I2C_Status+26
  3514  029B                     l2526:
  3515                           
  3516                           ;../src/i2c_master.c: 254:     I2C_Status.state = i2c_fsmStateTable[I2C_Status.state]();
  3517  029B  0020               	movlb	0	; select bank0
  3518  029C  083A               	movf	_I2C_Status+26,w
  3519  029D  00F6               	movwf	??_I2C_MasterFsm
  3520  029E  01F7               	clrf	??_I2C_MasterFsm+1
  3521  029F  35F6               	lslf	??_I2C_MasterFsm,f
  3522  02A0  0DF7               	rlf	??_I2C_MasterFsm+1,f
  3523  02A1  30D7               	movlw	low (_i2c_fsmStateTable| (0+32768))
  3524  02A2  0776               	addwf	??_I2C_MasterFsm,w
  3525  02A3  0084               	movwf	4
  3526  02A4  3082               	movlw	high (_i2c_fsmStateTable| (0+32768))
  3527  02A5  3D77               	addwfc	??_I2C_MasterFsm+1,w
  3528  02A6  0085               	movwf	5
  3529  02A7  3F01               	moviw [1]fsr0
  3530  02A8  008A               	movwf	10
  3531  02A9  3F00               	moviw [0]fsr0
  3532  02AA  000A               	callw
  3533  02AB  3182               	pagesel	$
  3534  02AC  00F8               	movwf	??_I2C_MasterFsm+2
  3535  02AD  0878               	movf	??_I2C_MasterFsm+2,w
  3536  02AE  0020               	movlb	0	; select bank0
  3537  02AF  00BA               	movwf	_I2C_Status+26
  3538  02B0                     l147:
  3539  02B0  0008               	return
  3540  02B1                     __end_of_I2C_MasterFsm:
  3541                           
  3542                           	psect	text20
  3543  025A                     __ptext20:	
  3544 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  3545 ;; Defined at:
  3546 ;;		line 401 in file "../src/i2c_master.c"
  3547 ;; Parameters:    Size  Location     Type
  3548 ;;		None
  3549 ;; Auto vars:     Size  Location     Type
  3550 ;;		None
  3551 ;; Return value:  Size  Location     Type
  3552 ;;                  1    wreg      enum E2558
  3553 ;; Registers used:
  3554 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3555 ;; Tracked objects:
  3556 ;;		On entry : 0/0
  3557 ;;		On exit  : 0/0
  3558 ;;		Unchanged: 0/0
  3559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3562 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3563 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3564 ;;Total ram usage:        3 bytes
  3565 ;; Hardware stack levels used:    1
  3566 ;; Hardware stack levels required when called:    6
  3567 ;; This function calls:
  3568 ;;		Absolute function
  3569 ;;		_I2C_CallbackReturnReset
  3570 ;;		_I2C_CallbackReturnStop
  3571 ;;		_I2C_DO_SEND_RESTART
  3572 ;;		_I2C_DO_SEND_STOP
  3573 ;;		_rd1RegCompleteHandler
  3574 ;;		_wr1RegCompleteHandler
  3575 ;; This function is called by:
  3576 ;;		_I2C_MasterFsm
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           
  3581                           ;psect for function _I2C_DO_ADDRESS_NACK
  3582  025A                     _I2C_DO_ADDRESS_NACK:
  3583  025A                     l2496:	
  3584                           ;incstack = 0
  3585                           ; Regs used in _I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3586                           
  3587                           
  3588                           ;../src/i2c_master.c: 403:     I2C_Status.addressNackCheck = 0;
  3589  025A  0020               	movlb	0	; select bank0
  3590  025B  103C               	bcf	_I2C_Status+28,0
  3591  025C                     l2498:
  3592                           
  3593                           ;../src/i2c_master.c: 404:     I2C_Status.error = I2C_FAIL;
  3594  025C  3002               	movlw	2
  3595  025D  00F2               	movwf	??_I2C_DO_ADDRESS_NACK
  3596  025E  0872               	movf	??_I2C_DO_ADDRESS_NACK,w
  3597  025F  00BB               	movwf	_I2C_Status+27
  3598                           
  3599                           ;../src/i2c_master.c: 405:     switch(I2C_Status.callbackTable[I2C_ADDR_NACK](I2C_Status
      +                          .callbackPayload[I2C_ADDR_NACK]))
  3600  0260  2A69               	goto	l2510
  3601  0261                     l2500:
  3602                           
  3603                           ;../src/i2c_master.c: 409:             return I2C_DO_SEND_RESTART();
  3604  0261  3184  2493  3182   	fcall	_I2C_DO_SEND_RESTART
  3605  0264  2A85               	goto	l227
  3606  0265                     l2504:
  3607                           
  3608                           ;../src/i2c_master.c: 411:             return I2C_DO_SEND_STOP();
  3609  0265  3184  248E  3182   	fcall	_I2C_DO_SEND_STOP
  3610  0268  2A85               	goto	l227
  3611  0269                     l2510:
  3612  0269  082E               	movf	low ((_I2C_Status| 0+14)),w
  3613  026A  00F2               	movwf	??_I2C_DO_ADDRESS_NACK
  3614  026B  0872               	movf	??_I2C_DO_ADDRESS_NACK,w
  3615  026C  00C2               	movwf	wr1RegCompleteHandler@ptr
  3616  026D  3004               	movlw	4
  3617  026E  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  3618  026F  0086               	movwf	6
  3619  0270  0187               	clrf	7
  3620  0271  3F41               	moviw [1]fsr1
  3621  0272  008A               	movwf	10
  3622  0273  3F40               	moviw [0]fsr1
  3623  0274  000A               	callw
  3624  0275  3182               	pagesel	$
  3625  0276  00F3               	movwf	??_I2C_DO_ADDRESS_NACK+1
  3626  0277  01F4               	clrf	??_I2C_DO_ADDRESS_NACK+2
  3627                           
  3628                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3629                           ; Switch size 1, requested type "simple"
  3630                           ; Number of cases is 1, Range of values is 0 to 0
  3631                           ; switch strategies available:
  3632                           ; Name         Instructions Cycles
  3633                           ; simple_byte            4     3 (average)
  3634                           ; direct_byte            8     6 (fixed)
  3635                           ; jumptable            260     6 (fixed)
  3636                           ;	Chosen strategy is simple_byte
  3637  0278  0874               	movf	??_I2C_DO_ADDRESS_NACK+2,w
  3638  0279  3A00               	xorlw	0	; case 0
  3639  027A  1903               	skipnz
  3640  027B  2A7D               	goto	l2776
  3641  027C  2A65               	goto	l2504
  3642  027D                     l2776:
  3643                           
  3644                           ; Switch size 1, requested type "simple"
  3645                           ; Number of cases is 2, Range of values is 2 to 3
  3646                           ; switch strategies available:
  3647                           ; Name         Instructions Cycles
  3648                           ; simple_byte            7     4 (average)
  3649                           ; direct_byte           13     9 (fixed)
  3650                           ; jumptable            263     9 (fixed)
  3651                           ;	Chosen strategy is simple_byte
  3652  027D  0873               	movf	??_I2C_DO_ADDRESS_NACK+1,w
  3653  027E  3A02               	xorlw	2	; case 2
  3654  027F  1903               	skipnz
  3655  0280  2A61               	goto	l2500
  3656  0281  3A01               	xorlw	1	; case 3
  3657  0282  1903               	skipnz
  3658  0283  2A61               	goto	l2500
  3659  0284  2A65               	goto	l2504
  3660  0285                     l227:
  3661  0285  0008               	return
  3662  0286                     __end_of_I2C_DO_ADDRESS_NACK:
  3663                           
  3664                           	psect	text21
  3665  047A                     __ptext21:	
  3666 ;; *************** function _I2C_DO_RESET *****************
  3667 ;; Defined at:
  3668 ;;		line 395 in file "../src/i2c_master.c"
  3669 ;; Parameters:    Size  Location     Type
  3670 ;;		None
  3671 ;; Auto vars:     Size  Location     Type
  3672 ;;		None
  3673 ;; Return value:  Size  Location     Type
  3674 ;;                  1    wreg      enum E2558
  3675 ;; Registers used:
  3676 ;;		wreg, status,2
  3677 ;; Tracked objects:
  3678 ;;		On entry : 0/0
  3679 ;;		On exit  : 0/0
  3680 ;;		Unchanged: 0/0
  3681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3686 ;;Total ram usage:        0 bytes
  3687 ;; Hardware stack levels used:    1
  3688 ;; Hardware stack levels required when called:    3
  3689 ;; This function calls:
  3690 ;;		Nothing
  3691 ;; This function is called by:
  3692 ;;		_I2C_MasterFsm
  3693 ;; This function uses a non-reentrant model
  3694 ;;
  3695                           
  3696                           
  3697                           ;psect for function _I2C_DO_RESET
  3698  047A                     _I2C_DO_RESET:
  3699  047A                     l2488:	
  3700                           ;incstack = 0
  3701                           ; Regs used in _I2C_DO_RESET: [wreg+status,2]
  3702                           
  3703                           
  3704                           ;../src/i2c_master.c: 397:     I2C_Status.busy = 0;
  3705  047A  0020               	movlb	0	; select bank0
  3706  047B  10BC               	bcf	_I2C_Status+28,1
  3707  047C                     l2490:
  3708                           
  3709                           ;../src/i2c_master.c: 398:     I2C_Status.error = I2C_NOERR;
  3710  047C  01BB               	clrf	_I2C_Status+27
  3711  047D                     l2492:
  3712                           
  3713                           ;../src/i2c_master.c: 399:     return I2C_RESET;
  3714  047D  300E               	movlw	14
  3715  047E                     l221:
  3716  047E  0008               	return
  3717  047F                     __end_of_I2C_DO_RESET:
  3718                           
  3719                           	psect	text22
  3720  047F                     __ptext22:	
  3721 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  3722 ;; Defined at:
  3723 ;;		line 389 in file "../src/i2c_master.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;		None
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;		None
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  1    wreg      enum E2558
  3730 ;; Registers used:
  3731 ;;		wreg, status,2, status,0, pclath, cstack
  3732 ;; Tracked objects:
  3733 ;;		On entry : 0/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3741 ;;Total ram usage:        0 bytes
  3742 ;; Hardware stack levels used:    1
  3743 ;; Hardware stack levels required when called:    4
  3744 ;; This function calls:
  3745 ;;		_I2C_MasterSendNack
  3746 ;; This function is called by:
  3747 ;;		_I2C_DO_RX
  3748 ;;		_I2C_MasterFsm
  3749 ;; This function uses a non-reentrant model
  3750 ;;
  3751                           
  3752                           
  3753                           ;psect for function _I2C_DO_RX_NACK_RESTART
  3754  047F                     _I2C_DO_RX_NACK_RESTART:
  3755  047F                     l2314:	
  3756                           ;incstack = 0
  3757                           ; Regs used in _I2C_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  3758                           
  3759                           
  3760                           ;../src/i2c_master.c: 391:     I2C_MasterSendNack();
  3761  047F  3184  24B4  3184   	fcall	_I2C_MasterSendNack
  3762  0482                     l2316:
  3763                           
  3764                           ;../src/i2c_master.c: 392:     return I2C_SEND_RESTART;
  3765  0482  3009               	movlw	9
  3766  0483                     l218:
  3767  0483  0008               	return
  3768  0484                     __end_of_I2C_DO_RX_NACK_RESTART:
  3769                           
  3770                           	psect	text23
  3771  0484                     __ptext23:	
  3772 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  3773 ;; Defined at:
  3774 ;;		line 383 in file "../src/i2c_master.c"
  3775 ;; Parameters:    Size  Location     Type
  3776 ;;		None
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;		None
  3779 ;; Return value:  Size  Location     Type
  3780 ;;                  1    wreg      enum E2558
  3781 ;; Registers used:
  3782 ;;		wreg, status,2, status,0, pclath, cstack
  3783 ;; Tracked objects:
  3784 ;;		On entry : 0/0
  3785 ;;		On exit  : 0/0
  3786 ;;		Unchanged: 0/0
  3787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3792 ;;Total ram usage:        0 bytes
  3793 ;; Hardware stack levels used:    1
  3794 ;; Hardware stack levels required when called:    4
  3795 ;; This function calls:
  3796 ;;		_I2C_MasterSendNack
  3797 ;; This function is called by:
  3798 ;;		_I2C_DO_RX
  3799 ;;		_I2C_MasterFsm
  3800 ;; This function uses a non-reentrant model
  3801 ;;
  3802                           
  3803                           
  3804                           ;psect for function _I2C_DO_RX_NACK_STOP
  3805  0484                     _I2C_DO_RX_NACK_STOP:
  3806  0484                     l2320:	
  3807                           ;incstack = 0
  3808                           ; Regs used in _I2C_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  3809                           
  3810                           
  3811                           ;../src/i2c_master.c: 385:     I2C_MasterSendNack();
  3812  0484  3184  24B4  3184   	fcall	_I2C_MasterSendNack
  3813  0487                     l2322:
  3814                           
  3815                           ;../src/i2c_master.c: 386:     return I2C_SEND_STOP;
  3816  0487  300A               	movlw	10
  3817  0488                     l215:
  3818  0488  0008               	return
  3819  0489                     __end_of_I2C_DO_RX_NACK_STOP:
  3820                           
  3821                           	psect	text24
  3822  0489                     __ptext24:	
  3823 ;; *************** function _I2C_DO_RX_ACK *****************
  3824 ;; Defined at:
  3825 ;;		line 376 in file "../src/i2c_master.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;		None
  3828 ;; Auto vars:     Size  Location     Type
  3829 ;;		None
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  1    wreg      enum E2558
  3832 ;; Registers used:
  3833 ;;		wreg, status,2, status,0, pclath, cstack
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3843 ;;Total ram usage:        0 bytes
  3844 ;; Hardware stack levels used:    1
  3845 ;; Hardware stack levels required when called:    4
  3846 ;; This function calls:
  3847 ;;		_I2C_MasterSendAck
  3848 ;; This function is called by:
  3849 ;;		_I2C_MasterFsm
  3850 ;; This function uses a non-reentrant model
  3851 ;;
  3852                           
  3853                           
  3854                           ;psect for function _I2C_DO_RX_ACK
  3855  0489                     _I2C_DO_RX_ACK:
  3856  0489                     l2482:	
  3857                           ;incstack = 0
  3858                           ; Regs used in _I2C_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
  3859                           
  3860                           
  3861                           ;../src/i2c_master.c: 378:     I2C_MasterSendAck();
  3862  0489  3184  24B0  3184   	fcall	_I2C_MasterSendAck
  3863  048C                     l2484:
  3864                           
  3865                           ;../src/i2c_master.c: 379:     return I2C_RCEN;
  3866  048C  3005               	movlw	5
  3867  048D                     l212:
  3868  048D  0008               	return
  3869  048E                     __end_of_I2C_DO_RX_ACK:
  3870                           
  3871                           	psect	text25
  3872  048E                     __ptext25:	
  3873 ;; *************** function _I2C_DO_SEND_STOP *****************
  3874 ;; Defined at:
  3875 ;;		line 370 in file "../src/i2c_master.c"
  3876 ;; Parameters:    Size  Location     Type
  3877 ;;		None
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;		None
  3880 ;; Return value:  Size  Location     Type
  3881 ;;                  1    wreg      enum E2558
  3882 ;; Registers used:
  3883 ;;		wreg, status,2, status,0, pclath, cstack
  3884 ;; Tracked objects:
  3885 ;;		On entry : 0/0
  3886 ;;		On exit  : 0/0
  3887 ;;		Unchanged: 0/0
  3888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3893 ;;Total ram usage:        0 bytes
  3894 ;; Hardware stack levels used:    1
  3895 ;; Hardware stack levels required when called:    4
  3896 ;; This function calls:
  3897 ;;		_I2C_MasterStop
  3898 ;; This function is called by:
  3899 ;;		_I2C_DO_TX
  3900 ;;		_I2C_DO_TX_EMPTY
  3901 ;;		_I2C_DO_ADDRESS_NACK
  3902 ;;		_I2C_MasterFsm
  3903 ;; This function uses a non-reentrant model
  3904 ;;
  3905                           
  3906                           
  3907                           ;psect for function _I2C_DO_SEND_STOP
  3908  048E                     _I2C_DO_SEND_STOP:
  3909  048E                     l2302:	
  3910                           ;incstack = 0
  3911                           ; Regs used in _I2C_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
  3912                           
  3913                           
  3914                           ;../src/i2c_master.c: 372:     I2C_MasterStop();
  3915  048E  3184  24C4  3184   	fcall	_I2C_MasterStop
  3916  0491                     l2304:
  3917                           
  3918                           ;../src/i2c_master.c: 373:     return I2C_IDLE;
  3919  0491  3000               	movlw	0
  3920  0492                     l209:
  3921  0492  0008               	return
  3922  0493                     __end_of_I2C_DO_SEND_STOP:
  3923                           
  3924                           	psect	text26
  3925  0493                     __ptext26:	
  3926 ;; *************** function _I2C_DO_SEND_RESTART *****************
  3927 ;; Defined at:
  3928 ;;		line 364 in file "../src/i2c_master.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;		None
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;		None
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  1    wreg      enum E2558
  3935 ;; Registers used:
  3936 ;;		wreg, status,2, status,0, pclath, cstack
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3946 ;;Total ram usage:        0 bytes
  3947 ;; Hardware stack levels used:    1
  3948 ;; Hardware stack levels required when called:    4
  3949 ;; This function calls:
  3950 ;;		_I2C_MasterEnableRestart
  3951 ;; This function is called by:
  3952 ;;		_I2C_DO_TX_EMPTY
  3953 ;;		_I2C_DO_ADDRESS_NACK
  3954 ;;		_I2C_MasterFsm
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           
  3959                           ;psect for function _I2C_DO_SEND_RESTART
  3960  0493                     _I2C_DO_SEND_RESTART:
  3961  0493                     l2328:	
  3962                           ;incstack = 0
  3963                           ; Regs used in _I2C_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
  3964                           
  3965                           
  3966                           ;../src/i2c_master.c: 366:     I2C_MasterEnableRestart();
  3967  0493  3184  24C7  3184   	fcall	_I2C_MasterEnableRestart
  3968  0496                     l2330:
  3969                           
  3970                           ;../src/i2c_master.c: 367:     return I2C_SEND_ADR_READ;
  3971  0496  3001               	movlw	1
  3972  0497                     l206:
  3973  0497  0008               	return
  3974  0498                     __end_of_I2C_DO_SEND_RESTART:
  3975                           
  3976                           	psect	text27
  3977  0498                     __ptext27:	
  3978 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  3979 ;; Defined at:
  3980 ;;		line 357 in file "../src/i2c_master.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;		None
  3983 ;; Auto vars:     Size  Location     Type
  3984 ;;		None
  3985 ;; Return value:  Size  Location     Type
  3986 ;;                  1    wreg      enum E2558
  3987 ;; Registers used:
  3988 ;;		wreg, status,2, status,0, pclath, cstack
  3989 ;; Tracked objects:
  3990 ;;		On entry : 0/0
  3991 ;;		On exit  : 0/0
  3992 ;;		Unchanged: 0/0
  3993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3998 ;;Total ram usage:        0 bytes
  3999 ;; Hardware stack levels used:    1
  4000 ;; Hardware stack levels required when called:    4
  4001 ;; This function calls:
  4002 ;;		_I2C_MasterEnableRestart
  4003 ;; This function is called by:
  4004 ;;		_I2C_DO_TX
  4005 ;;		_I2C_MasterFsm
  4006 ;; This function uses a non-reentrant model
  4007 ;;
  4008                           
  4009                           
  4010                           ;psect for function _I2C_DO_SEND_RESTART_WRITE
  4011  0498                     _I2C_DO_SEND_RESTART_WRITE:
  4012  0498                     l2296:	
  4013                           ;incstack = 0
  4014                           ; Regs used in _I2C_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  4015                           
  4016                           
  4017                           ;../src/i2c_master.c: 359:     I2C_MasterEnableRestart();
  4018  0498  3184  24C7  3184   	fcall	_I2C_MasterEnableRestart
  4019  049B                     l2298:
  4020                           
  4021                           ;../src/i2c_master.c: 360:     return I2C_SEND_ADR_WRITE;
  4022  049B  3002               	movlw	2
  4023  049C                     l203:
  4024  049C  0008               	return
  4025  049D                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  4026                           
  4027                           	psect	text28
  4028  049D                     __ptext28:	
  4029 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  4030 ;; Defined at:
  4031 ;;		line 351 in file "../src/i2c_master.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;		None
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;		None
  4036 ;; Return value:  Size  Location     Type
  4037 ;;                  1    wreg      enum E2558
  4038 ;; Registers used:
  4039 ;;		wreg, status,2, status,0, pclath, cstack
  4040 ;; Tracked objects:
  4041 ;;		On entry : 0/0
  4042 ;;		On exit  : 0/0
  4043 ;;		Unchanged: 0/0
  4044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4049 ;;Total ram usage:        0 bytes
  4050 ;; Hardware stack levels used:    1
  4051 ;; Hardware stack levels required when called:    4
  4052 ;; This function calls:
  4053 ;;		_I2C_MasterEnableRestart
  4054 ;; This function is called by:
  4055 ;;		_I2C_DO_TX
  4056 ;;		_I2C_MasterFsm
  4057 ;; This function uses a non-reentrant model
  4058 ;;
  4059                           
  4060                           
  4061                           ;psect for function _I2C_DO_SEND_RESTART_READ
  4062  049D                     _I2C_DO_SEND_RESTART_READ:
  4063  049D                     l2290:	
  4064                           ;incstack = 0
  4065                           ; Regs used in _I2C_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
  4066                           
  4067                           
  4068                           ;../src/i2c_master.c: 353:     I2C_MasterEnableRestart();
  4069  049D  3184  24C7  3184   	fcall	_I2C_MasterEnableRestart
  4070  04A0                     l2292:
  4071                           
  4072                           ;../src/i2c_master.c: 354:     return I2C_SEND_ADR_READ;
  4073  04A0  3001               	movlw	1
  4074  04A1                     l200:
  4075  04A1  0008               	return
  4076  04A2                     __end_of_I2C_DO_SEND_RESTART_READ:
  4077                           
  4078                           	psect	text29
  4079  0456                     __ptext29:	
  4080 ;; *************** function _I2C_DO_RCEN *****************
  4081 ;; Defined at:
  4082 ;;		line 327 in file "../src/i2c_master.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;		None
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;		None
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  1    wreg      enum E2558
  4089 ;; Registers used:
  4090 ;;		wreg, status,2, status,0, pclath, cstack
  4091 ;; Tracked objects:
  4092 ;;		On entry : 0/0
  4093 ;;		On exit  : 0/0
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4100 ;;Total ram usage:        0 bytes
  4101 ;; Hardware stack levels used:    1
  4102 ;; Hardware stack levels required when called:    4
  4103 ;; This function calls:
  4104 ;;		_I2C_MasterStartRx
  4105 ;; This function is called by:
  4106 ;;		_I2C_MasterFsm
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110                           
  4111                           ;psect for function _I2C_DO_RCEN
  4112  0456                     _I2C_DO_RCEN:
  4113  0456                     l2450:	
  4114                           ;incstack = 0
  4115                           ; Regs used in _I2C_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
  4116                           
  4117                           
  4118                           ;../src/i2c_master.c: 329:     I2C_Status.addressNackCheck = 0;
  4119  0456  0020               	movlb	0	; select bank0
  4120  0457  103C               	bcf	_I2C_Status+28,0
  4121  0458                     l2452:
  4122                           
  4123                           ;../src/i2c_master.c: 330:     I2C_MasterStartRx();
  4124  0458  3184  24C1  3184   	fcall	_I2C_MasterStartRx
  4125  045B                     l2454:
  4126                           
  4127                           ;../src/i2c_master.c: 331:     return I2C_RX;
  4128  045B  3004               	movlw	4
  4129  045C                     l187:
  4130  045C  0008               	return
  4131  045D                     __end_of_I2C_DO_RCEN:
  4132                           
  4133                           	psect	text30
  4134  0142                     __ptext30:	
  4135 ;; *************** function _I2C_DO_RX *****************
  4136 ;; Defined at:
  4137 ;;		line 303 in file "../src/i2c_master.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;		None
  4140 ;; Auto vars:     Size  Location     Type
  4141 ;;		None
  4142 ;; Return value:  Size  Location     Type
  4143 ;;                  1    wreg      enum E2558
  4144 ;; Registers used:
  4145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4146 ;; Tracked objects:
  4147 ;;		On entry : 0/0
  4148 ;;		On exit  : 0/0
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4153 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4154 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4155 ;;Total ram usage:        3 bytes
  4156 ;; Hardware stack levels used:    1
  4157 ;; Hardware stack levels required when called:    6
  4158 ;; This function calls:
  4159 ;;		Absolute function
  4160 ;;		_I2C_CallbackReturnReset
  4161 ;;		_I2C_CallbackReturnStop
  4162 ;;		_I2C_DO_RX_NACK_RESTART
  4163 ;;		_I2C_DO_RX_NACK_STOP
  4164 ;;		_I2C_MasterGetRxData
  4165 ;;		_I2C_MasterSendAck
  4166 ;;		_rd1RegCompleteHandler
  4167 ;;		_wr1RegCompleteHandler
  4168 ;; This function is called by:
  4169 ;;		_I2C_MasterFsm
  4170 ;; This function uses a non-reentrant model
  4171 ;;
  4172                           
  4173                           
  4174                           ;psect for function _I2C_DO_RX
  4175  0142                     _I2C_DO_RX:
  4176  0142                     l2420:	
  4177                           ;incstack = 0
  4178                           ; Regs used in _I2C_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4179                           
  4180                           
  4181                           ;../src/i2c_master.c: 305:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData();
  4182  0142  3184  24BE  3181   	fcall	_I2C_MasterGetRxData
  4183  0145  00F2               	movwf	??_I2C_DO_RX
  4184  0146  0020               	movlb	0	; select bank0
  4185  0147  0837               	movf	low ((_I2C_Status| 0+23)),w
  4186  0148  0086               	movwf	6
  4187  0149  0187               	clrf	7
  4188  014A  0872               	movf	??_I2C_DO_RX,w
  4189  014B  0081               	movwf	1
  4190  014C                     l2422:
  4191  014C  3001               	movlw	1
  4192  014D  00F2               	movwf	??_I2C_DO_RX
  4193  014E  0872               	movf	??_I2C_DO_RX,w
  4194  014F  07B7               	addwf	low ((_I2C_Status| 0+23)),f
  4195  0150                     l2424:
  4196                           
  4197                           ;../src/i2c_master.c: 306:     if(--I2C_Status.data_length)
  4198  0150  3001               	movlw	1
  4199  0151  02B8               	subwf	_I2C_Status+24,f
  4200  0152  3000               	movlw	0
  4201  0153  3BB9               	subwfb	_I2C_Status+25,f
  4202  0154  0838               	movf	_I2C_Status+24,w
  4203  0155  0439               	iorwf	_I2C_Status+25,w
  4204  0156  1903               	btfsc	3,2
  4205  0157  2959               	goto	u671
  4206  0158  295A               	goto	u670
  4207  0159                     u671:
  4208  0159  295F               	goto	l175
  4209  015A                     u670:
  4210  015A                     l2426:
  4211                           
  4212                           ;../src/i2c_master.c: 307:     {;../src/i2c_master.c: 308:         I2C_MasterSendAck();
  4213  015A  3184  24B0  3181   	fcall	_I2C_MasterSendAck
  4214  015D                     l2428:
  4215                           
  4216                           ;../src/i2c_master.c: 309:         return I2C_RCEN;
  4217  015D  3005               	movlw	5
  4218  015E  2987               	goto	l176
  4219  015F                     l175:	
  4220                           ;../src/i2c_master.c: 311:     else
  4221                           
  4222                           
  4223                           ;../src/i2c_master.c: 312:     {;../src/i2c_master.c: 313:         I2C_Status.bufferFree
      +                           = 1;
  4224  015F  15BC               	bsf	_I2C_Status+28,3
  4225                           
  4226                           ;../src/i2c_master.c: 314:         switch(I2C_Status.callbackTable[I2C_DATA_COMPLETE](I2
      +                          C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  4227  0160  2969               	goto	l2444
  4228  0161                     l2434:
  4229                           
  4230                           ;../src/i2c_master.c: 318:                 return I2C_DO_RX_NACK_RESTART();
  4231  0161  3184  247F  3181   	fcall	_I2C_DO_RX_NACK_RESTART
  4232  0164  2987               	goto	l176
  4233  0165                     l2438:
  4234                           
  4235                           ;../src/i2c_master.c: 322:                 return I2C_DO_RX_NACK_STOP();
  4236  0165  3184  2484  3181   	fcall	_I2C_DO_RX_NACK_STOP
  4237  0168  2987               	goto	l176
  4238  0169                     l2444:
  4239  0169  082C               	movf	low ((_I2C_Status| 0+12)),w
  4240  016A  00F2               	movwf	??_I2C_DO_RX
  4241  016B  0872               	movf	??_I2C_DO_RX,w
  4242  016C  00C2               	movwf	wr1RegCompleteHandler@ptr
  4243  016D  0821               	movf	_I2C_Status+1,w
  4244  016E  008A               	movwf	10
  4245  016F  0820               	movf	_I2C_Status,w
  4246  0170  000A               	callw
  4247  0171  3181               	pagesel	$
  4248  0172  00F3               	movwf	??_I2C_DO_RX+1
  4249  0173  01F4               	clrf	??_I2C_DO_RX+2
  4250                           
  4251                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4252                           ; Switch size 1, requested type "simple"
  4253                           ; Number of cases is 1, Range of values is 0 to 0
  4254                           ; switch strategies available:
  4255                           ; Name         Instructions Cycles
  4256                           ; simple_byte            4     3 (average)
  4257                           ; direct_byte            8     6 (fixed)
  4258                           ; jumptable            260     6 (fixed)
  4259                           ;	Chosen strategy is simple_byte
  4260  0174  0874               	movf	??_I2C_DO_RX+2,w
  4261  0175  3A00               	xorlw	0	; case 0
  4262  0176  1903               	skipnz
  4263  0177  2979               	goto	l2778
  4264  0178  2965               	goto	l2438
  4265  0179                     l2778:
  4266                           
  4267                           ; Switch size 1, requested type "simple"
  4268                           ; Number of cases is 4, Range of values is 1 to 4
  4269                           ; switch strategies available:
  4270                           ; Name         Instructions Cycles
  4271                           ; simple_byte           13     7 (average)
  4272                           ; direct_byte           17     9 (fixed)
  4273                           ; jumptable            263     9 (fixed)
  4274                           ;	Chosen strategy is simple_byte
  4275  0179  0873               	movf	??_I2C_DO_RX+1,w
  4276  017A  3A01               	xorlw	1	; case 1
  4277  017B  1903               	skipnz
  4278  017C  2965               	goto	l2438
  4279  017D  3A03               	xorlw	3	; case 2
  4280  017E  1903               	skipnz
  4281  017F  2961               	goto	l2434
  4282  0180  3A01               	xorlw	1	; case 3
  4283  0181  1903               	skipnz
  4284  0182  2961               	goto	l2434
  4285  0183  3A07               	xorlw	7	; case 4
  4286  0184  1903               	skipnz
  4287  0185  2965               	goto	l2438
  4288  0186  2965               	goto	l2438
  4289  0187                     l176:
  4290  0187  0008               	return
  4291  0188                     __end_of_I2C_DO_RX:
  4292                           
  4293                           	psect	text31
  4294  00ED                     __ptext31:	
  4295 ;; *************** function _I2C_DO_TX *****************
  4296 ;; Defined at:
  4297 ;;		line 279 in file "../src/i2c_master.c"
  4298 ;; Parameters:    Size  Location     Type
  4299 ;;		None
  4300 ;; Auto vars:     Size  Location     Type
  4301 ;;		None
  4302 ;; Return value:  Size  Location     Type
  4303 ;;                  1    wreg      enum E2558
  4304 ;; Registers used:
  4305 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4306 ;; Tracked objects:
  4307 ;;		On entry : 0/0
  4308 ;;		On exit  : 0/0
  4309 ;;		Unchanged: 0/0
  4310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4313 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4314 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4315 ;;Total ram usage:        3 bytes
  4316 ;; Hardware stack levels used:    1
  4317 ;; Hardware stack levels required when called:    6
  4318 ;; This function calls:
  4319 ;;		Absolute function
  4320 ;;		_I2C_CallbackReturnReset
  4321 ;;		_I2C_CallbackReturnStop
  4322 ;;		_I2C_DO_SEND_RESTART_READ
  4323 ;;		_I2C_DO_SEND_RESTART_WRITE
  4324 ;;		_I2C_DO_SEND_STOP
  4325 ;;		_I2C_MasterIsNack
  4326 ;;		_I2C_MasterSendTxData
  4327 ;;		_rd1RegCompleteHandler
  4328 ;;		_wr1RegCompleteHandler
  4329 ;; This function is called by:
  4330 ;;		_I2C_MasterFsm
  4331 ;; This function uses a non-reentrant model
  4332 ;;
  4333                           
  4334                           
  4335                           ;psect for function _I2C_DO_TX
  4336  00ED                     _I2C_DO_TX:
  4337  00ED                     l2386:	
  4338                           ;incstack = 0
  4339                           ; Regs used in _I2C_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4340                           
  4341                           
  4342                           ;../src/i2c_master.c: 281:     if(I2C_MasterIsNack())
  4343  00ED  3184  246F  3180   	fcall	_I2C_MasterIsNack
  4344  00F0  3A00               	xorlw	0
  4345  00F1  1903               	skipnz
  4346  00F2  28F4               	goto	u651
  4347  00F3  28F5               	goto	u650
  4348  00F4                     u651:
  4349  00F4  2925               	goto	l159
  4350  00F5                     u650:
  4351  00F5  2902               	goto	l2404
  4352  00F6                     l2390:
  4353                           
  4354                           ;../src/i2c_master.c: 286:                 return I2C_DO_SEND_RESTART_READ();
  4355  00F6  3184  249D  3180   	fcall	_I2C_DO_SEND_RESTART_READ
  4356  00F9  2941               	goto	l162
  4357  00FA                     l2394:
  4358                           
  4359                           ;../src/i2c_master.c: 288:                   return I2C_DO_SEND_RESTART_WRITE();
  4360  00FA  3184  2498  3180   	fcall	_I2C_DO_SEND_RESTART_WRITE
  4361  00FD  2941               	goto	l162
  4362  00FE                     l2398:
  4363                           
  4364                           ;../src/i2c_master.c: 292:                 return I2C_DO_SEND_STOP();
  4365  00FE  3184  248E  3180   	fcall	_I2C_DO_SEND_STOP
  4366  0101  2941               	goto	l162
  4367  0102                     l2404:
  4368  0102  0020               	movlb	0	; select bank0
  4369  0103  082F               	movf	low ((_I2C_Status| 0+15)),w
  4370  0104  00F3               	movwf	??_I2C_DO_TX
  4371  0105  0873               	movf	??_I2C_DO_TX,w
  4372  0106  00C2               	movwf	wr1RegCompleteHandler@ptr
  4373  0107  3006               	movlw	6
  4374  0108  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  4375  0109  0086               	movwf	6
  4376  010A  0187               	clrf	7
  4377  010B  3F41               	moviw [1]fsr1
  4378  010C  008A               	movwf	10
  4379  010D  3F40               	moviw [0]fsr1
  4380  010E  000A               	callw
  4381  010F  3180               	pagesel	$
  4382  0110  00F4               	movwf	??_I2C_DO_TX+1
  4383  0111  01F5               	clrf	??_I2C_DO_TX+2
  4384                           
  4385                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4386                           ; Switch size 1, requested type "simple"
  4387                           ; Number of cases is 1, Range of values is 0 to 0
  4388                           ; switch strategies available:
  4389                           ; Name         Instructions Cycles
  4390                           ; simple_byte            4     3 (average)
  4391                           ; direct_byte            8     6 (fixed)
  4392                           ; jumptable            260     6 (fixed)
  4393                           ;	Chosen strategy is simple_byte
  4394  0112  0875               	movf	??_I2C_DO_TX+2,w
  4395  0113  3A00               	xorlw	0	; case 0
  4396  0114  1903               	skipnz
  4397  0115  2917               	goto	l2780
  4398  0116  28FE               	goto	l2398
  4399  0117                     l2780:
  4400                           
  4401                           ; Switch size 1, requested type "simple"
  4402                           ; Number of cases is 4, Range of values is 1 to 4
  4403                           ; switch strategies available:
  4404                           ; Name         Instructions Cycles
  4405                           ; simple_byte           13     7 (average)
  4406                           ; direct_byte           17     9 (fixed)
  4407                           ; jumptable            263     9 (fixed)
  4408                           ;	Chosen strategy is simple_byte
  4409  0117  0874               	movf	??_I2C_DO_TX+1,w
  4410  0118  3A01               	xorlw	1	; case 1
  4411  0119  1903               	skipnz
  4412  011A  28FE               	goto	l2398
  4413  011B  3A03               	xorlw	3	; case 2
  4414  011C  1903               	skipnz
  4415  011D  28F6               	goto	l2390
  4416  011E  3A01               	xorlw	1	; case 3
  4417  011F  1903               	skipnz
  4418  0120  28FA               	goto	l2394
  4419  0121  3A07               	xorlw	7	; case 4
  4420  0122  1903               	skipnz
  4421  0123  28FE               	goto	l2398
  4422  0124  28FE               	goto	l2398
  4423  0125                     l159:	
  4424                           ;../src/i2c_master.c: 295:     else
  4425                           
  4426                           
  4427                           ;../src/i2c_master.c: 296:     {;../src/i2c_master.c: 297:         I2C_Status.addressNac
      +                          kCheck = 0;
  4428  0125  0020               	movlb	0	; select bank0
  4429  0126  103C               	bcf	_I2C_Status+28,0
  4430  0127                     l2406:
  4431                           
  4432                           ;../src/i2c_master.c: 298:         I2C_MasterSendTxData(*I2C_Status.data_ptr++);
  4433  0127  3017               	movlw	23
  4434  0128  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  4435  0129  0086               	movwf	6
  4436  012A  0187               	clrf	7
  4437  012B  3F40               	moviw [0]fsr1
  4438  012C  0084               	movwf	4
  4439  012D  0185               	clrf	5
  4440  012E  0A81               	incf	1,f
  4441  012F  0800               	movf	0,w
  4442  0130  3184  24A7  3180   	fcall	_I2C_MasterSendTxData
  4443  0133                     l2408:
  4444                           
  4445                           ;../src/i2c_master.c: 299:         return (--I2C_Status.data_length)?I2C_TX:I2C_TX_EMPTY
      +                          ;
  4446  0133  3001               	movlw	1
  4447  0134  0020               	movlb	0	; select bank0
  4448  0135  02B8               	subwf	_I2C_Status+24,f
  4449  0136  3000               	movlw	0
  4450  0137  3BB9               	subwfb	_I2C_Status+25,f
  4451  0138  0838               	movf	_I2C_Status+24,w
  4452  0139  0439               	iorwf	_I2C_Status+25,w
  4453  013A  1D03               	btfss	3,2
  4454  013B  293D               	goto	u661
  4455  013C  293E               	goto	u660
  4456  013D                     u661:
  4457  013D  2940               	goto	l2412
  4458  013E                     u660:
  4459  013E                     l2410:
  4460  013E  3006               	movlw	6
  4461  013F  2941               	goto	l162
  4462  0140                     l2412:
  4463  0140  3003               	movlw	3
  4464  0141                     l162:
  4465  0141  0008               	return
  4466  0142                     __end_of_I2C_DO_TX:
  4467                           
  4468                           	psect	text32
  4469  044E                     __ptext32:	
  4470 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  4471 ;; Defined at:
  4472 ;;		line 272 in file "../src/i2c_master.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;		None
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;		None
  4477 ;; Return value:  Size  Location     Type
  4478 ;;                  1    wreg      enum E2558
  4479 ;; Registers used:
  4480 ;;		wreg, status,2, status,0, pclath, cstack
  4481 ;; Tracked objects:
  4482 ;;		On entry : 0/0
  4483 ;;		On exit  : 0/0
  4484 ;;		Unchanged: 0/0
  4485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4490 ;;Total ram usage:        0 bytes
  4491 ;; Hardware stack levels used:    1
  4492 ;; Hardware stack levels required when called:    4
  4493 ;; This function calls:
  4494 ;;		_I2C_MasterSendTxData
  4495 ;; This function is called by:
  4496 ;;		_I2C_MasterFsm
  4497 ;; This function uses a non-reentrant model
  4498 ;;
  4499                           
  4500                           
  4501                           ;psect for function _I2C_DO_SEND_ADR_WRITE
  4502  044E                     _I2C_DO_SEND_ADR_WRITE:
  4503  044E                     l2378:	
  4504                           ;incstack = 0
  4505                           ; Regs used in _I2C_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  4506                           
  4507                           
  4508                           ;../src/i2c_master.c: 274:     I2C_Status.addressNackCheck = 1;
  4509  044E  0020               	movlb	0	; select bank0
  4510  044F  143C               	bsf	_I2C_Status+28,0
  4511  0450                     l2380:
  4512                           
  4513                           ;../src/i2c_master.c: 275:     I2C_MasterSendTxData((uint8_t) (I2C_Status.address << 1))
      +                          ;
  4514  0450  3536               	lslf	_I2C_Status+22,w
  4515  0451  3184  24A7  3184   	fcall	_I2C_MasterSendTxData
  4516  0454                     l2382:
  4517                           
  4518                           ;../src/i2c_master.c: 276:     return I2C_TX;
  4519  0454  3003               	movlw	3
  4520  0455                     l156:
  4521  0455  0008               	return
  4522  0456                     __end_of_I2C_DO_SEND_ADR_WRITE:
  4523                           
  4524                           	psect	text33
  4525  0445                     __ptext33:	
  4526 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  4527 ;; Defined at:
  4528 ;;		line 265 in file "../src/i2c_master.c"
  4529 ;; Parameters:    Size  Location     Type
  4530 ;;		None
  4531 ;; Auto vars:     Size  Location     Type
  4532 ;;		None
  4533 ;; Return value:  Size  Location     Type
  4534 ;;                  1    wreg      enum E2558
  4535 ;; Registers used:
  4536 ;;		wreg, status,2, status,0, pclath, cstack
  4537 ;; Tracked objects:
  4538 ;;		On entry : 0/0
  4539 ;;		On exit  : 0/0
  4540 ;;		Unchanged: 0/0
  4541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4546 ;;Total ram usage:        0 bytes
  4547 ;; Hardware stack levels used:    1
  4548 ;; Hardware stack levels required when called:    4
  4549 ;; This function calls:
  4550 ;;		_I2C_MasterSendTxData
  4551 ;; This function is called by:
  4552 ;;		_I2C_MasterFsm
  4553 ;; This function uses a non-reentrant model
  4554 ;;
  4555                           
  4556                           
  4557                           ;psect for function _I2C_DO_SEND_ADR_READ
  4558  0445                     _I2C_DO_SEND_ADR_READ:
  4559  0445                     l2370:	
  4560                           ;incstack = 0
  4561                           ; Regs used in _I2C_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  4562                           
  4563                           
  4564                           ;../src/i2c_master.c: 267:     I2C_Status.addressNackCheck = 1;
  4565  0445  0020               	movlb	0	; select bank0
  4566  0446  143C               	bsf	_I2C_Status+28,0
  4567  0447                     l2372:
  4568                           
  4569                           ;../src/i2c_master.c: 268:     I2C_MasterSendTxData((uint8_t) (I2C_Status.address << 1 |
      +                           1));
  4570  0447  1403               	setc
  4571  0448  0D36               	rlf	_I2C_Status+22,w
  4572  0449  3184  24A7  3184   	fcall	_I2C_MasterSendTxData
  4573  044C                     l2374:
  4574                           
  4575                           ;../src/i2c_master.c: 269:     return I2C_RCEN;
  4576  044C  3005               	movlw	5
  4577  044D                     l153:
  4578  044D  0008               	return
  4579  044E                     __end_of_I2C_DO_SEND_ADR_READ:
  4580                           
  4581                           	psect	text34
  4582  04A2                     __ptext34:	
  4583 ;; *************** function _I2C_DO_IDLE *****************
  4584 ;; Defined at:
  4585 ;;		line 258 in file "../src/i2c_master.c"
  4586 ;; Parameters:    Size  Location     Type
  4587 ;;		None
  4588 ;; Auto vars:     Size  Location     Type
  4589 ;;		None
  4590 ;; Return value:  Size  Location     Type
  4591 ;;                  1    wreg      enum E2558
  4592 ;; Registers used:
  4593 ;;		wreg, status,2
  4594 ;; Tracked objects:
  4595 ;;		On entry : 0/0
  4596 ;;		On exit  : 0/0
  4597 ;;		Unchanged: 0/0
  4598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4603 ;;Total ram usage:        0 bytes
  4604 ;; Hardware stack levels used:    1
  4605 ;; Hardware stack levels required when called:    3
  4606 ;; This function calls:
  4607 ;;		Nothing
  4608 ;; This function is called by:
  4609 ;;		_I2C_MasterFsm
  4610 ;; This function uses a non-reentrant model
  4611 ;;
  4612                           
  4613                           
  4614                           ;psect for function _I2C_DO_IDLE
  4615  04A2                     _I2C_DO_IDLE:
  4616  04A2                     l2362:	
  4617                           ;incstack = 0
  4618                           ; Regs used in _I2C_DO_IDLE: [wreg+status,2]
  4619                           
  4620                           
  4621                           ;../src/i2c_master.c: 260:     I2C_Status.busy = 0;
  4622  04A2  0020               	movlb	0	; select bank0
  4623  04A3  10BC               	bcf	_I2C_Status+28,1
  4624  04A4                     l2364:
  4625                           
  4626                           ;../src/i2c_master.c: 261:     I2C_Status.error = I2C_NOERR;
  4627  04A4  01BB               	clrf	_I2C_Status+27
  4628  04A5                     l2366:
  4629                           
  4630                           ;../src/i2c_master.c: 262:     return I2C_RESET;
  4631  04A5  300E               	movlw	14
  4632  04A6                     l150:
  4633  04A6  0008               	return
  4634  04A7                     __end_of_I2C_DO_IDLE:
  4635                           
  4636                           	psect	text35
  4637  022B                     __ptext35:	
  4638 ;; *************** function _I2C_DO_TX_EMPTY *****************
  4639 ;; Defined at:
  4640 ;;		line 334 in file "../src/i2c_master.c"
  4641 ;; Parameters:    Size  Location     Type
  4642 ;;		None
  4643 ;; Auto vars:     Size  Location     Type
  4644 ;;		None
  4645 ;; Return value:  Size  Location     Type
  4646 ;;                  1    wreg      enum E2558
  4647 ;; Registers used:
  4648 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4649 ;; Tracked objects:
  4650 ;;		On entry : 0/0
  4651 ;;		On exit  : 0/0
  4652 ;;		Unchanged: 0/0
  4653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4656 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4657 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4658 ;;Total ram usage:        3 bytes
  4659 ;; Hardware stack levels used:    1
  4660 ;; Hardware stack levels required when called:    6
  4661 ;; This function calls:
  4662 ;;		Absolute function
  4663 ;;		_I2C_CallbackReturnReset
  4664 ;;		_I2C_CallbackReturnStop
  4665 ;;		_I2C_DO_SEND_RESTART
  4666 ;;		_I2C_DO_SEND_STOP
  4667 ;;		_I2C_MasterSetIrq
  4668 ;;		_rd1RegCompleteHandler
  4669 ;;		_wr1RegCompleteHandler
  4670 ;; This function is called by:
  4671 ;;		_I2C_MasterFsm
  4672 ;; This function uses a non-reentrant model
  4673 ;;
  4674                           
  4675                           
  4676                           ;psect for function _I2C_DO_TX_EMPTY
  4677  022B                     _I2C_DO_TX_EMPTY:
  4678  022B                     l2458:	
  4679                           ;incstack = 0
  4680                           ; Regs used in _I2C_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4681                           
  4682                           
  4683                           ;../src/i2c_master.c: 336:     I2C_Status.bufferFree = 1;
  4684  022B  0020               	movlb	0	; select bank0
  4685  022C  15BC               	bsf	_I2C_Status+28,3
  4686                           
  4687                           ;../src/i2c_master.c: 337:     switch(I2C_Status.callbackTable[I2C_DATA_COMPLETE](I2C_St
      +                          atus.callbackPayload[I2C_DATA_COMPLETE]))
  4688  022D  2A3B               	goto	l2476
  4689  022E                     l2460:
  4690                           
  4691                           ;../src/i2c_master.c: 341:             return I2C_DO_SEND_RESTART();
  4692  022E  3184  2493  3182   	fcall	_I2C_DO_SEND_RESTART
  4693  0231  2A59               	goto	l193
  4694  0232                     l2464:
  4695                           
  4696                           ;../src/i2c_master.c: 343:             I2C_MasterSetIrq();
  4697  0232  3184  24BB  3182   	fcall	_I2C_MasterSetIrq
  4698  0235                     l2466:
  4699                           
  4700                           ;../src/i2c_master.c: 344:             return I2C_TX;
  4701  0235  3003               	movlw	3
  4702  0236  2A59               	goto	l193
  4703  0237                     l2470:
  4704                           
  4705                           ;../src/i2c_master.c: 347:             return I2C_DO_SEND_STOP();
  4706  0237  3184  248E  3182   	fcall	_I2C_DO_SEND_STOP
  4707  023A  2A59               	goto	l193
  4708  023B                     l2476:
  4709  023B  082C               	movf	low ((_I2C_Status| 0+12)),w
  4710  023C  00F2               	movwf	??_I2C_DO_TX_EMPTY
  4711  023D  0872               	movf	??_I2C_DO_TX_EMPTY,w
  4712  023E  00C2               	movwf	wr1RegCompleteHandler@ptr
  4713  023F  0821               	movf	_I2C_Status+1,w
  4714  0240  008A               	movwf	10
  4715  0241  0820               	movf	_I2C_Status,w
  4716  0242  000A               	callw
  4717  0243  3182               	pagesel	$
  4718  0244  00F3               	movwf	??_I2C_DO_TX_EMPTY+1
  4719  0245  01F4               	clrf	??_I2C_DO_TX_EMPTY+2
  4720                           
  4721                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4722                           ; Switch size 1, requested type "simple"
  4723                           ; Number of cases is 1, Range of values is 0 to 0
  4724                           ; switch strategies available:
  4725                           ; Name         Instructions Cycles
  4726                           ; simple_byte            4     3 (average)
  4727                           ; direct_byte            8     6 (fixed)
  4728                           ; jumptable            260     6 (fixed)
  4729                           ;	Chosen strategy is simple_byte
  4730  0246  0874               	movf	??_I2C_DO_TX_EMPTY+2,w
  4731  0247  3A00               	xorlw	0	; case 0
  4732  0248  1903               	skipnz
  4733  0249  2A4B               	goto	l2782
  4734  024A  2A37               	goto	l2470
  4735  024B                     l2782:
  4736                           
  4737                           ; Switch size 1, requested type "simple"
  4738                           ; Number of cases is 4, Range of values is 1 to 4
  4739                           ; switch strategies available:
  4740                           ; Name         Instructions Cycles
  4741                           ; simple_byte           13     7 (average)
  4742                           ; direct_byte           17     9 (fixed)
  4743                           ; jumptable            263     9 (fixed)
  4744                           ;	Chosen strategy is simple_byte
  4745  024B  0873               	movf	??_I2C_DO_TX_EMPTY+1,w
  4746  024C  3A01               	xorlw	1	; case 1
  4747  024D  1903               	skipnz
  4748  024E  2A37               	goto	l2470
  4749  024F  3A03               	xorlw	3	; case 2
  4750  0250  1903               	skipnz
  4751  0251  2A2E               	goto	l2460
  4752  0252  3A01               	xorlw	1	; case 3
  4753  0253  1903               	skipnz
  4754  0254  2A2E               	goto	l2460
  4755  0255  3A07               	xorlw	7	; case 4
  4756  0256  1903               	skipnz
  4757  0257  2A32               	goto	l2464
  4758  0258  2A37               	goto	l2470
  4759  0259                     l193:
  4760  0259  0008               	return
  4761  025A                     __end_of_I2C_DO_TX_EMPTY:
  4762                           
  4763                           	psect	text36
  4764  04BB                     __ptext36:	
  4765 ;; *************** function _I2C_MasterSetIrq *****************
  4766 ;; Defined at:
  4767 ;;		line 504 in file "../src/i2c_master.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;		None
  4770 ;; Auto vars:     Size  Location     Type
  4771 ;;		None
  4772 ;; Return value:  Size  Location     Type
  4773 ;;                  1    wreg      void 
  4774 ;; Registers used:
  4775 ;;		None
  4776 ;; Tracked objects:
  4777 ;;		On entry : 0/0
  4778 ;;		On exit  : 0/0
  4779 ;;		Unchanged: 0/0
  4780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4785 ;;Total ram usage:        0 bytes
  4786 ;; Hardware stack levels used:    1
  4787 ;; Hardware stack levels required when called:    3
  4788 ;; This function calls:
  4789 ;;		Nothing
  4790 ;; This function is called by:
  4791 ;;		_I2C_DO_TX_EMPTY
  4792 ;; This function uses a non-reentrant model
  4793 ;;
  4794                           
  4795                           
  4796                           ;psect for function _I2C_MasterSetIrq
  4797  04BB                     _I2C_MasterSetIrq:
  4798  04BB                     l2334:	
  4799                           ;incstack = 0
  4800                           ; Regs used in _I2C_MasterSetIrq: []
  4801                           
  4802                           
  4803                           ;../src/i2c_master.c: 506:     PIR1bits.SSP1IF = 1;
  4804  04BB  0020               	movlb	0	; select bank0
  4805  04BC  1591               	bsf	17,3	;volatile
  4806  04BD                     l278:
  4807  04BD  0008               	return
  4808  04BE                     __end_of_I2C_MasterSetIrq:
  4809                           
  4810                           	psect	text37
  4811  046F                     __ptext37:	
  4812 ;; *************** function _I2C_MasterIsNack *****************
  4813 ;; Defined at:
  4814 ;;		line 477 in file "../src/i2c_master.c"
  4815 ;; Parameters:    Size  Location     Type
  4816 ;;		None
  4817 ;; Auto vars:     Size  Location     Type
  4818 ;;		None
  4819 ;; Return value:  Size  Location     Type
  4820 ;;                  1    wreg      _Bool 
  4821 ;; Registers used:
  4822 ;;		wreg, status,2, status,0
  4823 ;; Tracked objects:
  4824 ;;		On entry : 0/0
  4825 ;;		On exit  : 0/0
  4826 ;;		Unchanged: 0/0
  4827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4832 ;;Total ram usage:        0 bytes
  4833 ;; Hardware stack levels used:    1
  4834 ;; Hardware stack levels required when called:    3
  4835 ;; This function calls:
  4836 ;;		Nothing
  4837 ;; This function is called by:
  4838 ;;		_I2C_MasterFsm
  4839 ;;		_I2C_DO_TX
  4840 ;; This function uses a non-reentrant model
  4841 ;;
  4842                           
  4843                           
  4844                           ;psect for function _I2C_MasterIsNack
  4845  046F                     _I2C_MasterIsNack:
  4846  046F                     l2284:	
  4847                           ;incstack = 0
  4848                           ; Regs used in _I2C_MasterIsNack: [wreg+status,2+status,0]
  4849                           
  4850                           
  4851                           ;../src/i2c_master.c: 479:     return SSP1CON2bits.ACKSTAT;
  4852  046F  0024               	movlb	4	; select bank4
  4853  0470  0E16               	swapf	22,w	;volatile
  4854  0471  0C89               	rrf	9,f
  4855  0472  0C89               	rrf	9,f
  4856  0473  3901               	andlw	1
  4857  0474                     l263:
  4858  0474  0008               	return
  4859  0475                     __end_of_I2C_MasterIsNack:
  4860                           
  4861                           	psect	text38
  4862  04A7                     __ptext38:	
  4863 ;; *************** function _I2C_MasterSendTxData *****************
  4864 ;; Defined at:
  4865 ;;		line 452 in file "../src/i2c_master.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;  data            1    wreg     unsigned char 
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;  data            1    2[COMMON] unsigned char 
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  1    wreg      void 
  4872 ;; Registers used:
  4873 ;;		wreg
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4880 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4882 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4883 ;;Total ram usage:        1 bytes
  4884 ;; Hardware stack levels used:    1
  4885 ;; Hardware stack levels required when called:    3
  4886 ;; This function calls:
  4887 ;;		Nothing
  4888 ;; This function is called by:
  4889 ;;		_I2C_DO_SEND_ADR_READ
  4890 ;;		_I2C_DO_SEND_ADR_WRITE
  4891 ;;		_I2C_DO_TX
  4892 ;; This function uses a non-reentrant model
  4893 ;;
  4894                           
  4895                           
  4896                           ;psect for function _I2C_MasterSendTxData
  4897  04A7                     _I2C_MasterSendTxData:
  4898                           
  4899                           ;incstack = 0
  4900                           ; Regs used in _I2C_MasterSendTxData: [wreg]
  4901                           ;I2C_MasterSendTxData@data stored from wreg
  4902  04A7  00F2               	movwf	I2C_MasterSendTxData@data
  4903  04A8                     l2288:
  4904                           
  4905                           ;../src/i2c_master.c: 452: static __attribute__((inline)) void I2C_MasterSendTxData(uint
      +                          8_t data);../src/i2c_master.c: 453: {;../src/i2c_master.c: 454:     SSP1BUF = data;
  4906  04A8  0872               	movf	I2C_MasterSendTxData@data,w
  4907  04A9  0024               	movlb	4	; select bank4
  4908  04AA  0091               	movwf	17	;volatile
  4909  04AB                     l248:
  4910  04AB  0008               	return
  4911  04AC                     __end_of_I2C_MasterSendTxData:
  4912                           
  4913                           	psect	text39
  4914  04B0                     __ptext39:	
  4915 ;; *************** function _I2C_MasterSendAck *****************
  4916 ;; Defined at:
  4917 ;;		line 482 in file "../src/i2c_master.c"
  4918 ;; Parameters:    Size  Location     Type
  4919 ;;		None
  4920 ;; Auto vars:     Size  Location     Type
  4921 ;;		None
  4922 ;; Return value:  Size  Location     Type
  4923 ;;                  1    wreg      void 
  4924 ;; Registers used:
  4925 ;;		None
  4926 ;; Tracked objects:
  4927 ;;		On entry : 0/0
  4928 ;;		On exit  : 0/0
  4929 ;;		Unchanged: 0/0
  4930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4935 ;;Total ram usage:        0 bytes
  4936 ;; Hardware stack levels used:    1
  4937 ;; Hardware stack levels required when called:    3
  4938 ;; This function calls:
  4939 ;;		Nothing
  4940 ;; This function is called by:
  4941 ;;		_I2C_DO_RX
  4942 ;;		_I2C_DO_RX_ACK
  4943 ;; This function uses a non-reentrant model
  4944 ;;
  4945                           
  4946                           
  4947                           ;psect for function _I2C_MasterSendAck
  4948  04B0                     _I2C_MasterSendAck:
  4949  04B0                     l2312:	
  4950                           ;incstack = 0
  4951                           ; Regs used in _I2C_MasterSendAck: []
  4952                           
  4953                           
  4954                           ;../src/i2c_master.c: 484:     SSP1CON2bits.ACKDT = 0;
  4955  04B0  0024               	movlb	4	; select bank4
  4956  04B1  1296               	bcf	22,5	;volatile
  4957                           
  4958                           ;../src/i2c_master.c: 485:     SSP1CON2bits.ACKEN = 1;
  4959  04B2  1616               	bsf	22,4	;volatile
  4960  04B3                     l266:
  4961  04B3  0008               	return
  4962  04B4                     __end_of_I2C_MasterSendAck:
  4963                           
  4964                           	psect	text40
  4965  04BE                     __ptext40:	
  4966 ;; *************** function _I2C_MasterGetRxData *****************
  4967 ;; Defined at:
  4968 ;;		line 447 in file "../src/i2c_master.c"
  4969 ;; Parameters:    Size  Location     Type
  4970 ;;		None
  4971 ;; Auto vars:     Size  Location     Type
  4972 ;;		None
  4973 ;; Return value:  Size  Location     Type
  4974 ;;                  1    wreg      unsigned char 
  4975 ;; Registers used:
  4976 ;;		wreg
  4977 ;; Tracked objects:
  4978 ;;		On entry : 0/0
  4979 ;;		On exit  : 0/0
  4980 ;;		Unchanged: 0/0
  4981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4986 ;;Total ram usage:        0 bytes
  4987 ;; Hardware stack levels used:    1
  4988 ;; Hardware stack levels required when called:    3
  4989 ;; This function calls:
  4990 ;;		Nothing
  4991 ;; This function is called by:
  4992 ;;		_I2C_DO_RX
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           
  4997                           ;psect for function _I2C_MasterGetRxData
  4998  04BE                     _I2C_MasterGetRxData:
  4999  04BE                     l2308:	
  5000                           ;incstack = 0
  5001                           ; Regs used in _I2C_MasterGetRxData: [wreg]
  5002                           
  5003                           
  5004                           ;../src/i2c_master.c: 449:     return SSP1BUF;
  5005  04BE  0024               	movlb	4	; select bank4
  5006  04BF  0811               	movf	17,w	;volatile
  5007  04C0                     l245:
  5008  04C0  0008               	return
  5009  04C1                     __end_of_I2C_MasterGetRxData:
  5010                           
  5011                           	psect	text41
  5012  04B4                     __ptext41:	
  5013 ;; *************** function _I2C_MasterSendNack *****************
  5014 ;; Defined at:
  5015 ;;		line 488 in file "../src/i2c_master.c"
  5016 ;; Parameters:    Size  Location     Type
  5017 ;;		None
  5018 ;; Auto vars:     Size  Location     Type
  5019 ;;		None
  5020 ;; Return value:  Size  Location     Type
  5021 ;;                  1    wreg      void 
  5022 ;; Registers used:
  5023 ;;		None
  5024 ;; Tracked objects:
  5025 ;;		On entry : 0/0
  5026 ;;		On exit  : 0/0
  5027 ;;		Unchanged: 0/0
  5028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5033 ;;Total ram usage:        0 bytes
  5034 ;; Hardware stack levels used:    1
  5035 ;; Hardware stack levels required when called:    3
  5036 ;; This function calls:
  5037 ;;		Nothing
  5038 ;; This function is called by:
  5039 ;;		_I2C_DO_RX_NACK_STOP
  5040 ;;		_I2C_DO_RX_NACK_RESTART
  5041 ;; This function uses a non-reentrant model
  5042 ;;
  5043                           
  5044                           
  5045                           ;psect for function _I2C_MasterSendNack
  5046  04B4                     _I2C_MasterSendNack:
  5047  04B4                     l2282:	
  5048                           ;incstack = 0
  5049                           ; Regs used in _I2C_MasterSendNack: []
  5050                           
  5051                           
  5052                           ;../src/i2c_master.c: 490:     SSP1CON2bits.ACKDT = 1;
  5053  04B4  0024               	movlb	4	; select bank4
  5054  04B5  1696               	bsf	22,5	;volatile
  5055                           
  5056                           ;../src/i2c_master.c: 491:     SSP1CON2bits.ACKEN = 1;
  5057  04B6  1616               	bsf	22,4	;volatile
  5058  04B7                     l269:
  5059  04B7  0008               	return
  5060  04B8                     __end_of_I2C_MasterSendNack:
  5061                           
  5062                           	psect	text42
  5063  04C1                     __ptext42:	
  5064 ;; *************** function _I2C_MasterStartRx *****************
  5065 ;; Defined at:
  5066 ;;		line 462 in file "../src/i2c_master.c"
  5067 ;; Parameters:    Size  Location     Type
  5068 ;;		None
  5069 ;; Auto vars:     Size  Location     Type
  5070 ;;		None
  5071 ;; Return value:  Size  Location     Type
  5072 ;;                  1    wreg      void 
  5073 ;; Registers used:
  5074 ;;		None
  5075 ;; Tracked objects:
  5076 ;;		On entry : 0/0
  5077 ;;		On exit  : 0/0
  5078 ;;		Unchanged: 0/0
  5079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5084 ;;Total ram usage:        0 bytes
  5085 ;; Hardware stack levels used:    1
  5086 ;; Hardware stack levels required when called:    3
  5087 ;; This function calls:
  5088 ;;		Nothing
  5089 ;; This function is called by:
  5090 ;;		_I2C_DO_RCEN
  5091 ;; This function uses a non-reentrant model
  5092 ;;
  5093                           
  5094                           
  5095                           ;psect for function _I2C_MasterStartRx
  5096  04C1                     _I2C_MasterStartRx:
  5097  04C1                     l2326:	
  5098                           ;incstack = 0
  5099                           ; Regs used in _I2C_MasterStartRx: []
  5100                           
  5101                           
  5102                           ;../src/i2c_master.c: 464:     SSP1CON2bits.RCEN = 1;
  5103  04C1  0024               	movlb	4	; select bank4
  5104  04C2  1596               	bsf	22,3	;volatile
  5105  04C3                     l254:
  5106  04C3  0008               	return
  5107  04C4                     __end_of_I2C_MasterStartRx:
  5108                           
  5109                           	psect	text43
  5110  03A8                     __ptext43:	
  5111 ;; *************** function _rd1RegCompleteHandler *****************
  5112 ;; Defined at:
  5113 ;;		line 37 in file "../src/i2c_master_functions.c"
  5114 ;; Parameters:    Size  Location     Type
  5115 ;;  ptr             1    1[BANK0 ] PTR void 
  5116 ;;		 -> I2C_Write1ByteRegister@data(1), I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  5117 ;; Auto vars:     Size  Location     Type
  5118 ;;		None
  5119 ;; Return value:  Size  Location     Type
  5120 ;;                  1    wreg      enum E358
  5121 ;; Registers used:
  5122 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5123 ;; Tracked objects:
  5124 ;;		On entry : 0/0
  5125 ;;		On exit  : 0/0
  5126 ;;		Unchanged: 0/0
  5127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5128 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5131 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5132 ;;Total ram usage:        1 bytes
  5133 ;; Hardware stack levels used:    1
  5134 ;; Hardware stack levels required when called:    5
  5135 ;; This function calls:
  5136 ;;		_I2C_SetBuffer
  5137 ;;		_I2C_SetDataCompleteCallback
  5138 ;; This function is called by:
  5139 ;;		_I2C_Read1ByteRegister
  5140 ;;		_I2C_DO_TX
  5141 ;;		_I2C_DO_RX
  5142 ;;		_I2C_DO_TX_EMPTY
  5143 ;;		_I2C_DO_ADDRESS_NACK
  5144 ;; This function uses a non-reentrant model
  5145 ;;
  5146                           
  5147                           
  5148                           ;psect for function _rd1RegCompleteHandler
  5149  03A8                     _rd1RegCompleteHandler:
  5150  03A8                     l2344:	
  5151                           ;incstack = 0
  5152                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  5153                           
  5154                           
  5155                           ;../src/i2c_master_functions.c: 37: static i2c_operations_t rd1RegCompleteHandler(void *
      +                          ptr);../src/i2c_master_functions.c: 38: {;../src/i2c_master_functions.c: 39:     I2C_Set
      +                          Buffer(ptr,1);
  5156  03A8  3001               	movlw	1
  5157  03A9  00F2               	movwf	I2C_SetBuffer@bufferSize
  5158  03AA  3000               	movlw	0
  5159  03AB  00F3               	movwf	I2C_SetBuffer@bufferSize+1
  5160  03AC  0020               	movlb	0	; select bank0
  5161  03AD  0842               	movf	rd1RegCompleteHandler@ptr,w
  5162  03AE  3183  23ED  3183   	fcall	_I2C_SetBuffer
  5163  03B1                     l2346:
  5164                           
  5165                           ;../src/i2c_master_functions.c: 40:     I2C_SetDataCompleteCallback(((void*)0),((void*)0
      +                          ));
  5166  03B1  3000               	movlw	0
  5167  03B2  00F7               	movwf	I2C_SetDataCompleteCallback@cb
  5168  03B3  00F8               	movwf	I2C_SetDataCompleteCallback@cb+1
  5169  03B4  01F9               	clrf	I2C_SetDataCompleteCallback@ptr
  5170  03B5  3184  240B  3183   	fcall	_I2C_SetDataCompleteCallback
  5171  03B8                     l2348:
  5172                           
  5173                           ;../src/i2c_master_functions.c: 41:     return I2C_RESTART_READ;
  5174  03B8  3002               	movlw	2
  5175  03B9                     l330:
  5176  03B9  0008               	return
  5177  03BA                     __end_of_rd1RegCompleteHandler:
  5178                           
  5179                           	psect	text44
  5180  04D9                     __ptext44:	
  5181 ;; *************** function _I2C_CallbackReturnReset *****************
  5182 ;; Defined at:
  5183 ;;		line 421 in file "../src/i2c_master.c"
  5184 ;; Parameters:    Size  Location     Type
  5185 ;;  funPtr          1    1[BANK0 ] PTR void 
  5186 ;;		 -> I2C_Write1ByteRegister@data(1), I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  5187 ;; Auto vars:     Size  Location     Type
  5188 ;;		None
  5189 ;; Return value:  Size  Location     Type
  5190 ;;                  1    wreg      enum E358
  5191 ;; Registers used:
  5192 ;;		wreg
  5193 ;; Tracked objects:
  5194 ;;		On entry : 0/0
  5195 ;;		On exit  : 0/0
  5196 ;;		Unchanged: 0/0
  5197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5198 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5201 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5202 ;;Total ram usage:        1 bytes
  5203 ;; Hardware stack levels used:    1
  5204 ;; Hardware stack levels required when called:    3
  5205 ;; This function calls:
  5206 ;;		Nothing
  5207 ;; This function is called by:
  5208 ;;		_I2C_Open
  5209 ;;		_I2C_DO_TX
  5210 ;;		_I2C_DO_RX
  5211 ;;		_I2C_DO_TX_EMPTY
  5212 ;;		_I2C_DO_ADDRESS_NACK
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           
  5216                           
  5217                           ;psect for function _I2C_CallbackReturnReset
  5218  04D9                     _I2C_CallbackReturnReset:
  5219  04D9                     l2340:	
  5220                           ;incstack = 0
  5221                           ; Regs used in _I2C_CallbackReturnReset: [wreg]
  5222                           
  5223                           
  5224                           ;../src/i2c_master.c: 421: i2c_operations_t I2C_CallbackReturnReset(void *funPtr);../src
      +                          /i2c_master.c: 422: {;../src/i2c_master.c: 423:     return I2C_RESET_LINK;
  5225  04D9  3005               	movlw	5
  5226  04DA                     l235:
  5227  04DA  0008               	return
  5228  04DB                     __end_of_I2C_CallbackReturnReset:
  5229                           
  5230                           	psect	text45
  5231  04DB                     __ptext45:	
  5232 ;; *************** function _I2C_CallbackReturnStop *****************
  5233 ;; Defined at:
  5234 ;;		line 416 in file "../src/i2c_master.c"
  5235 ;; Parameters:    Size  Location     Type
  5236 ;;  funPtr          1    1[BANK0 ] PTR void 
  5237 ;;		 -> I2C_Write1ByteRegister@data(1), I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  5238 ;; Auto vars:     Size  Location     Type
  5239 ;;		None
  5240 ;; Return value:  Size  Location     Type
  5241 ;;                  1    wreg      enum E358
  5242 ;; Registers used:
  5243 ;;		wreg
  5244 ;; Tracked objects:
  5245 ;;		On entry : 0/0
  5246 ;;		On exit  : 0/0
  5247 ;;		Unchanged: 0/0
  5248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5249 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5252 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5253 ;;Total ram usage:        1 bytes
  5254 ;; Hardware stack levels used:    1
  5255 ;; Hardware stack levels required when called:    3
  5256 ;; This function calls:
  5257 ;;		Nothing
  5258 ;; This function is called by:
  5259 ;;		_I2C_Open
  5260 ;;		_I2C_SetCallback
  5261 ;;		_I2C_DO_TX
  5262 ;;		_I2C_DO_RX
  5263 ;;		_I2C_DO_TX_EMPTY
  5264 ;;		_I2C_DO_ADDRESS_NACK
  5265 ;; This function uses a non-reentrant model
  5266 ;;
  5267                           
  5268                           
  5269                           ;psect for function _I2C_CallbackReturnStop
  5270  04DB                     _I2C_CallbackReturnStop:
  5271  04DB                     l2336:	
  5272                           ;incstack = 0
  5273                           ; Regs used in _I2C_CallbackReturnStop: [wreg]
  5274                           
  5275                           
  5276                           ;../src/i2c_master.c: 416: i2c_operations_t I2C_CallbackReturnStop(void *funPtr);../src/
      +                          i2c_master.c: 417: {;../src/i2c_master.c: 418:     return I2C_STOP;
  5277  04DB  3001               	movlw	1
  5278  04DC                     l232:
  5279  04DC  0008               	return
  5280  04DD                     __end_of_I2C_CallbackReturnStop:
  5281                           
  5282                           	psect	text46
  5283  03BA                     __ptext46:	
  5284 ;; *************** function _wr1RegCompleteHandler *****************
  5285 ;; Defined at:
  5286 ;;		line 44 in file "../src/i2c_master_functions.c"
  5287 ;; Parameters:    Size  Location     Type
  5288 ;;  ptr             1    1[BANK0 ] PTR void 
  5289 ;;		 -> I2C_Write1ByteRegister@data(1), I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  5290 ;; Auto vars:     Size  Location     Type
  5291 ;;		None
  5292 ;; Return value:  Size  Location     Type
  5293 ;;                  1    wreg      enum E358
  5294 ;; Registers used:
  5295 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5296 ;; Tracked objects:
  5297 ;;		On entry : 0/0
  5298 ;;		On exit  : 0/0
  5299 ;;		Unchanged: 0/0
  5300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5301 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5304 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5305 ;;Total ram usage:        1 bytes
  5306 ;; Hardware stack levels used:    1
  5307 ;; Hardware stack levels required when called:    5
  5308 ;; This function calls:
  5309 ;;		_I2C_SetBuffer
  5310 ;;		_I2C_SetDataCompleteCallback
  5311 ;; This function is called by:
  5312 ;;		_I2C_Write1ByteRegister
  5313 ;;		_I2C_DO_TX
  5314 ;;		_I2C_DO_RX
  5315 ;;		_I2C_DO_TX_EMPTY
  5316 ;;		_I2C_DO_ADDRESS_NACK
  5317 ;; This function uses a non-reentrant model
  5318 ;;
  5319                           
  5320                           
  5321                           ;psect for function _wr1RegCompleteHandler
  5322  03BA                     _wr1RegCompleteHandler:
  5323  03BA                     l2352:	
  5324                           ;incstack = 0
  5325                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  5326                           
  5327                           
  5328                           ;../src/i2c_master_functions.c: 44: static i2c_operations_t wr1RegCompleteHandler(void *
      +                          ptr);../src/i2c_master_functions.c: 45: {;../src/i2c_master_functions.c: 46:     I2C_Set
      +                          Buffer(ptr,1);
  5329  03BA  3001               	movlw	1
  5330  03BB  00F2               	movwf	I2C_SetBuffer@bufferSize
  5331  03BC  3000               	movlw	0
  5332  03BD  00F3               	movwf	I2C_SetBuffer@bufferSize+1
  5333  03BE  0020               	movlb	0	; select bank0
  5334  03BF  0842               	movf	wr1RegCompleteHandler@ptr,w
  5335  03C0  3183  23ED  3183   	fcall	_I2C_SetBuffer
  5336  03C3                     l2354:
  5337                           
  5338                           ;../src/i2c_master_functions.c: 47:     I2C_SetDataCompleteCallback(((void*)0),((void*)0
      +                          ));
  5339  03C3  3000               	movlw	0
  5340  03C4  00F7               	movwf	I2C_SetDataCompleteCallback@cb
  5341  03C5  00F8               	movwf	I2C_SetDataCompleteCallback@cb+1
  5342  03C6  01F9               	clrf	I2C_SetDataCompleteCallback@ptr
  5343  03C7  3184  240B  3183   	fcall	_I2C_SetDataCompleteCallback
  5344  03CA                     l2356:
  5345                           
  5346                           ;../src/i2c_master_functions.c: 48:     return I2C_CONTINUE;
  5347  03CA  3004               	movlw	4
  5348  03CB                     l333:
  5349  03CB  0008               	return
  5350  03CC                     __end_of_wr1RegCompleteHandler:
  5351                           
  5352                           	psect	text47
  5353  040B                     __ptext47:	
  5354 ;; *************** function _I2C_SetDataCompleteCallback *****************
  5355 ;; Defined at:
  5356 ;;		line 213 in file "../src/i2c_master.c"
  5357 ;; Parameters:    Size  Location     Type
  5358 ;;  cb              2    7[COMMON] PTR FTN(PTR void ,)enum 
  5359 ;;		 -> wr1RegCompleteHandler(1), rd1RegCompleteHandler(1), Absolute function(1), 
  5360 ;;  ptr             1    9[COMMON] PTR void 
  5361 ;;		 -> I2C_Write1ByteRegister@data(1), I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;		None
  5364 ;; Return value:  Size  Location     Type
  5365 ;;                  1    wreg      void 
  5366 ;; Registers used:
  5367 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5368 ;; Tracked objects:
  5369 ;;		On entry : 0/0
  5370 ;;		On exit  : 0/0
  5371 ;;		Unchanged: 0/0
  5372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5373 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5375 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5376 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5377 ;;Total ram usage:        4 bytes
  5378 ;; Hardware stack levels used:    1
  5379 ;; Hardware stack levels required when called:    4
  5380 ;; This function calls:
  5381 ;;		_I2C_SetCallback
  5382 ;; This function is called by:
  5383 ;;		_I2C_Read1ByteRegister
  5384 ;;		_I2C_Write1ByteRegister
  5385 ;;		_rd1RegCompleteHandler
  5386 ;;		_wr1RegCompleteHandler
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           
  5391                           ;psect for function _I2C_SetDataCompleteCallback
  5392  040B                     _I2C_SetDataCompleteCallback:
  5393  040B                     l2276:	
  5394                           ;incstack = 0
  5395                           ; Regs used in _I2C_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  5396                           
  5397                           
  5398                           ;../src/i2c_master.c: 213: void I2C_SetDataCompleteCallback(i2c_callback_t cb, void *ptr
      +                          );../src/i2c_master.c: 214: {;../src/i2c_master.c: 215:     I2C_SetCallback(I2C_DATA_COM
      +                          PLETE, cb, ptr);
  5399  040B  0878               	movf	I2C_SetDataCompleteCallback@cb+1,w
  5400  040C  00F3               	movwf	I2C_SetCallback@cb+1
  5401  040D  0877               	movf	I2C_SetDataCompleteCallback@cb,w
  5402  040E  00F2               	movwf	I2C_SetCallback@cb
  5403  040F  0879               	movf	I2C_SetDataCompleteCallback@ptr,w
  5404  0410  0020               	movlb	0	; select bank0
  5405  0411  00C1               	movwf	??_I2C_SetDataCompleteCallback
  5406  0412  0841               	movf	??_I2C_SetDataCompleteCallback,w
  5407  0413  00F4               	movwf	I2C_SetCallback@ptr
  5408  0414  3000               	movlw	0
  5409  0415  3182  22B1  3184   	fcall	_I2C_SetCallback
  5410  0418                     l129:
  5411  0418  0008               	return
  5412  0419                     __end_of_I2C_SetDataCompleteCallback:
  5413                           
  5414                           	psect	text48
  5415  02B1                     __ptext48:	
  5416 ;; *************** function _I2C_SetCallback *****************
  5417 ;; Defined at:
  5418 ;;		line 223 in file "../src/i2c_master.c"
  5419 ;; Parameters:    Size  Location     Type
  5420 ;;  idx             1    wreg     enum E2576
  5421 ;;  cb              2    2[COMMON] PTR FTN(PTR void ,)enum 
  5422 ;;		 -> wr1RegCompleteHandler(1), rd1RegCompleteHandler(1), Absolute function(1), 
  5423 ;;  ptr             1    4[COMMON] PTR void 
  5424 ;;		 -> I2C_Write1ByteRegister@data(1), I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  5425 ;; Auto vars:     Size  Location     Type
  5426 ;;  idx             1    6[COMMON] enum E2576
  5427 ;; Return value:  Size  Location     Type
  5428 ;;                  1    wreg      void 
  5429 ;; Registers used:
  5430 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5431 ;; Tracked objects:
  5432 ;;		On entry : 0/0
  5433 ;;		On exit  : 0/0
  5434 ;;		Unchanged: 0/0
  5435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5436 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5437 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5438 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5439 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5440 ;;Total ram usage:        5 bytes
  5441 ;; Hardware stack levels used:    1
  5442 ;; Hardware stack levels required when called:    3
  5443 ;; This function calls:
  5444 ;;		Nothing
  5445 ;; This function is called by:
  5446 ;;		_I2C_SetDataCompleteCallback
  5447 ;;		_I2C_SetAddressNackCallback
  5448 ;; This function uses a non-reentrant model
  5449 ;;
  5450                           
  5451                           
  5452                           ;psect for function _I2C_SetCallback
  5453  02B1                     _I2C_SetCallback:
  5454                           
  5455                           ;incstack = 0
  5456                           ; Regs used in _I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
  5457                           ;I2C_SetCallback@idx stored from wreg
  5458  02B1  00F6               	movwf	I2C_SetCallback@idx
  5459  02B2                     l2264:
  5460                           
  5461                           ;../src/i2c_master.c: 223: static void I2C_SetCallback(i2c_callbackIndex_t idx, i2c_call
      +                          back_t cb, void *ptr);../src/i2c_master.c: 224: {;../src/i2c_master.c: 225:     if(cb)
  5462  02B2  0872               	movf	I2C_SetCallback@cb,w
  5463  02B3  0473               	iorwf	I2C_SetCallback@cb+1,w
  5464  02B4  1903               	btfsc	3,2
  5465  02B5  2AB7               	goto	u631
  5466  02B6  2AB8               	goto	u630
  5467  02B7                     u631:
  5468  02B7  2AC9               	goto	l2268
  5469  02B8                     u630:
  5470  02B8                     l2266:
  5471                           
  5472                           ;../src/i2c_master.c: 226:     {;../src/i2c_master.c: 227:         I2C_Status.callbackTa
      +                          ble[idx] = cb;
  5473  02B8  3576               	lslf	I2C_SetCallback@idx,w
  5474  02B9  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  5475  02BA  0086               	movwf	6
  5476  02BB  0187               	clrf	7
  5477  02BC  0872               	movf	I2C_SetCallback@cb,w
  5478  02BD  3FC0               	movwi [0]fsr1
  5479  02BE  0873               	movf	I2C_SetCallback@cb+1,w
  5480  02BF  3FC1               	movwi [1]fsr1
  5481                           
  5482                           ;../src/i2c_master.c: 228:         I2C_Status.callbackPayload[idx] = ptr;
  5483  02C0  0874               	movf	I2C_SetCallback@ptr,w
  5484  02C1  00F5               	movwf	??_I2C_SetCallback
  5485  02C2  0876               	movf	I2C_SetCallback@idx,w
  5486  02C3  3E2C               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  5487  02C4  0086               	movwf	6
  5488  02C5  0187               	clrf	7
  5489  02C6  0875               	movf	??_I2C_SetCallback,w
  5490  02C7  0081               	movwf	1
  5491                           
  5492                           ;../src/i2c_master.c: 229:     }
  5493  02C8  2AD6               	goto	l137
  5494  02C9                     l2268:
  5495                           
  5496                           ;../src/i2c_master.c: 231:     {;../src/i2c_master.c: 232:         I2C_Status.callbackTa
      +                          ble[idx] = I2C_CallbackReturnStop;
  5497  02C9  3576               	lslf	I2C_SetCallback@idx,w
  5498  02CA  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  5499  02CB  0086               	movwf	6
  5500  02CC  0187               	clrf	7
  5501  02CD  30DB               	movlw	low _I2C_CallbackReturnStop
  5502  02CE  3FC0               	movwi [0]fsr1
  5503  02CF  3004               	movlw	high _I2C_CallbackReturnStop
  5504  02D0  3FC1               	movwi [1]fsr1
  5505                           
  5506                           ;../src/i2c_master.c: 233:         I2C_Status.callbackPayload[idx] = ((void*)0);
  5507  02D1  0876               	movf	I2C_SetCallback@idx,w
  5508  02D2  3E2C               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  5509  02D3  0086               	movwf	6
  5510  02D4  0187               	clrf	7
  5511  02D5  0181               	clrf	1
  5512  02D6                     l137:
  5513  02D6  0008               	return
  5514  02D7                     __end_of_I2C_SetCallback:
  5515                           
  5516                           	psect	text49
  5517  03ED                     __ptext49:	
  5518 ;; *************** function _I2C_SetBuffer *****************
  5519 ;; Defined at:
  5520 ;;		line 203 in file "../src/i2c_master.c"
  5521 ;; Parameters:    Size  Location     Type
  5522 ;;  buffer          1    wreg     PTR void 
  5523 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegist
      +er@returnValue(1), 
  5524 ;;		 -> NULL(0), 
  5525 ;;  bufferSize      2    2[COMMON] unsigned int 
  5526 ;; Auto vars:     Size  Location     Type
  5527 ;;  buffer          1    5[COMMON] PTR void 
  5528 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegist
      +er@returnValue(1), 
  5529 ;;		 -> NULL(0), 
  5530 ;; Return value:  Size  Location     Type
  5531 ;;                  1    wreg      void 
  5532 ;; Registers used:
  5533 ;;		wreg
  5534 ;; Tracked objects:
  5535 ;;		On entry : 0/0
  5536 ;;		On exit  : 0/0
  5537 ;;		Unchanged: 0/0
  5538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5539 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5540 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5541 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5542 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5543 ;;Total ram usage:        4 bytes
  5544 ;; Hardware stack levels used:    1
  5545 ;; Hardware stack levels required when called:    3
  5546 ;; This function calls:
  5547 ;;		Nothing
  5548 ;; This function is called by:
  5549 ;;		_I2C_Read1ByteRegister
  5550 ;;		_I2C_Write1ByteRegister
  5551 ;;		_rd1RegCompleteHandler
  5552 ;;		_wr1RegCompleteHandler
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556                           
  5557                           ;psect for function _I2C_SetBuffer
  5558  03ED                     _I2C_SetBuffer:
  5559                           
  5560                           ;incstack = 0
  5561                           ; Regs used in _I2C_SetBuffer: [wreg]
  5562                           ;I2C_SetBuffer@buffer stored from wreg
  5563  03ED  00F5               	movwf	I2C_SetBuffer@buffer
  5564  03EE                     l2270:
  5565                           
  5566                           ;../src/i2c_master.c: 203: void I2C_SetBuffer(void *buffer, size_t bufferSize);../src/i2
      +                          c_master.c: 204: {;../src/i2c_master.c: 205:     if(I2C_Status.bufferFree)
  5567  03EE  0020               	movlb	0	; select bank0
  5568  03EF  1DBC               	btfss	_I2C_Status+28,3
  5569  03F0  2BF2               	goto	u641
  5570  03F1  2BF3               	goto	u640
  5571  03F2                     u641:
  5572  03F2  2BFC               	goto	l126
  5573  03F3                     u640:
  5574  03F3                     l2272:
  5575                           
  5576                           ;../src/i2c_master.c: 206:     {;../src/i2c_master.c: 207:         I2C_Status.data_ptr =
      +                           buffer;
  5577  03F3  0875               	movf	I2C_SetBuffer@buffer,w
  5578  03F4  00F4               	movwf	??_I2C_SetBuffer
  5579  03F5  0874               	movf	??_I2C_SetBuffer,w
  5580  03F6  00B7               	movwf	low ((_I2C_Status| 0+23))
  5581                           
  5582                           ;../src/i2c_master.c: 208:         I2C_Status.data_length = bufferSize;
  5583  03F7  0873               	movf	I2C_SetBuffer@bufferSize+1,w
  5584  03F8  00B9               	movwf	_I2C_Status+25
  5585  03F9  0872               	movf	I2C_SetBuffer@bufferSize,w
  5586  03FA  00B8               	movwf	_I2C_Status+24
  5587  03FB                     l2274:
  5588                           
  5589                           ;../src/i2c_master.c: 209:         I2C_Status.bufferFree = 0;
  5590  03FB  11BC               	bcf	_I2C_Status+28,3
  5591  03FC                     l126:
  5592  03FC  0008               	return
  5593  03FD                     __end_of_I2C_SetBuffer:
  5594                           
  5595                           	psect	text50
  5596  04C4                     __ptext50:	
  5597 ;; *************** function _I2C_MasterStop *****************
  5598 ;; Defined at:
  5599 ;;		line 472 in file "../src/i2c_master.c"
  5600 ;; Parameters:    Size  Location     Type
  5601 ;;		None
  5602 ;; Auto vars:     Size  Location     Type
  5603 ;;		None
  5604 ;; Return value:  Size  Location     Type
  5605 ;;                  1    wreg      void 
  5606 ;; Registers used:
  5607 ;;		None
  5608 ;; Tracked objects:
  5609 ;;		On entry : 0/0
  5610 ;;		On exit  : 0/0
  5611 ;;		Unchanged: 0/0
  5612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5617 ;;Total ram usage:        0 bytes
  5618 ;; Hardware stack levels used:    1
  5619 ;; Hardware stack levels required when called:    3
  5620 ;; This function calls:
  5621 ;;		Nothing
  5622 ;; This function is called by:
  5623 ;;		_I2C_DO_SEND_STOP
  5624 ;; This function uses a non-reentrant model
  5625 ;;
  5626                           
  5627                           
  5628                           ;psect for function _I2C_MasterStop
  5629  04C4                     _I2C_MasterStop:
  5630  04C4                     l2280:	
  5631                           ;incstack = 0
  5632                           ; Regs used in _I2C_MasterStop: []
  5633                           
  5634                           
  5635                           ;../src/i2c_master.c: 474:     SSP1CON2bits.PEN = 1;
  5636  04C4  0024               	movlb	4	; select bank4
  5637  04C5  1516               	bsf	22,2	;volatile
  5638  04C6                     l260:
  5639  04C6  0008               	return
  5640  04C7                     __end_of_I2C_MasterStop:
  5641                           
  5642                           	psect	text51
  5643  04C7                     __ptext51:	
  5644 ;; *************** function _I2C_MasterEnableRestart *****************
  5645 ;; Defined at:
  5646 ;;		line 457 in file "../src/i2c_master.c"
  5647 ;; Parameters:    Size  Location     Type
  5648 ;;		None
  5649 ;; Auto vars:     Size  Location     Type
  5650 ;;		None
  5651 ;; Return value:  Size  Location     Type
  5652 ;;                  1    wreg      void 
  5653 ;; Registers used:
  5654 ;;		None
  5655 ;; Tracked objects:
  5656 ;;		On entry : 0/0
  5657 ;;		On exit  : 0/0
  5658 ;;		Unchanged: 0/0
  5659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5664 ;;Total ram usage:        0 bytes
  5665 ;; Hardware stack levels used:    1
  5666 ;; Hardware stack levels required when called:    3
  5667 ;; This function calls:
  5668 ;;		Nothing
  5669 ;; This function is called by:
  5670 ;;		_I2C_DO_SEND_RESTART_READ
  5671 ;;		_I2C_DO_SEND_RESTART_WRITE
  5672 ;;		_I2C_DO_SEND_RESTART
  5673 ;; This function uses a non-reentrant model
  5674 ;;
  5675                           
  5676                           
  5677                           ;psect for function _I2C_MasterEnableRestart
  5678  04C7                     _I2C_MasterEnableRestart:
  5679  04C7                     l2278:	
  5680                           ;incstack = 0
  5681                           ; Regs used in _I2C_MasterEnableRestart: []
  5682                           
  5683                           
  5684                           ;../src/i2c_master.c: 459:     SSP1CON2bits.RSEN = 1;
  5685  04C7  0024               	movlb	4	; select bank4
  5686  04C8  1496               	bsf	22,1	;volatile
  5687  04C9                     l251:
  5688  04C9  0008               	return
  5689  04CA                     __end_of_I2C_MasterEnableRestart:
  5690                           
  5691                           	psect	text52
  5692  04CA                     __ptext52:	
  5693 ;; *************** function _I2C_MasterStart *****************
  5694 ;; Defined at:
  5695 ;;		line 467 in file "../src/i2c_master.c"
  5696 ;; Parameters:    Size  Location     Type
  5697 ;;		None
  5698 ;; Auto vars:     Size  Location     Type
  5699 ;;		None
  5700 ;; Return value:  Size  Location     Type
  5701 ;;                  1    wreg      void 
  5702 ;; Registers used:
  5703 ;;		None
  5704 ;; Tracked objects:
  5705 ;;		On entry : 0/0
  5706 ;;		On exit  : 0/0
  5707 ;;		Unchanged: 0/0
  5708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5713 ;;Total ram usage:        0 bytes
  5714 ;; Hardware stack levels used:    1
  5715 ;; Hardware stack levels required when called:    3
  5716 ;; This function calls:
  5717 ;;		Nothing
  5718 ;; This function is called by:
  5719 ;;		_I2C_MasterOperation
  5720 ;; This function uses a non-reentrant model
  5721 ;;
  5722                           
  5723                           
  5724                           ;psect for function _I2C_MasterStart
  5725  04CA                     _I2C_MasterStart:
  5726  04CA                     l2528:	
  5727                           ;incstack = 0
  5728                           ; Regs used in _I2C_MasterStart: []
  5729                           
  5730                           
  5731                           ;../src/i2c_master.c: 469:     SSP1CON2bits.SEN = 1;
  5732  04CA  0024               	movlb	4	; select bank4
  5733  04CB  1416               	bsf	22,0	;volatile
  5734  04CC                     l257:
  5735  04CC  0008               	return
  5736  04CD                     __end_of_I2C_MasterStart:
  5737                           
  5738                           	psect	text53
  5739  0333                     __ptext53:	
  5740 ;; *************** function _I2C_Close *****************
  5741 ;; Defined at:
  5742 ;;		line 159 in file "../src/i2c_master.c"
  5743 ;; Parameters:    Size  Location     Type
  5744 ;;		None
  5745 ;; Auto vars:     Size  Location     Type
  5746 ;;  returnValue     1    3[COMMON] enum E353
  5747 ;; Return value:  Size  Location     Type
  5748 ;;                  1    wreg      enum E353
  5749 ;; Registers used:
  5750 ;;		wreg, status,2, status,0, pclath, cstack
  5751 ;; Tracked objects:
  5752 ;;		On entry : 0/0
  5753 ;;		On exit  : 0/0
  5754 ;;		Unchanged: 0/0
  5755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5757 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5758 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5759 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5760 ;;Total ram usage:        2 bytes
  5761 ;; Hardware stack levels used:    1
  5762 ;; Hardware stack levels required when called:    4
  5763 ;; This function calls:
  5764 ;;		_I2C_MasterClearIrq
  5765 ;;		_I2C_MasterClose
  5766 ;;		_I2C_MasterDisableIrq
  5767 ;; This function is called by:
  5768 ;;		_I2C_Read1ByteRegister
  5769 ;;		_I2C_Write1ByteRegister
  5770 ;; This function uses a non-reentrant model
  5771 ;;
  5772                           
  5773                           
  5774                           ;psect for function _I2C_Close
  5775  0333                     _I2C_Close:
  5776  0333                     l2590:	
  5777                           ;incstack = 0
  5778                           ; Regs used in _I2C_Close: [wreg+status,2+status,0+pclath+cstack]
  5779                           
  5780                           
  5781                           ;../src/i2c_master.c: 161:     i2c_error_t returnValue = I2C_BUSY;
  5782  0333  01F3               	clrf	I2C_Close@returnValue
  5783  0334  0AF3               	incf	I2C_Close@returnValue,f
  5784                           
  5785                           ;../src/i2c_master.c: 162:     if(!I2C_Status.busy)
  5786  0335  0020               	movlb	0	; select bank0
  5787  0336  18BC               	btfsc	_I2C_Status+28,1
  5788  0337  2B39               	goto	u751
  5789  0338  2B3A               	goto	u750
  5790  0339                     u751:
  5791  0339  2B4D               	goto	l2604
  5792  033A                     u750:
  5793  033A                     l2592:
  5794                           
  5795                           ;../src/i2c_master.c: 163:     {;../src/i2c_master.c: 164:         I2C_Status.inUse = 0;
  5796  033A  113C               	bcf	_I2C_Status+28,2
  5797  033B                     l2594:
  5798                           
  5799                           ;../src/i2c_master.c: 165:         I2C_Status.address = 0xff;
  5800  033B  30FF               	movlw	255
  5801  033C  00F2               	movwf	??_I2C_Close
  5802  033D  0872               	movf	??_I2C_Close,w
  5803  033E  00B6               	movwf	_I2C_Status+22
  5804  033F                     l2596:
  5805                           
  5806                           ;../src/i2c_master.c: 166:         I2C_MasterClearIrq();
  5807  033F  3184  24D3  3183   	fcall	_I2C_MasterClearIrq
  5808  0342                     l2598:
  5809                           
  5810                           ;../src/i2c_master.c: 167:         I2C_MasterDisableIrq();
  5811  0342  3184  24CD  3183   	fcall	_I2C_MasterDisableIrq
  5812  0345                     l2600:
  5813                           
  5814                           ;../src/i2c_master.c: 168:         I2C_MasterClose();
  5815  0345  3184  24D0  3183   	fcall	_I2C_MasterClose
  5816  0348                     l2602:
  5817                           
  5818                           ;../src/i2c_master.c: 169:         returnValue = I2C_Status.error;
  5819  0348  0020               	movlb	0	; select bank0
  5820  0349  083B               	movf	_I2C_Status+27,w
  5821  034A  00F2               	movwf	??_I2C_Close
  5822  034B  0872               	movf	??_I2C_Close,w
  5823  034C  00F3               	movwf	I2C_Close@returnValue
  5824  034D                     l2604:
  5825                           
  5826                           ;../src/i2c_master.c: 171:     return returnValue;
  5827  034D  0873               	movf	I2C_Close@returnValue,w
  5828  034E                     l113:
  5829  034E  0008               	return
  5830  034F                     __end_of_I2C_Close:
  5831                           
  5832                           	psect	text54
  5833  04CD                     __ptext54:	
  5834 ;; *************** function _I2C_MasterDisableIrq *****************
  5835 ;; Defined at:
  5836 ;;		line 494 in file "../src/i2c_master.c"
  5837 ;; Parameters:    Size  Location     Type
  5838 ;;		None
  5839 ;; Auto vars:     Size  Location     Type
  5840 ;;		None
  5841 ;; Return value:  Size  Location     Type
  5842 ;;                  1    wreg      void 
  5843 ;; Registers used:
  5844 ;;		None
  5845 ;; Tracked objects:
  5846 ;;		On entry : 0/0
  5847 ;;		On exit  : 0/0
  5848 ;;		Unchanged: 0/0
  5849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5854 ;;Total ram usage:        0 bytes
  5855 ;; Hardware stack levels used:    1
  5856 ;; Hardware stack levels required when called:    3
  5857 ;; This function calls:
  5858 ;;		Nothing
  5859 ;; This function is called by:
  5860 ;;		_I2C_Close
  5861 ;; This function uses a non-reentrant model
  5862 ;;
  5863                           
  5864                           
  5865                           ;psect for function _I2C_MasterDisableIrq
  5866  04CD                     _I2C_MasterDisableIrq:
  5867  04CD                     l1970:	
  5868                           ;incstack = 0
  5869                           ; Regs used in _I2C_MasterDisableIrq: []
  5870                           
  5871                           
  5872                           ;../src/i2c_master.c: 496:     PIE1bits.SSP1IE = 0;
  5873  04CD  0021               	movlb	1	; select bank1
  5874  04CE  1191               	bcf	17,3	;volatile
  5875  04CF                     l272:
  5876  04CF  0008               	return
  5877  04D0                     __end_of_I2C_MasterDisableIrq:
  5878                           
  5879                           	psect	text55
  5880  04D0                     __ptext55:	
  5881 ;; *************** function _I2C_MasterClose *****************
  5882 ;; Defined at:
  5883 ;;		line 441 in file "../src/i2c_master.c"
  5884 ;; Parameters:    Size  Location     Type
  5885 ;;		None
  5886 ;; Auto vars:     Size  Location     Type
  5887 ;;		None
  5888 ;; Return value:  Size  Location     Type
  5889 ;;                  1    wreg      void 
  5890 ;; Registers used:
  5891 ;;		None
  5892 ;; Tracked objects:
  5893 ;;		On entry : 0/0
  5894 ;;		On exit  : 0/0
  5895 ;;		Unchanged: 0/0
  5896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5901 ;;Total ram usage:        0 bytes
  5902 ;; Hardware stack levels used:    1
  5903 ;; Hardware stack levels required when called:    3
  5904 ;; This function calls:
  5905 ;;		Nothing
  5906 ;; This function is called by:
  5907 ;;		_I2C_Close
  5908 ;; This function uses a non-reentrant model
  5909 ;;
  5910                           
  5911                           
  5912                           ;psect for function _I2C_MasterClose
  5913  04D0                     _I2C_MasterClose:
  5914  04D0                     l1972:	
  5915                           ;incstack = 0
  5916                           ; Regs used in _I2C_MasterClose: []
  5917                           
  5918                           
  5919                           ;../src/i2c_master.c: 444:     SSP1CON1bits.SSPEN = 0;
  5920  04D0  0024               	movlb	4	; select bank4
  5921  04D1  1295               	bcf	21,5	;volatile
  5922  04D2                     l242:
  5923  04D2  0008               	return
  5924  04D3                     __end_of_I2C_MasterClose:
  5925                           
  5926                           	psect	text56
  5927  04D3                     __ptext56:	
  5928 ;; *************** function _I2C_MasterClearIrq *****************
  5929 ;; Defined at:
  5930 ;;		line 499 in file "../src/i2c_master.c"
  5931 ;; Parameters:    Size  Location     Type
  5932 ;;		None
  5933 ;; Auto vars:     Size  Location     Type
  5934 ;;		None
  5935 ;; Return value:  Size  Location     Type
  5936 ;;                  1    wreg      void 
  5937 ;; Registers used:
  5938 ;;		None
  5939 ;; Tracked objects:
  5940 ;;		On entry : 0/0
  5941 ;;		On exit  : 0/0
  5942 ;;		Unchanged: 0/0
  5943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5948 ;;Total ram usage:        0 bytes
  5949 ;; Hardware stack levels used:    1
  5950 ;; Hardware stack levels required when called:    3
  5951 ;; This function calls:
  5952 ;;		Nothing
  5953 ;; This function is called by:
  5954 ;;		_I2C_Open
  5955 ;;		_I2C_Close
  5956 ;;		_I2C_MasterFsm
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959                           
  5960                           
  5961                           ;psect for function _I2C_MasterClearIrq
  5962  04D3                     _I2C_MasterClearIrq:
  5963  04D3                     l2360:	
  5964                           ;incstack = 0
  5965                           ; Regs used in _I2C_MasterClearIrq: []
  5966                           
  5967                           
  5968                           ;../src/i2c_master.c: 501:     PIR1bits.SSP1IF = 0;
  5969  04D3  0020               	movlb	0	; select bank0
  5970  04D4  1191               	bcf	17,3	;volatile
  5971  04D5                     l275:
  5972  04D5  0008               	return
  5973  04D6                     __end_of_I2C_MasterClearIrq:
  5974                           
  5975                           	psect	text57
  5976  04DD                     __ptext57:	
  5977 ;; *************** function _Get_Master_TMR1_flag *****************
  5978 ;; Defined at:
  5979 ;;		line 11 in file "../src/vertebra_master_ldr.c"
  5980 ;; Parameters:    Size  Location     Type
  5981 ;;		None
  5982 ;; Auto vars:     Size  Location     Type
  5983 ;;		None
  5984 ;; Return value:  Size  Location     Type
  5985 ;;                  1    wreg      unsigned char 
  5986 ;; Registers used:
  5987 ;;		wreg
  5988 ;; Tracked objects:
  5989 ;;		On entry : 0/0
  5990 ;;		On exit  : 0/0
  5991 ;;		Unchanged: 0/0
  5992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5997 ;;Total ram usage:        0 bytes
  5998 ;; Hardware stack levels used:    1
  5999 ;; Hardware stack levels required when called:    3
  6000 ;; This function calls:
  6001 ;;		Nothing
  6002 ;; This function is called by:
  6003 ;;		_main
  6004 ;; This function uses a non-reentrant model
  6005 ;;
  6006                           
  6007                           
  6008                           ;psect for function _Get_Master_TMR1_flag
  6009  04DD                     _Get_Master_TMR1_flag:
  6010  04DD                     l1570:	
  6011                           ;incstack = 0
  6012                           ; Regs used in _Get_Master_TMR1_flag: [wreg]
  6013                           
  6014                           
  6015                           ;../src/vertebra_master_ldr.c: 12:     return flag;
  6016  04DD  087A               	movf	_flag,w
  6017  04DE                     l518:
  6018  04DE  0008               	return
  6019  04DF                     __end_of_Get_Master_TMR1_flag:
  6020                           
  6021                           	psect	text58
  6022  04DF                     __ptext58:	
  6023 ;; *************** function _Clear_Master_TMR1_flag *****************
  6024 ;; Defined at:
  6025 ;;		line 15 in file "../src/vertebra_master_ldr.c"
  6026 ;; Parameters:    Size  Location     Type
  6027 ;;		None
  6028 ;; Auto vars:     Size  Location     Type
  6029 ;;		None
  6030 ;; Return value:  Size  Location     Type
  6031 ;;                  1    wreg      void 
  6032 ;; Registers used:
  6033 ;;		status,2
  6034 ;; Tracked objects:
  6035 ;;		On entry : 0/0
  6036 ;;		On exit  : 0/0
  6037 ;;		Unchanged: 0/0
  6038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6043 ;;Total ram usage:        0 bytes
  6044 ;; Hardware stack levels used:    1
  6045 ;; Hardware stack levels required when called:    3
  6046 ;; This function calls:
  6047 ;;		Nothing
  6048 ;; This function is called by:
  6049 ;;		_main
  6050 ;; This function uses a non-reentrant model
  6051 ;;
  6052                           
  6053                           
  6054                           ;psect for function _Clear_Master_TMR1_flag
  6055  04DF                     _Clear_Master_TMR1_flag:
  6056  04DF                     l1582:	
  6057                           ;incstack = 0
  6058                           ; Regs used in _Clear_Master_TMR1_flag: [status,2]
  6059                           
  6060                           
  6061                           ;../src/vertebra_master_ldr.c: 16:     flag = 0;
  6062  04DF  01FA               	clrf	_flag
  6063  04E0                     l521:
  6064  04E0  0008               	return
  6065  04E1                     __end_of_Clear_Master_TMR1_flag:
  6066                           
  6067                           	psect	intentry
  6068  0004                     __pintentry:	
  6069 ;; *************** function _INTERRUPT_InterruptManager *****************
  6070 ;; Defined at:
  6071 ;;		line 4 in file "../src/interrupt_manager.c"
  6072 ;; Parameters:    Size  Location     Type
  6073 ;;		None
  6074 ;; Auto vars:     Size  Location     Type
  6075 ;;		None
  6076 ;; Return value:  Size  Location     Type
  6077 ;;                  1    wreg      void 
  6078 ;; Registers used:
  6079 ;;		wreg, status,2, status,0, pclath, cstack
  6080 ;; Tracked objects:
  6081 ;;		On entry : 0/0
  6082 ;;		On exit  : 0/0
  6083 ;;		Unchanged: 0/0
  6084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6089 ;;Total ram usage:        0 bytes
  6090 ;; Hardware stack levels used:    1
  6091 ;; Hardware stack levels required when called:    2
  6092 ;; This function calls:
  6093 ;;		_TMR1_ISR
  6094 ;; This function is called by:
  6095 ;;		Interrupt level 1
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099  0004                     _INTERRUPT_InterruptManager:
  6100                           
  6101                           ;incstack = 0
  6102  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  6103                           
  6104                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  6105  0005  3180               	pagesel	$
  6106  0006                     i1l2164:
  6107                           
  6108                           ;../src/interrupt_manager.c: 7:     if(INTCONbits.PEIE == 1)
  6109  0006  1F0B               	btfss	11,6	;volatile
  6110  0007  2809               	goto	u59_21
  6111  0008  280A               	goto	u59_20
  6112  0009                     u59_21:
  6113  0009  2817               	goto	i1l395
  6114  000A                     u59_20:
  6115  000A                     i1l2166:
  6116                           
  6117                           ;../src/interrupt_manager.c: 8:     {;../src/interrupt_manager.c: 9:         if(PIE1bits
      +                          .TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  6118  000A  0021               	movlb	1	; select bank1
  6119  000B  1C11               	btfss	17,0	;volatile
  6120  000C  280E               	goto	u60_21
  6121  000D  280F               	goto	u60_20
  6122  000E                     u60_21:
  6123  000E  2817               	goto	i1l395
  6124  000F                     u60_20:
  6125  000F                     i1l2168:
  6126  000F  0020               	movlb	0	; select bank0
  6127  0010  1C11               	btfss	17,0	;volatile
  6128  0011  2813               	goto	u61_21
  6129  0012  2814               	goto	u61_20
  6130  0013                     u61_21:
  6131  0013  2817               	goto	i1l395
  6132  0014                     u61_20:
  6133  0014                     i1l2170:
  6134                           
  6135                           ;../src/interrupt_manager.c: 10:         {;../src/interrupt_manager.c: 11:            TM
      +                          R1_ISR();
  6136  0014  3183  237D  3180   	fcall	_TMR1_ISR
  6137  0017                     i1l395:	
  6138                           ;../src/interrupt_manager.c: 12:         }
  6139                           
  6140  0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6141  0018  0009               	retfie
  6142  0019                     __end_of_INTERRUPT_InterruptManager:
  6143                           
  6144                           	psect	text60
  6145  037D                     __ptext60:	
  6146 ;; *************** function _TMR1_ISR *****************
  6147 ;; Defined at:
  6148 ;;		line 58 in file "../src/tmr1.c"
  6149 ;; Parameters:    Size  Location     Type
  6150 ;;		None
  6151 ;; Auto vars:     Size  Location     Type
  6152 ;;		None
  6153 ;; Return value:  Size  Location     Type
  6154 ;;                  1    wreg      void 
  6155 ;; Registers used:
  6156 ;;		wreg, status,2, status,0, pclath, cstack
  6157 ;; Tracked objects:
  6158 ;;		On entry : 0/0
  6159 ;;		On exit  : 0/0
  6160 ;;		Unchanged: 0/0
  6161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6166 ;;Total ram usage:        0 bytes
  6167 ;; Hardware stack levels used:    1
  6168 ;; Hardware stack levels required when called:    1
  6169 ;; This function calls:
  6170 ;;		Absolute function
  6171 ;;		_TMR1_Master_InterruptHandler
  6172 ;;		_TMR1_WriteTimer
  6173 ;; This function is called by:
  6174 ;;		_INTERRUPT_InterruptManager
  6175 ;; This function uses a non-reentrant model
  6176 ;;
  6177                           
  6178                           
  6179                           ;psect for function _TMR1_ISR
  6180  037D                     _TMR1_ISR:
  6181  037D                     i1l2148:	
  6182                           ;incstack = 0
  6183                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  6184                           
  6185                           
  6186                           ;../src/tmr1.c: 62:     PIR1bits.TMR1IF = 0;
  6187  037D  0020               	movlb	0	; select bank0
  6188  037E  1011               	bcf	17,0	;volatile
  6189  037F                     i1l2150:
  6190                           
  6191                           ;../src/tmr1.c: 63:     TMR1_WriteTimer(timer1ReloadVal);
  6192  037F  085B               	movf	_timer1ReloadVal+1,w	;volatile
  6193  0380  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  6194  0381  085A               	movf	_timer1ReloadVal,w	;volatile
  6195  0382  00F0               	movwf	TMR1_WriteTimer@timerVal
  6196  0383  3183  23CC  3183   	fcall	_TMR1_WriteTimer
  6197  0386                     i1l2152:
  6198                           
  6199                           ;../src/tmr1.c: 65:     if(TMR1_InterruptHandler)
  6200  0386  0020               	movlb	0	; select bank0
  6201  0387  0858               	movf	_TMR1_InterruptHandler,w
  6202  0388  0459               	iorwf	_TMR1_InterruptHandler+1,w
  6203  0389  1903               	btfsc	3,2
  6204  038A  2B8C               	goto	u57_21
  6205  038B  2B8D               	goto	u57_20
  6206  038C                     u57_21:
  6207  038C  2B92               	goto	i1l489
  6208  038D                     u57_20:
  6209  038D                     i1l2154:
  6210                           
  6211                           ;../src/tmr1.c: 66:     {;../src/tmr1.c: 67:         TMR1_InterruptHandler();
  6212  038D  0859               	movf	_TMR1_InterruptHandler+1,w
  6213  038E  008A               	movwf	10
  6214  038F  0858               	movf	_TMR1_InterruptHandler,w
  6215  0390  000A               	callw
  6216  0391  3183               	pagesel	$
  6217  0392                     i1l489:
  6218  0392  0008               	return
  6219  0393                     __end_of_TMR1_ISR:
  6220                           
  6221                           	psect	text61
  6222  03CC                     __ptext61:	
  6223 ;; *************** function _TMR1_WriteTimer *****************
  6224 ;; Defined at:
  6225 ;;		line 36 in file "../src/tmr1.c"
  6226 ;; Parameters:    Size  Location     Type
  6227 ;;  timerVal        2    0[COMMON] unsigned short 
  6228 ;; Auto vars:     Size  Location     Type
  6229 ;;		None
  6230 ;; Return value:  Size  Location     Type
  6231 ;;                  1    wreg      void 
  6232 ;; Registers used:
  6233 ;;		wreg, status,2
  6234 ;; Tracked objects:
  6235 ;;		On entry : 0/0
  6236 ;;		On exit  : 0/0
  6237 ;;		Unchanged: 0/0
  6238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6239 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6242 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6243 ;;Total ram usage:        2 bytes
  6244 ;; Hardware stack levels used:    1
  6245 ;; This function calls:
  6246 ;;		Nothing
  6247 ;; This function is called by:
  6248 ;;		_TMR1_ISR
  6249 ;; This function uses a non-reentrant model
  6250 ;;
  6251                           
  6252                           
  6253                           ;psect for function _TMR1_WriteTimer
  6254  03CC                     _TMR1_WriteTimer:
  6255  03CC                     i1l2100:	
  6256                           ;incstack = 0
  6257                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  6258                           
  6259                           
  6260                           ;../src/tmr1.c: 36: void TMR1_WriteTimer(uint16_t timerVal);../src/tmr1.c: 37: {;../src/
      +                          tmr1.c: 38:     if (T1CONbits.nT1SYNC == 1)
  6261  03CC  0020               	movlb	0	; select bank0
  6262  03CD  1D18               	btfss	24,2	;volatile
  6263  03CE  2BD0               	goto	u50_21
  6264  03CF  2BD1               	goto	u50_20
  6265  03D0                     u50_21:
  6266  03D0  2BD8               	goto	i1l2110
  6267  03D1                     u50_20:
  6268  03D1                     i1l2102:
  6269                           
  6270                           ;../src/tmr1.c: 39:     {;../src/tmr1.c: 41:         T1CONbits.TMR1ON = 0;
  6271  03D1  1018               	bcf	24,0	;volatile
  6272  03D2                     i1l2104:
  6273                           
  6274                           ;../src/tmr1.c: 44:         TMR1H = (timerVal >> 8);
  6275  03D2  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  6276  03D3  0097               	movwf	23	;volatile
  6277  03D4                     i1l2106:
  6278                           
  6279                           ;../src/tmr1.c: 45:         TMR1L = timerVal;
  6280  03D4  0870               	movf	TMR1_WriteTimer@timerVal,w
  6281  03D5  0096               	movwf	22	;volatile
  6282  03D6                     i1l2108:
  6283                           
  6284                           ;../src/tmr1.c: 48:         T1CONbits.TMR1ON =1;
  6285  03D6  1418               	bsf	24,0	;volatile
  6286                           
  6287                           ;../src/tmr1.c: 49:     }
  6288  03D7  2BDC               	goto	i1l485
  6289  03D8                     i1l2110:
  6290                           
  6291                           ;../src/tmr1.c: 51:     {;../src/tmr1.c: 53:         TMR1H = (timerVal >> 8);
  6292  03D8  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  6293  03D9  0097               	movwf	23	;volatile
  6294  03DA                     i1l2112:
  6295                           
  6296                           ;../src/tmr1.c: 54:         TMR1L = timerVal;
  6297  03DA  0870               	movf	TMR1_WriteTimer@timerVal,w
  6298  03DB  0096               	movwf	22	;volatile
  6299  03DC                     i1l485:
  6300  03DC  0008               	return
  6301  03DD                     __end_of_TMR1_WriteTimer:
  6302                           
  6303                           	psect	text62
  6304  04D6                     __ptext62:	
  6305 ;; *************** function _TMR1_Master_InterruptHandler *****************
  6306 ;; Defined at:
  6307 ;;		line 7 in file "../src/vertebra_master_ldr.c"
  6308 ;; Parameters:    Size  Location     Type
  6309 ;;		None
  6310 ;; Auto vars:     Size  Location     Type
  6311 ;;		None
  6312 ;; Return value:  Size  Location     Type
  6313 ;;                  1    wreg      void 
  6314 ;; Registers used:
  6315 ;;		None
  6316 ;; Tracked objects:
  6317 ;;		On entry : 0/0
  6318 ;;		On exit  : 0/0
  6319 ;;		Unchanged: 0/0
  6320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6325 ;;Total ram usage:        0 bytes
  6326 ;; Hardware stack levels used:    1
  6327 ;; This function calls:
  6328 ;;		Nothing
  6329 ;; This function is called by:
  6330 ;;		_TMR1_Initialize
  6331 ;;		_TMR1_ISR
  6332 ;; This function uses a non-reentrant model
  6333 ;;
  6334                           
  6335                           
  6336                           ;psect for function _TMR1_Master_InterruptHandler
  6337  04D6                     _TMR1_Master_InterruptHandler:
  6338  04D6                     i1l2114:	
  6339                           ;incstack = 0
  6340                           ; Regs used in _TMR1_Master_InterruptHandler: []
  6341                           
  6342                           
  6343                           ;../src/vertebra_master_ldr.c: 8:     flag = 1;
  6344  04D6  01FA               	clrf	_flag
  6345  04D7  0AFA               	incf	_flag,f
  6346  04D8                     i1l515:
  6347  04D8  0008               	return
  6348  04D9                     __end_of_TMR1_Master_InterruptHandler:
  6349  007E                     btemp	set	126	;btemp
  6350  007E                     int$flags	set	126
  6351  007E                     wtemp0	set	126
  6352                           
  6353                           	psect	config
  6354                           
  6355                           ;Config register CONFIG1 @ 0x8007
  6356                           ;	Oscillator Selection Bits
  6357                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  6358                           ;	Watchdog Timer Enable
  6359                           ;	WDTE = OFF, WDT disabled
  6360                           ;	Power-up Timer Enable
  6361                           ;	PWRTE = OFF, PWRT disabled
  6362                           ;	MCLR Pin Function Select
  6363                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  6364                           ;	Flash Program Memory Code Protection
  6365                           ;	CP = OFF, Program memory code protection is disabled
  6366                           ;	Brown-out Reset Enable
  6367                           ;	BOREN = ON, Brown-out Reset enabled
  6368                           ;	Clock Out Enable
  6369                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  6370                           ;	Internal/External Switchover Mode
  6371                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  6372                           ;	Fail-Safe Clock Monitor Enable
  6373                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  6374  8007                     	org	32775
  6375  8007  3FE4               	dw	16356
  6376                           
  6377                           ;Config register CONFIG2 @ 0x8008
  6378                           ;	Flash Memory Self-Write Protection
  6379                           ;	WRT = OFF, Write protection off
  6380                           ;	CPU System Clock Selection Bit
  6381                           ;	CPUDIV = NOCLKDIV, NO CPU system divide
  6382                           ;	USB Low SPeed Clock Selection bit
  6383                           ;	USBLSCLK = 48MHz, System clock expects 48 MHz, FS/LS USB CLKENs divide-by is set to 8.
  6384                           ;	PLL Multipler Selection Bit
  6385                           ;	PLLMULT = 4x, 4x Output Frequency Selected
  6386                           ;	PLL Enable Bit
  6387                           ;	PLLEN = DISABLED, 3x or 4x PLL Disabled
  6388                           ;	Stack Overflow/Underflow Reset Enable
  6389                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  6390                           ;	Brown-out Reset Voltage Selection
  6391                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  6392                           ;	Low-Power Brown Out Reset
  6393                           ;	LPBOR = OFF, Low-Power BOR is disabled
  6394                           ;	Low-Voltage Programming Enable
  6395                           ;	LVP = ON, Low-voltage programming enabled
  6396  8008                     	org	32776
  6397  8008  3E4F               	dw	15951

Data Sizes:
    Strings     0
    Constant    32
    Data        3
    BSS         35
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     23      63
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    I2C_DO_TX$1357$0	PTR void  size(1) Largest target is 1
		 -> I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    I2C_DO_TX$1362	PTR void  size(1) Largest target is 1
		 -> I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    I2C_DO_TX$1357	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> wr1RegCompleteHandler(), rd1RegCompleteHandler(), I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), 
		 -> Absolute function(), 

    I2C_MasterFsm$1356	const PTR FTN()enum E2558 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 1
		 -> I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 1
		 -> I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 1
		 -> I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 1
		 -> I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 1
		 -> I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    S120$0$0	PTR void  size(1) Largest target is 1
		 -> I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Master_InterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Master_InterruptHandler(), Absolute function(), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 1
		 -> I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 1
		 -> I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    I2C_SetCallback@ptr	PTR void  size(1) Largest target is 1
		 -> I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> wr1RegCompleteHandler(), rd1RegCompleteHandler(), Absolute function(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 1
		 -> I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> wr1RegCompleteHandler(), rd1RegCompleteHandler(), Absolute function(), 

    I2C_SetBuffer@buffer	PTR void  size(1) Largest target is 1
		 -> I2C_Write1ByteRegister@reg(BANK0[1]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read1ByteRegister@reg(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), 
		 -> NULL(NULL[0]), 

    S120$data_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> I2C_Write1ByteRegister@reg(BANK0[1]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read1ByteRegister@reg(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), 
		 -> NULL(NULL[0]), 

    I2C_Status.data_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> I2C_Write1ByteRegister@reg(BANK0[1]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read1ByteRegister@reg(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), 
		 -> NULL(NULL[0]), 

    S120$callbackPayload	PTR void [6] size(1) Largest target is 1
		 -> I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    I2C_Status.callbackPayload	PTR void [6] size(1) Largest target is 1
		 -> I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    S120$callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> wr1RegCompleteHandler(), rd1RegCompleteHandler(), I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), 
		 -> Absolute function(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> wr1RegCompleteHandler(), rd1RegCompleteHandler(), I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), 
		 -> Absolute function(), 

    i2c_fsmStateTable	const PTR FTN()enum E2558[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 


Critical Paths under _main in COMMON

    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _I2C_Write1ByteRegister->_I2C_SetAddressNackCallback
    _I2C_Write1ByteRegister->_I2C_SetDataCompleteCallback
    _I2C_Read1ByteRegister->_I2C_SetAddressNackCallback
    _I2C_Read1ByteRegister->_I2C_SetDataCompleteCallback
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_DO_TX->_I2C_MasterSendTxData
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_Read_All_Slave_Sensors
    _Read_All_Slave_Sensors->_Read_Slave_Sensors
    _Read_Slave_Sensors->_I2C_Read1ByteRegister
    _Read_Slave_Sensors->_I2C_Write1ByteRegister
    _I2C_MasterWrite->_I2C_MasterOperation
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   41834
             _Clear_Master_TMR1_flag
               _Get_Master_TMR1_flag
             _Read_All_Slave_Sensors
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0      98
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Read_All_Slave_Sensors                               3     3      0   41736
                                             20 BANK0      3     3      0
                 _Read_Slave_Sensors
 ---------------------------------------------------------------------------------
 (2) _Read_Slave_Sensors                                  14    14      0   41668
                                              6 BANK0     14    14      0
              _I2C_Read1ByteRegister
             _I2C_Write1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _I2C_Write1ByteRegister                               4     2      2   20709
                                              2 BANK0      4     2      2
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_Read1ByteRegister                                4     3      1   20383
                                              2 BANK0      4     3      1
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_SetAddressNackCallback                           4     1      3     999
                                              7 COMMON     3     0      3
                                              0 BANK0      1     1      0
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_Open                                             3     3      0      68
                                              2 COMMON     3     3      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterWrite                                      0     0      0   16849
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterOperation                                  3     3      0   16849
                                              9 COMMON     1     1      0
                                              0 BANK0      2     2      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (6) _I2C_Poller                                           0     0      0   16781
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterFsm                                        3     3      0   16781
                                              6 COMMON     3     3      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_TX_EMPTY                                      3     3      0    4172
                                              2 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _wr1RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_TX                                            3     3      0    4203
                                              3 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _wr1RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_ADR_WRITE                                0     0      0      31
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_ADR_READ                                 0     0      0      31
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendTxData                                 1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX                                            3     3      0    4172
                                              2 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _wr1RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_ADDRESS_NACK                                  3     3      0    4172
                                              2 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _wr1RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _wr1RegCompleteHandler                                1     0      1    2216
                                              1 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd1RegCompleteHandler                                1     0      1    1956
                                              1 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_SetDataCompleteCallback                          4     1      3    1359
                                              7 COMMON     3     0      3
                                              0 BANK0      1     1      0
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C_SetCallback                                      5     2      3     577
                                              2 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (4) _I2C_SetBuffer                                        4     2      2     566
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_CallbackReturnStop                               1     0      1       0
                                              1 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (9) _I2C_CallbackReturnReset                              1     0      1       0
                                              1 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Close                                            2     2      0      37
                                              2 COMMON     2     2      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Get_Master_TMR1_flag                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Clear_Master_TMR1_flag                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          0     0      0     164
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR1_ISR                                            0     0      0     164
                   Absolute function *
       _TMR1_Master_InterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (14) _TMR1_WriteTimer                                     2     0      2     164
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (14) _TMR1_Master_InterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Clear_Master_TMR1_flag
   _Get_Master_TMR1_flag
   _Read_All_Slave_Sensors
     _Read_Slave_Sensors
       _I2C_Read1ByteRegister
         _I2C_Close
           _I2C_MasterClearIrq
           _I2C_MasterClose
           _I2C_MasterDisableIrq
         _I2C_MasterWrite
           _I2C_MasterOperation
             _I2C_MasterStart
             _I2C_Poller
               _I2C_MasterFsm
                 _I2C_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_IDLE *
                 _I2C_DO_RCEN *
                   _I2C_MasterStartRx
                 _I2C_DO_RESET *
                 _I2C_DO_RX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_RX_NACK_RESTART *
                     _I2C_MasterSendNack
                   _I2C_DO_RX_NACK_STOP *
                     _I2C_MasterSendNack
                   _I2C_MasterGetRxData *
                   _I2C_MasterSendAck *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_RX_ACK *
                   _I2C_MasterSendAck
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_DO_SEND_ADR_READ *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_ADR_WRITE *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_DO_TX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART_READ *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_RESTART_WRITE *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterIsNack *
                   _I2C_MasterSendTxData *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterSetIrq *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_MasterClearIrq *
                 _I2C_MasterIsNack *
               _I2C_MasterWaitForEvent
         _I2C_Open
           _I2C_MasterClearIrq
           _I2C_MasterOpen
         _I2C_SetAddressNackCallback
           _I2C_SetCallback
         _I2C_SetBuffer
         _I2C_SetDataCompleteCallback
           _I2C_SetCallback
       _I2C_Write1ByteRegister
         _I2C_Close
           _I2C_MasterClearIrq
           _I2C_MasterClose
           _I2C_MasterDisableIrq
         _I2C_MasterWrite
           _I2C_MasterOperation
             _I2C_MasterStart
             _I2C_Poller
               _I2C_MasterFsm
                 _I2C_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_IDLE *
                 _I2C_DO_RCEN *
                   _I2C_MasterStartRx
                 _I2C_DO_RESET *
                 _I2C_DO_RX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_RX_NACK_RESTART *
                     _I2C_MasterSendNack
                   _I2C_DO_RX_NACK_STOP *
                     _I2C_MasterSendNack
                   _I2C_MasterGetRxData *
                   _I2C_MasterSendAck *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_RX_ACK *
                   _I2C_MasterSendAck
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_DO_SEND_ADR_READ *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_ADR_WRITE *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_DO_TX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART_READ *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_RESTART_WRITE *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterIsNack *
                   _I2C_MasterSendTxData *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterSetIrq *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_MasterClearIrq *
                 _I2C_MasterIsNack *
               _I2C_MasterWaitForEvent
         _I2C_Open
           _I2C_MasterClearIrq
           _I2C_MasterOpen
         _I2C_SetAddressNackCallback
           _I2C_SetCallback
         _I2C_SetBuffer
         _I2C_SetDataCompleteCallback
           _I2C_SetCallback
   _SYSTEM_Initialize
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_Master_InterruptHandler *
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      3F       5       78.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      4B      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      4B      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Nov 23 14:00:37 2020

                  ??_I2C_DO_SEND_ADR_READ 0072               __size_of_I2C_MasterSendNack 0004  
                      __size_of_I2C_Close 001C                        _Read_Slave_Sensors 0035  
                 ??_I2C_DO_SEND_ADR_WRITE 0073                       __size_of_I2C_Poller 000D  
                   ??_I2C_DO_SEND_RESTART 0072              __size_of_I2C_MasterOperation 001F  
                                     l200 04A1                                       l113 034E  
                                     l105 0444                                       l122 0479  
                                     l203 049C                                       l212 048D  
                                     l108 01C0                                       l132 040A  
                                     l221 047E                                       l109 01C1  
                                     l126 03FC                                       l150 04A6  
                                     l206 0497                                       l215 0488  
                                     l143 0432                                       l119 0315  
                                     l232 04DC                                       l137 02D6  
                                     l129 0418             __size_of_I2C_MasterSendTxData 0005  
                                     l153 044D                                       l209 0492  
                                     l242 04D2                                       l330 03B9  
                                     l162 0141                                       l218 0483  
                                     l251 04C9                                       l235 04DA  
                                     l227 0285                                       l147 02B0  
                                     l260 04C6                                       l156 0455  
                                     l333 03CB                                       l245 04C0  
                                     l254 04C3                                       l318 01F7  
                                     l263 0474                                       l159 0125  
                                     l175 015F                                       l239 0425  
                                     l327 022A                                       l272 04CF  
                                     l248 04AB                                       l176 0187  
                                     l521 04E0                                       l257 04CC  
                                     l193 0259                                       l281 0469  
                                     l266 04B3                                       l530 00EC  
                                     l370 04AF                                       l275 04D5  
                                     l187 045C                                       l364 03EC  
                                     l269 04B7                                       l285 046E  
                                     l518 04DE                                       l278 04BD  
                                     l367 043B                                       l536 0332  
                                     l480 0366                                       l449 03A7  
                                     l492 0468                                       u410 041E  
                                     u411 041D                                       u700 0296  
                                     u701 0295                                       u630 02B8  
                                     u710 0432                                       u631 02B7  
                                     u711 0431                                       u640 03F3  
                                     u720 02FF                                       u800 008C  
                                     u641 03F2                                       u721 02FE  
                                     u801 008B                                       u650 00F5  
                                     u730 0306                                       u810 0095  
                                     u651 00F4                                       u731 0305  
                                     u811 0094                                       u660 013E  
                                     u740 0190                                       u820 00AB  
                                     u661 013D                                       u741 018F  
                                     u821 00AA                                       u750 033A  
                                     u670 015A                                       u830 00B4  
                                     u751 0339                                       u671 0159  
                                     u831 00B3                                       u680 046E  
                                     u760 01CF                                       u840 00CA  
                                     u681 046D                                       u761 01CE  
                                     u841 00C9                                       u690 028E  
                                     u770 01F5                                       u850 00D3  
                                     u691 028D                                       u771 01F4  
                                     u851 00D2                                       u780 0204  
                                     u860 0332                                       u781 0203  
                                     u861 0331                                       u790 022A  
                                     u870 0374                                       u791 0229  
                                     u871 0373                                       u865 032E  
                     ?_Read_Slave_Sensors 0070                           _timer1ReloadVal 005A  
                  _I2C_MasterWaitForEvent 0469                                       wreg 0009  
            ??_I2C_SetAddressNackCallback 0041                    _I2C_Write1ByteRegister 01F8  
                ??_I2C_CallbackReturnStop 007A                              _I2C_DO_RESET 047A  
                                    l2302 048E                                      l2312 04B0  
                                    l2304 0491                                      l2320 0484  
                                    l2410 013E                                      l2330 0496  
                                    l2322 0487                                      l2314 047F  
                                    l2082 0463                                      l2090 0355  
                                    l2146 03DD                                      l2340 04D9  
                                    l2308 04BE                                      l2412 0140  
                                    l2404 0102                                      l2420 0142  
                                    l2316 0482                                      l2500 0261  
                                    l2092 0356                                      l2084 034F  
                                    l2270 03EE                                      l2326 04C1  
                                    l2334 04BB                                      l2406 0127  
                                    l2422 014C                                      l2510 0269  
                                    l1462 043C                                      l1470 0393  
                                    l2094 035A                                      l2086 0351  
                                    l2360 04D3                                      l2600 0345  
                                    l2280 04C4                                      l2272 03F3  
                                    l2264 02B2                                      l2352 03BA  
                                    l2336 04DB                                      l2344 03A8  
                                    l2408 0133                                      l2424 0150  
                                    l2328 0493                                      l2504 0265  
                                    l2520 0289                                      l1464 043E  
                                    l1480 039F                                      l1472 0395  
                                    l2096 035C                                      l2088 0353  
                                    l1570 04DD                                      l2602 0348  
                                    l2274 03FB                                      l2266 02B8  
                                    l2354 03C3                                      l2346 03B1  
                                    l2282 04B4                                      l2362 04A2  
                                    l2370 0445                                      l2434 0161  
                                    l2426 015A                                      l2450 0456  
                                    l2290 049D                                      l2522 028E  
                                    l2530 0426                                      l1466 0440  
                                    l1490 0436                                      l1482 03A1  
                                    l1474 0397                                      l2098 0363  
                                    l2604 034D                                      l2268 02C9  
                                    l2276 040B                                      l2356 03CA  
                                    l2348 03B8                                      l2284 046F  
                                    l2460 022E                                      l2364 04A4  
                                    l2372 0447                                      l2380 0450  
                                    l2444 0169                                      l2428 015D  
                                    l2452 0458                                      l2292 04A0  
                                    l2524 0296                                      l2532 0427  
                                    l2540 02FF                                      l2612 03FD  
                                    l2620 01DB                                      l1468 0443  
                                    l1492 0437                                      l1484 03A3  
                                    l1476 039A                                      l1582 04DF  
                                    l2278 04C7                                      l2470 0237  
                                    l2366 04A5                                      l2374 044C  
                                    l2382 0454                                      l2390 00F6  
                                    l2438 0165                                      l2454 045B  
                                    l2526 029B                                      l2518 0286  
                                    l2534 042A                                      l2550 030D  
                                    l2542 0300                                      l2622 01E3  
                                    l2614 01C4                                      l1494 0439  
                                    l1486 03A5                                      l1478 039C  
                                    l2528 04CA                                      l2288 04A8  
                                    l2464 0232                                      l2296 0498  
                                    l2536 042D                                      l2552 0310  
                                    l2544 0301                                      l2608 0475  
                                    l2560 0190                                      l2624 01EA  
                                    l2616 01C5                                      l2640 0218  
                                    l2632 01FA                                      l1488 0433  
                                    l1496 04AC                                      l2466 0235  
                                    l2458 022B                                      l2378 044E  
                                    l2394 00FA                                      l2386 00ED  
                                    l2298 049B                                      l2482 0489  
                                    l2490 047C                                      l2546 0306  
                                    l2554 0313                                      l2538 02F9  
                                    l2570 01A4                                      l2562 0194  
                                    l2626 01ED                                      l2618 01CF  
                                    l2642 021F                                      l2634 01FA  
                                    l2650 005C                                      l2476 023B  
                                    l2484 048C                                      l2492 047D  
                                    l2548 0309                                      l2580 01B4  
                                    l2572 01A5                                      l2564 0195  
                                    l2628 01F5                                      l2644 0222  
                                    l2636 0204                                      l2660 0095  
                                    l2652 0068                                      l2590 0333  
                                    l2398 00FE                                      l2582 01B9  
                                    l2574 01AA                                      l2566 0196  
                                    l2558 0189                                      l2638 0210  
                                    l2670 00CA                                      l2662 00A2  
                                    l2654 0074                                      l2646 0037  
                                    l2592 033A                                      l2488 047A  
                                    l2496 025A                                      l1960 041E  
                                    l2584 01BC                                      l2576 01AE  
                                    l2568 019F                                      l2672 00D3  
                                    l2664 00AB                                      l2656 0083  
                                    l2648 004D                                      l2680 0320  
                                    l1970 04CD                                      l2594 033B  
                                    l2498 025C                                      l1962 041F  
                                    l2586 01BF                                      l2578 01B3  
                                    l2674 00E0                                      l2666 00B4  
                                    l2658 008C                                      l2682 0325  
                                    l2690 036C                                      l1972 04D0  
                                    l2596 033F                                      l2780 0117  
                                    l1964 0421                                      l2668 00C1  
                                    l2676 0316                                      l2692 0374  
                                    l2684 0367                                      l2598 0342  
                                    l2782 024B                                      l1966 0424  
                                    l1958 0419                                      l2678 031A  
                                    l2694 0377                                      l2686 036A  
                                    l2776 027D                                      l2688 036B  
                                    l2778 0179                                      _LATA 010C  
                                    _LATC 010E                                      _WPUA 020C  
                        _estado_mov_nuevo 0040                          _estado_mov_viejo 007B  
                                    _flag 007A                                      _main 0367  
                ?_I2C_CallbackReturnReset 0042                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                          __end_of_I2C_Open 01C2  
                                    btemp 007E                      ??_Read_Slave_Sensors 0047  
                                    start 0019                ??_TMR1_SetInterruptHandler 0074  
                        ?_I2C_MasterClose 0070              __end_of_Get_Master_TMR1_flag 04DF  
     __size_of_I2C_SetAddressNackCallback 000E            __size_of_OSCILLATOR_Initialize 0009  
                        ?_I2C_MasterStart 0070                             _I2C_DO_RX_ACK 0489  
                        ?_I2C_MasterWrite 0070             __end_of_OSCILLATOR_Initialize 043C  
                                   ?_main 0070                     _I2C_Read1ByteRegister 01C2  
                                   _T1CON 0018                                     i1l515 04D8  
                                   i1l395 0017                                     i1l485 03DC  
                                   i1l489 0392              __size_of_I2C_DO_RX_NACK_STOP 0005  
                                   _TMR1H 0017                                     _TMR1L 0016  
                                   u50_20 03D1                                     u50_21 03D0  
                                   u60_20 000F                                     u60_21 000E  
                                   u61_20 0014                                     u61_21 0013  
                                   u57_20 038D                         ??_I2C_DO_TX_EMPTY 0072  
                                   u57_21 038C                                     _TRISA 008C  
                                   _TRISC 008E                                     u59_20 000A  
                                   u59_21 0009                          __end_of_TMR1_ISR 0393  
                       __end_of_I2C_DO_RX 0188                         __end_of_I2C_DO_TX 0142  
                                   _ciclo 003F                            _WDT_Initialize 04AC  
                       __end_of_I2C_Close 034F                    __size_of_I2C_MasterFsm 002B  
          I2C_MasterOperation@returnValue 0042                   _I2C_MasterEnableRestart 04C7  
                 __end_of_TMR1_Initialize 0367                                     pclath 000A  
                        ?_I2C_SetCallback 0072              I2C_SetAddressNackCallback@cb 0077  
                                   status 0003                                     wtemp0 007E  
                       ?_I2C_DO_SEND_STOP 0070                    __size_of_I2C_SetBuffer 0010  
                         _TMR1_WriteTimer 03CC                        ??_I2C_DO_SEND_STOP 0072  
                         __initialization 001B                              __end_of_main 037D  
       __size_of_I2C_DO_SEND_RESTART_READ 0005                 ?_I2C_DO_SEND_RESTART_READ 0070  
                          ?_I2C_DO_RX_ACK 0070               ?_INTERRUPT_InterruptManager 0070  
                                  ??_main 007A                         ?_I2C_MasterIsNack 0070  
                       ?_I2C_MasterSetIrq 0070                        ??_I2C_MasterIsNack 0072  
                  __end_of_WDT_Initialize 04B0                        ??_I2C_MasterSetIrq 0072  
                Read_Slave_Sensors@valor1 004C                  Read_Slave_Sensors@valor2 004D  
                Read_Slave_Sensors@valor3 004E                  Read_Slave_Sensors@valor4 004F  
         __end_of_I2C_CallbackReturnReset 04DB                                    _ACTCON 039B  
         __size_of_I2C_CallbackReturnStop 0002                                    _APFCON 011D  
           I2C_SetDataCompleteCallback@cb 0077                                    _ANSELA 018C  
                                  _ANSELC 018E                                    _BORCON 0116  
                                  _T1GCON 0019                              ??_I2C_Poller 0079  
                 TMR1_WriteTimer@timerVal 0070                                    i1l2100 03CC  
                                  i1l2102 03D1                                    i1l2110 03D8  
                                  i1l2112 03DA                                    i1l2104 03D2  
                                  i1l2114 04D6                                    i1l2106 03D4  
                                  i1l2108 03D6                                    i1l2150 037F  
                                  i1l2152 0386                                    i1l2154 038D  
                                  i1l2170 0014                                    i1l2148 037D  
                                  i1l2164 0006                                    i1l2166 000A  
                                  i1l2168 000F                                    _OSCCON 0099  
                                  _WDTCON 0097                       _I2C_MasterGetRxData 04BE  
                           _I2C_MasterFsm 0286                         I2C_SetCallback@cb 0072  
                  ?_I2C_Read1ByteRegister 0043                   __size_of_I2C_MasterOpen 000D  
                 __size_of_I2C_MasterStop 0003                   __size_of_I2C_Initialize 0009  
                           _I2C_SetBuffer 03ED                        __end_of_I2C_Poller 0433  
            __end_of_I2C_MasterDisableIrq 04D0                       _I2C_DO_ADDRESS_NACK 025A  
                    ?_I2C_MasterGetRxData 0070                                 ?_I2C_Open 0070  
      __end_of_I2C_SetAddressNackCallback 040B                _I2C_SetAddressNackCallback 03FD  
                         ?_WDT_Initialize 0070                 ??_I2C_MasterEnableRestart 0072  
TMR1_SetInterruptHandler@InterruptHandler 0072                   ?_Read_All_Slave_Sensors 0070  
                 __end_of_TMR1_WriteTimer 03DD                          ?_TMR1_Initialize 0070  
                       _SYSTEM_Initialize 03DD                   __end_of__initialization 0031  
                    _Get_Master_TMR1_flag 04DD                       _I2C_MasterOperation 02F7  
                      ?_SYSTEM_Initialize 0070                      ?_I2C_DO_ADDRESS_NACK 0070  
                          __pcstackCOMMON 0070                            ?_I2C_MasterFsm 0070  
                         ??_I2C_DO_RX_ACK 0072                              __pidataBANK0 04B8  
                  _I2C_CallbackReturnStop 04DB                       ??_SYSTEM_Initialize 0074  
                               ?_TMR1_ISR 0070                            ?_I2C_SetBuffer 0072  
                 ?_I2C_MasterWaitForEvent 0070            __size_of_I2C_DO_SEND_ADR_WRITE 0008  
      __size_of_I2C_DO_SEND_RESTART_WRITE 0005             __end_of_I2C_DO_SEND_ADR_WRITE 0456  
              ?_I2C_DO_SEND_RESTART_WRITE 0070                      ?_I2C_MasterOperation 0070  
                   ??_I2C_MasterGetRxData 0072                  ??_Clear_Master_TMR1_flag 0072  
                 ?_I2C_Write1ByteRegister 0043                            _OPTION_REGbits 0095  
                              ??_I2C_Open 0072                __end_of_I2C_MasterClearIrq 04D6  
          __end_of_Read_All_Slave_Sensors 0333                 __end_of_SYSTEM_Initialize 03ED  
                       _I2C_MasterSendAck 04B0                                __pbssBANK0 0020  
                           ??_I2C_DO_IDLE 0072                     ?_Get_Master_TMR1_flag 0070  
                           ??_I2C_DO_RCEN 0072              __end_of_I2C_MasterSendTxData 04AC  
                      ?_I2C_MasterSendAck 0070               Read_Slave_Sensors@valorLuz2 0052  
                       _I2C_MasterStartRx 04C1                     ??_I2C_DO_ADDRESS_NACK 0072  
                     _I2C_DO_RX_NACK_STOP 0484                     _rd1RegCompleteHandler 03A8  
                      ?_I2C_MasterStartRx 0070                __end_of_I2C_MasterSendNack 04B8  
                   _wr1RegCompleteHandler 03BA                                __pmaintext 0367  
                     ??_I2C_MasterSendAck 0072                  rd1RegCompleteHandler@ptr 0042  
             __end_of_I2C_DO_SEND_RESTART 0498                           _I2C_DO_TX_EMPTY 022B  
                     I2C_SetBuffer@buffer 0075                                ??_TMR1_ISR 0072  
                              __pintentry 0004            __end_of_I2C_MasterWaitForEvent 046F  
                     ??_I2C_MasterStartRx 0072             __size_of_I2C_DO_SEND_ADR_READ 0009  
        __size_of_I2C_CallbackReturnReset 0002                     ??_I2C_MasterOperation 0079  
          I2C_SetDataCompleteCallback@ptr 0079            __end_of_I2C_Write1ByteRegister 022B  
                ??_I2C_DO_RX_NACK_RESTART 0072         __end_of_I2C_DO_SEND_RESTART_WRITE 049D  
                    ?_I2C_DO_RX_NACK_STOP 0070                 __end_of_I2C_MasterSendAck 04B4  
                                 _OSCTUNE 0098                                   _SSP1ADD 0212  
                                 _SSP1BUF 0211                          ?_TMR1_WriteTimer 0070  
               __end_of_I2C_MasterStartRx 04C4                      I2C_Close@returnValue 0073  
            ?_I2C_SetDataCompleteCallback 0077                                 _I2C_DO_RX 0142  
                               _I2C_DO_TX 00ED          __end_of_I2C_DO_SEND_RESTART_READ 04A2  
            I2C_Read1ByteRegister@address 0045                                 _I2C_Close 0333  
             __size_of_Read_Slave_Sensors 00B8                      _I2C_MasterDisableIrq 04CD  
                         ??_I2C_MasterFsm 0076                       __end_of_I2C_DO_IDLE 04A7  
                     __end_of_I2C_DO_RCEN 045D                           ??_I2C_SetBuffer 0074  
                 I2C_SetBuffer@bufferSize 0072                            _I2C_MasterOpen 0419  
                          _I2C_MasterStop 04C4                            _I2C_Initialize 043C  
               __size_of_I2C_DO_SEND_STOP 0005                                   __ptext1 03DD  
                                 __ptext2 04AC                                   __ptext3 034F  
                                 __ptext4 0463                                   __ptext5 0393  
                                 __ptext6 0433                                   __ptext7 043C  
                                 __ptext8 0316                                   __ptext9 0035  
                   ??_I2C_DO_RX_NACK_STOP 0072                                 _T1CONbits 0018  
                   _OSCILLATOR_Initialize 0433           __size_of_Clear_Master_TMR1_flag 0002  
       __size_of_TMR1_SetInterruptHandler 0006                        I2C_SetCallback@idx 0076  
                __size_of_I2C_MasterClose 0003                  ??_PIN_MANAGER_Initialize 0072  
           I2C_CallbackReturnReset@funPtr 0042                 ?_TMR1_SetInterruptHandler 0072  
                      I2C_SetCallback@ptr 0074                  wr1RegCompleteHandler@ptr 0042  
               I2C_Write1ByteRegister@reg 0043                  __size_of_I2C_MasterStart 0003  
                __size_of_I2C_MasterWrite 0005                __size_of_SYSTEM_Initialize 0010  
                                 clrloop0 045E                    ??_Get_Master_TMR1_flag 0072  
                    end_of_initialization 0031                                ?_I2C_DO_RX 0070  
                              ?_I2C_DO_TX 0070                 __size_of_I2C_MasterIsNack 0006  
                              ?_I2C_Close 0070                    ?_rd1RegCompleteHandler 0042  
                 __end_of_I2C_DO_TX_EMPTY 025A                 __size_of_I2C_MasterSetIrq 0003  
                   ?_I2C_MasterDisableIrq 0070                    ?_wr1RegCompleteHandler 0042  
                __size_of_I2C_SetCallback 0026                   ??_I2C_Read1ByteRegister 0044  
                  __end_of_I2C_MasterOpen 0426                    __end_of_I2C_MasterStop 04C7  
    __end_of_TMR1_Master_InterruptHandler 04D9     __size_of_TMR1_Master_InterruptHandler 0003  
            _TMR1_Master_InterruptHandler 04D6                    __end_of_I2C_Initialize 0445  
                        ??_WDT_Initialize 0072                      _I2C_MasterSendTxData 04A7  
         __size_of_I2C_DO_RX_NACK_RESTART 0005               ?_I2C_SetAddressNackCallback 0077  
              __size_of_I2C_MasterSendAck 0004                   Read_All_Slave_Sensors@n 0056  
                       __size_of_I2C_Open 003A                __size_of_I2C_MasterStartRx 0003  
                             _I2C_DO_IDLE 04A2                               _I2C_DO_RCEN 0456  
           I2C_Write1ByteRegister@address 0046                    _Clear_Master_TMR1_flag 04DF  
                 ?_I2C_CallbackReturnStop 0042                  _I2C_DO_SEND_RESTART_READ 049D  
            I2C_CallbackReturnStop@funPtr 0042                           ?_I2C_MasterOpen 0070  
                         ?_I2C_MasterStop 0070                           ?_I2C_Initialize 0070  
                 _I2C_CallbackReturnReset 04D9                  I2C_Read1ByteRegister@reg 0043  
    __size_of_I2C_SetDataCompleteCallback 000E             ?_TMR1_Master_InterruptHandler 0070  
                       __size_of_TMR1_ISR 0016                     ?_I2C_MasterSendTxData 0070  
                  ?_OSCILLATOR_Initialize 0070               ??_I2C_DO_SEND_RESTART_WRITE 0072  
                     start_initialization 001B           __size_of_PIN_MANAGER_Initialize 0015  
                           ?_I2C_DO_RESET 0070                               ??_I2C_DO_RX 0072  
                             ??_I2C_DO_TX 0073                         ??_I2C_MasterClose 0072  
                  ??_I2C_MasterDisableIrq 0072                               ??_I2C_Close 0072  
                       ??_I2C_MasterStart 0072                         ??_I2C_MasterWrite 007A  
          __end_of_I2C_CallbackReturnStop 04DD                    _I2C_DO_RX_NACK_RESTART 047F  
                        ?_I2C_DO_TX_EMPTY 0070                        _I2C_MasterClearIrq 04D3  
                __size_of_TMR1_Initialize 0018                       ?_I2C_MasterClearIrq 0070  
             __end_of_I2C_MasterGetRxData 04C1                               __pdataBANK0 005C  
                   __end_of_I2C_DO_RX_ACK 048E                          _I2C_DO_SEND_STOP 048E  
                       ??_I2C_SetCallback 0075                       I2C_Open@returnValue 0074  
                      _I2C_MasterSendNack 04B4                  ?_I2C_MasterEnableRestart 0070  
                       _i2c_fsmStateTable 02D7                     _I2C_DO_SEND_ADR_WRITE 044E  
                             __pbssCOMMON 007A                                 ___latbits 0002  
                           __pcstackBANK0 0041                            ??_I2C_DO_RESET 0072  
                     ?_I2C_MasterSendNack 0070              __end_of_I2C_DO_SEND_ADR_READ 044E  
                    ??_I2C_MasterClearIrq 0072               __end_of_I2C_DO_ADDRESS_NACK 0286  
                             _cicloReposo 005D                          _I2C_MasterIsNack 046F  
               _I2C_DO_SEND_RESTART_WRITE 0498                          _I2C_MasterSetIrq 04BB  
                               __pnvBANK0 0058                    _PIN_MANAGER_Initialize 0393  
               ??_I2C_CallbackReturnReset 007A               __end_of_I2C_MasterOperation 0316  
                    ??_I2C_MasterSendNack 0072          __end_of_TMR1_SetInterruptHandler 0469  
                  ??_I2C_MasterSendTxData 0072                 __end_of_i2c_fsmStateTable 02F7  
            ??_INTERRUPT_InterruptManager 0072              __size_of_I2C_DO_SEND_RESTART 0005  
                 I2C_MasterOperation@read 0041                                  _I2C_Open 0188  
          ??_TMR1_Master_InterruptHandler 0070                   ??_rd1RegCompleteHandler 007A  
                 ??_wr1RegCompleteHandler 007A                __end_of_Read_Slave_Sensors 00ED  
                               clear_ram0 045D                                  _PIE1bits 0091  
                __size_of_TMR1_WriteTimer 0011       __size_of_INTERRUPT_InterruptManager 0015  
                                _PIR1bits 0011                     __end_of_I2C_MasterFsm 02B1  
             __end_of_I2C_DO_RX_NACK_STOP 0489                                  _SSP1CON1 0215  
                                _SSP1CON2 0216                                  _TMR1_ISR 037D  
         __end_of_I2C_MasterEnableRestart 04CA                                  _SSP1STAT 0214  
          __size_of_I2C_Read1ByteRegister 0036             __end_of_I2C_Read1ByteRegister 01F8  
                   __end_of_I2C_SetBuffer 03FD                         ??_TMR1_Initialize 0074  
                ??_Read_All_Slave_Sensors 0055                    ?_I2C_DO_SEND_ADR_WRITE 0070  
                I2C_MasterSendTxData@data 0072                ??_I2C_DO_SEND_RESTART_READ 0072  
                              _I2C_Poller 0426                   ?_Clear_Master_TMR1_flag 0070  
                              _I2C_Status 0020                              ?_I2C_DO_IDLE 0070  
           __size_of_Get_Master_TMR1_flag 0002                              ?_I2C_DO_RCEN 0070  
                        ??_I2C_MasterOpen 0072                          ??_I2C_MasterStop 0072  
                ??_I2C_MasterWaitForEvent 0072                          ??_I2C_Initialize 0072  
                    __end_of_I2C_DO_RESET 047F                  ??_I2C_Write1ByteRegister 0045  
                 ??_OSCILLATOR_Initialize 0072                      _I2C_DO_SEND_ADR_READ 0445  
                _TMR1_SetInterruptHandler 0463          I2C_Read1ByteRegister@returnValue 0046  
                   _TMR1_InterruptHandler 0058                           _I2C_MasterClose 04D0  
           I2C_SetAddressNackCallback@ptr 0079                           I2C_Open@address 0073  
                         _I2C_MasterStart 04CA                                  _cicloMax 005C  
                                _cicloMin 005E                           _I2C_MasterWrite 0475  
                                __ptext10 01F8                                  __ptext11 01C2  
                                __ptext20 025A                                  __ptext12 03FD  
                                __ptext21 047A                                  __ptext13 0188  
                                __ptext30 0142                                  __ptext22 047F  
                                __ptext14 0419                                  __ptext31 00ED  
                                __ptext23 0484                                  __ptext15 0475  
                                __ptext40 04BE                                  __ptext32 044E  
                                __ptext24 0489                                  __ptext16 02F7  
                                __ptext41 04B4                                  __ptext33 0445  
                                __ptext25 048E                                  __ptext17 0426  
                                __ptext50 04C4                                  __ptext42 04C1  
                                __ptext34 04A2                                  __ptext26 0493  
                                __ptext18 0469                                  __ptext51 04C7  
                                __ptext43 03A8                                  __ptext35 022B  
                                __ptext27 0498                                  __ptext19 0286  
                                __ptext60 037D                                  __ptext52 04CA  
                                __ptext44 04D9                                  __ptext36 04BB  
                                __ptext28 049D                                  __ptext61 03CC  
                                __ptext53 0333                                  __ptext45 04DB  
                                __ptext37 046F                                  __ptext29 0456  
                                __ptext62 04D6                                  __ptext54 04CD  
                                __ptext46 03BA                                  __ptext38 04A7  
                                __ptext55 04D0                                  __ptext47 040B  
                                __ptext39 04B0                                  __ptext56 04D3  
                                __ptext48 02B1                                  __ptext57 04DD  
                                __ptext49 03ED                                  __ptext58 04DF  
                            _SSP1CON1bits 0215                              _SSP1CON2bits 0216  
          __end_of_Clear_Master_TMR1_flag 04E1       __end_of_I2C_SetDataCompleteCallback 0419  
             _I2C_SetDataCompleteCallback 040B                   ?_I2C_DO_RX_NACK_RESTART 0070  
                __end_of_I2C_DO_SEND_STOP 0493                             __size_of_main 0016  
                         _I2C_SetCallback 02B1             ??_I2C_SetDataCompleteCallback 0041  
              Read_Slave_Sensors@valorLuz 0050                I2C_Write1ByteRegister@data 0044  
                                int$flags 007E                     ?_I2C_DO_SEND_ADR_READ 0070  
      __end_of_INTERRUPT_InterruptManager 0019                _INTERRUPT_InterruptManager 0004  
                       ??_TMR1_WriteTimer 0072                  __end_of_I2C_MasterIsNack 0475  
         __size_of_Read_All_Slave_Sensors 001D                  __end_of_I2C_MasterSetIrq 04BE  
                              _INTCONbits 000B            __end_of_I2C_DO_RX_NACK_RESTART 0484  
                 __size_of_WDT_Initialize 0004                                  intlevel1 0000  
                             ?_I2C_Poller 0070          __size_of_I2C_MasterEnableRestart 0003  
                 ?_PIN_MANAGER_Initialize 0070                 Read_Slave_Sensors@esclavo 0054  
                     _I2C_DO_SEND_RESTART 0493             __size_of_I2C_MasterDisableIrq 0003  
         __size_of_I2C_MasterWaitForEvent 0006           __size_of_I2C_Write1ByteRegister 0033  
                 __end_of_I2C_MasterClose 04D3                  __size_of_I2C_DO_TX_EMPTY 002F  
                 __end_of_I2C_MasterStart 04CD                   __end_of_I2C_MasterWrite 047A  
                           __pstringtext1 02D7                      ?_I2C_DO_SEND_RESTART 0070  
            __size_of_I2C_MasterGetRxData 0003               __size_of_I2C_MasterClearIrq 0003  
                 __end_of_I2C_SetCallback 02D7            __end_of_PIN_MANAGER_Initialize 03A8  
          __size_of_rd1RegCompleteHandler 0012             __end_of_rd1RegCompleteHandler 03BA  
                  __size_of_I2C_DO_RX_ACK 0005                    _Read_All_Slave_Sensors 0316  
          __size_of_wr1RegCompleteHandler 0012                     __size_of_I2C_DO_RESET 0005  
           __end_of_wr1RegCompleteHandler 03CC                     _MSSP_InterruptHandler 003D  
            __size_of_I2C_DO_ADDRESS_NACK 002C                      __size_of_I2C_DO_IDLE 0005  
                    __size_of_I2C_DO_RCEN 0007                           _TMR1_Initialize 034F  
                      __size_of_I2C_DO_RX 0046                        __size_of_I2C_DO_TX 0055  
