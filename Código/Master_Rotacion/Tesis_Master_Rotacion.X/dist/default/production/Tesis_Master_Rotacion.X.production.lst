

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Nov 23 14:00:43 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F1455
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,inline,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,inline,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,inline,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,inline,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,inline,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,inline,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	intentry,global,class=CODE,delta=2
    73                           	psect	text59,local,class=CODE,merge=1,delta=2
    74                           	psect	text60,local,class=CODE,merge=1,delta=2
    75                           	psect	text61,local,class=CODE,merge=1,delta=2
    76                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    77                           	dabs	1,0x7E,2
    78  0000                     
    79                           ; Version 2.20
    80                           ; Generated 09/04/2020 GMT
    81                           ; 
    82                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC16F1455 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  0006                     	;# 
   120  0007                     	;# 
   121  0008                     	;# 
   122  0009                     	;# 
   123  000A                     	;# 
   124  000B                     	;# 
   125  000C                     	;# 
   126  000E                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0015                     	;# 
   130  0016                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001C                     	;# 
   138  008C                     	;# 
   139  008E                     	;# 
   140  0091                     	;# 
   141  0092                     	;# 
   142  0095                     	;# 
   143  0096                     	;# 
   144  0097                     	;# 
   145  0098                     	;# 
   146  0099                     	;# 
   147  009A                     	;# 
   148  009B                     	;# 
   149  009B                     	;# 
   150  009C                     	;# 
   151  009D                     	;# 
   152  009E                     	;# 
   153  009F                     	;# 
   154  010C                     	;# 
   155  010E                     	;# 
   156  0111                     	;# 
   157  0112                     	;# 
   158  0113                     	;# 
   159  0114                     	;# 
   160  0115                     	;# 
   161  0116                     	;# 
   162  0117                     	;# 
   163  0118                     	;# 
   164  0119                     	;# 
   165  011D                     	;# 
   166  018C                     	;# 
   167  018E                     	;# 
   168  0191                     	;# 
   169  0191                     	;# 
   170  0192                     	;# 
   171  0193                     	;# 
   172  0193                     	;# 
   173  0194                     	;# 
   174  0195                     	;# 
   175  0196                     	;# 
   176  0197                     	;# 
   177  0199                     	;# 
   178  019A                     	;# 
   179  019B                     	;# 
   180  019B                     	;# 
   181  019C                     	;# 
   182  019D                     	;# 
   183  019E                     	;# 
   184  019F                     	;# 
   185  020C                     	;# 
   186  0211                     	;# 
   187  0211                     	;# 
   188  0212                     	;# 
   189  0212                     	;# 
   190  0213                     	;# 
   191  0213                     	;# 
   192  0214                     	;# 
   193  0214                     	;# 
   194  0215                     	;# 
   195  0215                     	;# 
   196  0215                     	;# 
   197  0216                     	;# 
   198  0216                     	;# 
   199  0217                     	;# 
   200  0217                     	;# 
   201  0391                     	;# 
   202  0392                     	;# 
   203  0393                     	;# 
   204  039A                     	;# 
   205  039B                     	;# 
   206  0611                     	;# 
   207  0612                     	;# 
   208  0613                     	;# 
   209  0613                     	;# 
   210  0614                     	;# 
   211  0615                     	;# 
   212  0616                     	;# 
   213  0616                     	;# 
   214  0691                     	;# 
   215  0692                     	;# 
   216  0693                     	;# 
   217  0694                     	;# 
   218  0695                     	;# 
   219  0E8E                     	;# 
   220  0E8F                     	;# 
   221  0E90                     	;# 
   222  0E91                     	;# 
   223  0E92                     	;# 
   224  0E93                     	;# 
   225  0E94                     	;# 
   226  0E94                     	;# 
   227  0E95                     	;# 
   228  0E96                     	;# 
   229  0E97                     	;# 
   230  0E98                     	;# 
   231  0E99                     	;# 
   232  0E9A                     	;# 
   233  0E9B                     	;# 
   234  0E9C                     	;# 
   235  0E9D                     	;# 
   236  0E9E                     	;# 
   237  0E9F                     	;# 
   238  0FE4                     	;# 
   239  0FE5                     	;# 
   240  0FE6                     	;# 
   241  0FE7                     	;# 
   242  0FE8                     	;# 
   243  0FE9                     	;# 
   244  0FEA                     	;# 
   245  0FEB                     	;# 
   246  0FED                     	;# 
   247  0FEE                     	;# 
   248  0FEF                     	;# 
   249  0000                     	;# 
   250  0001                     	;# 
   251  0002                     	;# 
   252  0003                     	;# 
   253  0004                     	;# 
   254  0005                     	;# 
   255  0006                     	;# 
   256  0007                     	;# 
   257  0008                     	;# 
   258  0009                     	;# 
   259  000A                     	;# 
   260  000B                     	;# 
   261  000C                     	;# 
   262  000E                     	;# 
   263  0011                     	;# 
   264  0012                     	;# 
   265  0015                     	;# 
   266  0016                     	;# 
   267  0016                     	;# 
   268  0017                     	;# 
   269  0018                     	;# 
   270  0019                     	;# 
   271  001A                     	;# 
   272  001B                     	;# 
   273  001C                     	;# 
   274  008C                     	;# 
   275  008E                     	;# 
   276  0091                     	;# 
   277  0092                     	;# 
   278  0095                     	;# 
   279  0096                     	;# 
   280  0097                     	;# 
   281  0098                     	;# 
   282  0099                     	;# 
   283  009A                     	;# 
   284  009B                     	;# 
   285  009B                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  010C                     	;# 
   291  010E                     	;# 
   292  0111                     	;# 
   293  0112                     	;# 
   294  0113                     	;# 
   295  0114                     	;# 
   296  0115                     	;# 
   297  0116                     	;# 
   298  0117                     	;# 
   299  0118                     	;# 
   300  0119                     	;# 
   301  011D                     	;# 
   302  018C                     	;# 
   303  018E                     	;# 
   304  0191                     	;# 
   305  0191                     	;# 
   306  0192                     	;# 
   307  0193                     	;# 
   308  0193                     	;# 
   309  0194                     	;# 
   310  0195                     	;# 
   311  0196                     	;# 
   312  0197                     	;# 
   313  0199                     	;# 
   314  019A                     	;# 
   315  019B                     	;# 
   316  019B                     	;# 
   317  019C                     	;# 
   318  019D                     	;# 
   319  019E                     	;# 
   320  019F                     	;# 
   321  020C                     	;# 
   322  0211                     	;# 
   323  0211                     	;# 
   324  0212                     	;# 
   325  0212                     	;# 
   326  0213                     	;# 
   327  0213                     	;# 
   328  0214                     	;# 
   329  0214                     	;# 
   330  0215                     	;# 
   331  0215                     	;# 
   332  0215                     	;# 
   333  0216                     	;# 
   334  0216                     	;# 
   335  0217                     	;# 
   336  0217                     	;# 
   337  0391                     	;# 
   338  0392                     	;# 
   339  0393                     	;# 
   340  039A                     	;# 
   341  039B                     	;# 
   342  0611                     	;# 
   343  0612                     	;# 
   344  0613                     	;# 
   345  0613                     	;# 
   346  0614                     	;# 
   347  0615                     	;# 
   348  0616                     	;# 
   349  0616                     	;# 
   350  0691                     	;# 
   351  0692                     	;# 
   352  0693                     	;# 
   353  0694                     	;# 
   354  0695                     	;# 
   355  0E8E                     	;# 
   356  0E8F                     	;# 
   357  0E90                     	;# 
   358  0E91                     	;# 
   359  0E92                     	;# 
   360  0E93                     	;# 
   361  0E94                     	;# 
   362  0E94                     	;# 
   363  0E95                     	;# 
   364  0E96                     	;# 
   365  0E97                     	;# 
   366  0E98                     	;# 
   367  0E99                     	;# 
   368  0E9A                     	;# 
   369  0E9B                     	;# 
   370  0E9C                     	;# 
   371  0E9D                     	;# 
   372  0E9E                     	;# 
   373  0E9F                     	;# 
   374  0FE4                     	;# 
   375  0FE5                     	;# 
   376  0FE6                     	;# 
   377  0FE7                     	;# 
   378  0FE8                     	;# 
   379  0FE9                     	;# 
   380  0FEA                     	;# 
   381  0FEB                     	;# 
   382  0FED                     	;# 
   383  0FEE                     	;# 
   384  0FEF                     	;# 
   385  0000                     	;# 
   386  0001                     	;# 
   387  0002                     	;# 
   388  0003                     	;# 
   389  0004                     	;# 
   390  0005                     	;# 
   391  0006                     	;# 
   392  0007                     	;# 
   393  0008                     	;# 
   394  0009                     	;# 
   395  000A                     	;# 
   396  000B                     	;# 
   397  000C                     	;# 
   398  000E                     	;# 
   399  0011                     	;# 
   400  0012                     	;# 
   401  0015                     	;# 
   402  0016                     	;# 
   403  0016                     	;# 
   404  0017                     	;# 
   405  0018                     	;# 
   406  0019                     	;# 
   407  001A                     	;# 
   408  001B                     	;# 
   409  001C                     	;# 
   410  008C                     	;# 
   411  008E                     	;# 
   412  0091                     	;# 
   413  0092                     	;# 
   414  0095                     	;# 
   415  0096                     	;# 
   416  0097                     	;# 
   417  0098                     	;# 
   418  0099                     	;# 
   419  009A                     	;# 
   420  009B                     	;# 
   421  009B                     	;# 
   422  009C                     	;# 
   423  009D                     	;# 
   424  009E                     	;# 
   425  009F                     	;# 
   426  010C                     	;# 
   427  010E                     	;# 
   428  0111                     	;# 
   429  0112                     	;# 
   430  0113                     	;# 
   431  0114                     	;# 
   432  0115                     	;# 
   433  0116                     	;# 
   434  0117                     	;# 
   435  0118                     	;# 
   436  0119                     	;# 
   437  011D                     	;# 
   438  018C                     	;# 
   439  018E                     	;# 
   440  0191                     	;# 
   441  0191                     	;# 
   442  0192                     	;# 
   443  0193                     	;# 
   444  0193                     	;# 
   445  0194                     	;# 
   446  0195                     	;# 
   447  0196                     	;# 
   448  0197                     	;# 
   449  0199                     	;# 
   450  019A                     	;# 
   451  019B                     	;# 
   452  019B                     	;# 
   453  019C                     	;# 
   454  019D                     	;# 
   455  019E                     	;# 
   456  019F                     	;# 
   457  020C                     	;# 
   458  0211                     	;# 
   459  0211                     	;# 
   460  0212                     	;# 
   461  0212                     	;# 
   462  0213                     	;# 
   463  0213                     	;# 
   464  0214                     	;# 
   465  0214                     	;# 
   466  0215                     	;# 
   467  0215                     	;# 
   468  0215                     	;# 
   469  0216                     	;# 
   470  0216                     	;# 
   471  0217                     	;# 
   472  0217                     	;# 
   473  0391                     	;# 
   474  0392                     	;# 
   475  0393                     	;# 
   476  039A                     	;# 
   477  039B                     	;# 
   478  0611                     	;# 
   479  0612                     	;# 
   480  0613                     	;# 
   481  0613                     	;# 
   482  0614                     	;# 
   483  0615                     	;# 
   484  0616                     	;# 
   485  0616                     	;# 
   486  0691                     	;# 
   487  0692                     	;# 
   488  0693                     	;# 
   489  0694                     	;# 
   490  0695                     	;# 
   491  0E8E                     	;# 
   492  0E8F                     	;# 
   493  0E90                     	;# 
   494  0E91                     	;# 
   495  0E92                     	;# 
   496  0E93                     	;# 
   497  0E94                     	;# 
   498  0E94                     	;# 
   499  0E95                     	;# 
   500  0E96                     	;# 
   501  0E97                     	;# 
   502  0E98                     	;# 
   503  0E99                     	;# 
   504  0E9A                     	;# 
   505  0E9B                     	;# 
   506  0E9C                     	;# 
   507  0E9D                     	;# 
   508  0E9E                     	;# 
   509  0E9F                     	;# 
   510  0FE4                     	;# 
   511  0FE5                     	;# 
   512  0FE6                     	;# 
   513  0FE7                     	;# 
   514  0FE8                     	;# 
   515  0FE9                     	;# 
   516  0FEA                     	;# 
   517  0FEB                     	;# 
   518  0FED                     	;# 
   519  0FEE                     	;# 
   520  0FEF                     	;# 
   521  0000                     	;# 
   522  0001                     	;# 
   523  0002                     	;# 
   524  0003                     	;# 
   525  0004                     	;# 
   526  0005                     	;# 
   527  0006                     	;# 
   528  0007                     	;# 
   529  0008                     	;# 
   530  0009                     	;# 
   531  000A                     	;# 
   532  000B                     	;# 
   533  000C                     	;# 
   534  000E                     	;# 
   535  0011                     	;# 
   536  0012                     	;# 
   537  0015                     	;# 
   538  0016                     	;# 
   539  0016                     	;# 
   540  0017                     	;# 
   541  0018                     	;# 
   542  0019                     	;# 
   543  001A                     	;# 
   544  001B                     	;# 
   545  001C                     	;# 
   546  008C                     	;# 
   547  008E                     	;# 
   548  0091                     	;# 
   549  0092                     	;# 
   550  0095                     	;# 
   551  0096                     	;# 
   552  0097                     	;# 
   553  0098                     	;# 
   554  0099                     	;# 
   555  009A                     	;# 
   556  009B                     	;# 
   557  009B                     	;# 
   558  009C                     	;# 
   559  009D                     	;# 
   560  009E                     	;# 
   561  009F                     	;# 
   562  010C                     	;# 
   563  010E                     	;# 
   564  0111                     	;# 
   565  0112                     	;# 
   566  0113                     	;# 
   567  0114                     	;# 
   568  0115                     	;# 
   569  0116                     	;# 
   570  0117                     	;# 
   571  0118                     	;# 
   572  0119                     	;# 
   573  011D                     	;# 
   574  018C                     	;# 
   575  018E                     	;# 
   576  0191                     	;# 
   577  0191                     	;# 
   578  0192                     	;# 
   579  0193                     	;# 
   580  0193                     	;# 
   581  0194                     	;# 
   582  0195                     	;# 
   583  0196                     	;# 
   584  0197                     	;# 
   585  0199                     	;# 
   586  019A                     	;# 
   587  019B                     	;# 
   588  019B                     	;# 
   589  019C                     	;# 
   590  019D                     	;# 
   591  019E                     	;# 
   592  019F                     	;# 
   593  020C                     	;# 
   594  0211                     	;# 
   595  0211                     	;# 
   596  0212                     	;# 
   597  0212                     	;# 
   598  0213                     	;# 
   599  0213                     	;# 
   600  0214                     	;# 
   601  0214                     	;# 
   602  0215                     	;# 
   603  0215                     	;# 
   604  0215                     	;# 
   605  0216                     	;# 
   606  0216                     	;# 
   607  0217                     	;# 
   608  0217                     	;# 
   609  0391                     	;# 
   610  0392                     	;# 
   611  0393                     	;# 
   612  039A                     	;# 
   613  039B                     	;# 
   614  0611                     	;# 
   615  0612                     	;# 
   616  0613                     	;# 
   617  0613                     	;# 
   618  0614                     	;# 
   619  0615                     	;# 
   620  0616                     	;# 
   621  0616                     	;# 
   622  0691                     	;# 
   623  0692                     	;# 
   624  0693                     	;# 
   625  0694                     	;# 
   626  0695                     	;# 
   627  0E8E                     	;# 
   628  0E8F                     	;# 
   629  0E90                     	;# 
   630  0E91                     	;# 
   631  0E92                     	;# 
   632  0E93                     	;# 
   633  0E94                     	;# 
   634  0E94                     	;# 
   635  0E95                     	;# 
   636  0E96                     	;# 
   637  0E97                     	;# 
   638  0E98                     	;# 
   639  0E99                     	;# 
   640  0E9A                     	;# 
   641  0E9B                     	;# 
   642  0E9C                     	;# 
   643  0E9D                     	;# 
   644  0E9E                     	;# 
   645  0E9F                     	;# 
   646  0FE4                     	;# 
   647  0FE5                     	;# 
   648  0FE6                     	;# 
   649  0FE7                     	;# 
   650  0FE8                     	;# 
   651  0FE9                     	;# 
   652  0FEA                     	;# 
   653  0FEB                     	;# 
   654  0FED                     	;# 
   655  0FEE                     	;# 
   656  0FEF                     	;# 
   657  0000                     	;# 
   658  0001                     	;# 
   659  0002                     	;# 
   660  0003                     	;# 
   661  0004                     	;# 
   662  0005                     	;# 
   663  0006                     	;# 
   664  0007                     	;# 
   665  0008                     	;# 
   666  0009                     	;# 
   667  000A                     	;# 
   668  000B                     	;# 
   669  000C                     	;# 
   670  000E                     	;# 
   671  0011                     	;# 
   672  0012                     	;# 
   673  0015                     	;# 
   674  0016                     	;# 
   675  0016                     	;# 
   676  0017                     	;# 
   677  0018                     	;# 
   678  0019                     	;# 
   679  001A                     	;# 
   680  001B                     	;# 
   681  001C                     	;# 
   682  008C                     	;# 
   683  008E                     	;# 
   684  0091                     	;# 
   685  0092                     	;# 
   686  0095                     	;# 
   687  0096                     	;# 
   688  0097                     	;# 
   689  0098                     	;# 
   690  0099                     	;# 
   691  009A                     	;# 
   692  009B                     	;# 
   693  009B                     	;# 
   694  009C                     	;# 
   695  009D                     	;# 
   696  009E                     	;# 
   697  009F                     	;# 
   698  010C                     	;# 
   699  010E                     	;# 
   700  0111                     	;# 
   701  0112                     	;# 
   702  0113                     	;# 
   703  0114                     	;# 
   704  0115                     	;# 
   705  0116                     	;# 
   706  0117                     	;# 
   707  0118                     	;# 
   708  0119                     	;# 
   709  011D                     	;# 
   710  018C                     	;# 
   711  018E                     	;# 
   712  0191                     	;# 
   713  0191                     	;# 
   714  0192                     	;# 
   715  0193                     	;# 
   716  0193                     	;# 
   717  0194                     	;# 
   718  0195                     	;# 
   719  0196                     	;# 
   720  0197                     	;# 
   721  0199                     	;# 
   722  019A                     	;# 
   723  019B                     	;# 
   724  019B                     	;# 
   725  019C                     	;# 
   726  019D                     	;# 
   727  019E                     	;# 
   728  019F                     	;# 
   729  020C                     	;# 
   730  0211                     	;# 
   731  0211                     	;# 
   732  0212                     	;# 
   733  0212                     	;# 
   734  0213                     	;# 
   735  0213                     	;# 
   736  0214                     	;# 
   737  0214                     	;# 
   738  0215                     	;# 
   739  0215                     	;# 
   740  0215                     	;# 
   741  0216                     	;# 
   742  0216                     	;# 
   743  0217                     	;# 
   744  0217                     	;# 
   745  0391                     	;# 
   746  0392                     	;# 
   747  0393                     	;# 
   748  039A                     	;# 
   749  039B                     	;# 
   750  0611                     	;# 
   751  0612                     	;# 
   752  0613                     	;# 
   753  0613                     	;# 
   754  0614                     	;# 
   755  0615                     	;# 
   756  0616                     	;# 
   757  0616                     	;# 
   758  0691                     	;# 
   759  0692                     	;# 
   760  0693                     	;# 
   761  0694                     	;# 
   762  0695                     	;# 
   763  0E8E                     	;# 
   764  0E8F                     	;# 
   765  0E90                     	;# 
   766  0E91                     	;# 
   767  0E92                     	;# 
   768  0E93                     	;# 
   769  0E94                     	;# 
   770  0E94                     	;# 
   771  0E95                     	;# 
   772  0E96                     	;# 
   773  0E97                     	;# 
   774  0E98                     	;# 
   775  0E99                     	;# 
   776  0E9A                     	;# 
   777  0E9B                     	;# 
   778  0E9C                     	;# 
   779  0E9D                     	;# 
   780  0E9E                     	;# 
   781  0E9F                     	;# 
   782  0FE4                     	;# 
   783  0FE5                     	;# 
   784  0FE6                     	;# 
   785  0FE7                     	;# 
   786  0FE8                     	;# 
   787  0FE9                     	;# 
   788  0FEA                     	;# 
   789  0FEB                     	;# 
   790  0FED                     	;# 
   791  0FEE                     	;# 
   792  0FEF                     	;# 
   793  0000                     	;# 
   794  0001                     	;# 
   795  0002                     	;# 
   796  0003                     	;# 
   797  0004                     	;# 
   798  0005                     	;# 
   799  0006                     	;# 
   800  0007                     	;# 
   801  0008                     	;# 
   802  0009                     	;# 
   803  000A                     	;# 
   804  000B                     	;# 
   805  000C                     	;# 
   806  000E                     	;# 
   807  0011                     	;# 
   808  0012                     	;# 
   809  0015                     	;# 
   810  0016                     	;# 
   811  0016                     	;# 
   812  0017                     	;# 
   813  0018                     	;# 
   814  0019                     	;# 
   815  001A                     	;# 
   816  001B                     	;# 
   817  001C                     	;# 
   818  008C                     	;# 
   819  008E                     	;# 
   820  0091                     	;# 
   821  0092                     	;# 
   822  0095                     	;# 
   823  0096                     	;# 
   824  0097                     	;# 
   825  0098                     	;# 
   826  0099                     	;# 
   827  009A                     	;# 
   828  009B                     	;# 
   829  009B                     	;# 
   830  009C                     	;# 
   831  009D                     	;# 
   832  009E                     	;# 
   833  009F                     	;# 
   834  010C                     	;# 
   835  010E                     	;# 
   836  0111                     	;# 
   837  0112                     	;# 
   838  0113                     	;# 
   839  0114                     	;# 
   840  0115                     	;# 
   841  0116                     	;# 
   842  0117                     	;# 
   843  0118                     	;# 
   844  0119                     	;# 
   845  011D                     	;# 
   846  018C                     	;# 
   847  018E                     	;# 
   848  0191                     	;# 
   849  0191                     	;# 
   850  0192                     	;# 
   851  0193                     	;# 
   852  0193                     	;# 
   853  0194                     	;# 
   854  0195                     	;# 
   855  0196                     	;# 
   856  0197                     	;# 
   857  0199                     	;# 
   858  019A                     	;# 
   859  019B                     	;# 
   860  019B                     	;# 
   861  019C                     	;# 
   862  019D                     	;# 
   863  019E                     	;# 
   864  019F                     	;# 
   865  020C                     	;# 
   866  0211                     	;# 
   867  0211                     	;# 
   868  0212                     	;# 
   869  0212                     	;# 
   870  0213                     	;# 
   871  0213                     	;# 
   872  0214                     	;# 
   873  0214                     	;# 
   874  0215                     	;# 
   875  0215                     	;# 
   876  0215                     	;# 
   877  0216                     	;# 
   878  0216                     	;# 
   879  0217                     	;# 
   880  0217                     	;# 
   881  0391                     	;# 
   882  0392                     	;# 
   883  0393                     	;# 
   884  039A                     	;# 
   885  039B                     	;# 
   886  0611                     	;# 
   887  0612                     	;# 
   888  0613                     	;# 
   889  0613                     	;# 
   890  0614                     	;# 
   891  0615                     	;# 
   892  0616                     	;# 
   893  0616                     	;# 
   894  0691                     	;# 
   895  0692                     	;# 
   896  0693                     	;# 
   897  0694                     	;# 
   898  0695                     	;# 
   899  0E8E                     	;# 
   900  0E8F                     	;# 
   901  0E90                     	;# 
   902  0E91                     	;# 
   903  0E92                     	;# 
   904  0E93                     	;# 
   905  0E94                     	;# 
   906  0E94                     	;# 
   907  0E95                     	;# 
   908  0E96                     	;# 
   909  0E97                     	;# 
   910  0E98                     	;# 
   911  0E99                     	;# 
   912  0E9A                     	;# 
   913  0E9B                     	;# 
   914  0E9C                     	;# 
   915  0E9D                     	;# 
   916  0E9E                     	;# 
   917  0E9F                     	;# 
   918  0FE4                     	;# 
   919  0FE5                     	;# 
   920  0FE6                     	;# 
   921  0FE7                     	;# 
   922  0FE8                     	;# 
   923  0FE9                     	;# 
   924  0FEA                     	;# 
   925  0FEB                     	;# 
   926  0FED                     	;# 
   927  0FEE                     	;# 
   928  0FEF                     	;# 
   929  0000                     	;# 
   930  0001                     	;# 
   931  0002                     	;# 
   932  0003                     	;# 
   933  0004                     	;# 
   934  0005                     	;# 
   935  0006                     	;# 
   936  0007                     	;# 
   937  0008                     	;# 
   938  0009                     	;# 
   939  000A                     	;# 
   940  000B                     	;# 
   941  000C                     	;# 
   942  000E                     	;# 
   943  0011                     	;# 
   944  0012                     	;# 
   945  0015                     	;# 
   946  0016                     	;# 
   947  0016                     	;# 
   948  0017                     	;# 
   949  0018                     	;# 
   950  0019                     	;# 
   951  001A                     	;# 
   952  001B                     	;# 
   953  001C                     	;# 
   954  008C                     	;# 
   955  008E                     	;# 
   956  0091                     	;# 
   957  0092                     	;# 
   958  0095                     	;# 
   959  0096                     	;# 
   960  0097                     	;# 
   961  0098                     	;# 
   962  0099                     	;# 
   963  009A                     	;# 
   964  009B                     	;# 
   965  009B                     	;# 
   966  009C                     	;# 
   967  009D                     	;# 
   968  009E                     	;# 
   969  009F                     	;# 
   970  010C                     	;# 
   971  010E                     	;# 
   972  0111                     	;# 
   973  0112                     	;# 
   974  0113                     	;# 
   975  0114                     	;# 
   976  0115                     	;# 
   977  0116                     	;# 
   978  0117                     	;# 
   979  0118                     	;# 
   980  0119                     	;# 
   981  011D                     	;# 
   982  018C                     	;# 
   983  018E                     	;# 
   984  0191                     	;# 
   985  0191                     	;# 
   986  0192                     	;# 
   987  0193                     	;# 
   988  0193                     	;# 
   989  0194                     	;# 
   990  0195                     	;# 
   991  0196                     	;# 
   992  0197                     	;# 
   993  0199                     	;# 
   994  019A                     	;# 
   995  019B                     	;# 
   996  019B                     	;# 
   997  019C                     	;# 
   998  019D                     	;# 
   999  019E                     	;# 
  1000  019F                     	;# 
  1001  020C                     	;# 
  1002  0211                     	;# 
  1003  0211                     	;# 
  1004  0212                     	;# 
  1005  0212                     	;# 
  1006  0213                     	;# 
  1007  0213                     	;# 
  1008  0214                     	;# 
  1009  0214                     	;# 
  1010  0215                     	;# 
  1011  0215                     	;# 
  1012  0215                     	;# 
  1013  0216                     	;# 
  1014  0216                     	;# 
  1015  0217                     	;# 
  1016  0217                     	;# 
  1017  0391                     	;# 
  1018  0392                     	;# 
  1019  0393                     	;# 
  1020  039A                     	;# 
  1021  039B                     	;# 
  1022  0611                     	;# 
  1023  0612                     	;# 
  1024  0613                     	;# 
  1025  0613                     	;# 
  1026  0614                     	;# 
  1027  0615                     	;# 
  1028  0616                     	;# 
  1029  0616                     	;# 
  1030  0691                     	;# 
  1031  0692                     	;# 
  1032  0693                     	;# 
  1033  0694                     	;# 
  1034  0695                     	;# 
  1035  0E8E                     	;# 
  1036  0E8F                     	;# 
  1037  0E90                     	;# 
  1038  0E91                     	;# 
  1039  0E92                     	;# 
  1040  0E93                     	;# 
  1041  0E94                     	;# 
  1042  0E94                     	;# 
  1043  0E95                     	;# 
  1044  0E96                     	;# 
  1045  0E97                     	;# 
  1046  0E98                     	;# 
  1047  0E99                     	;# 
  1048  0E9A                     	;# 
  1049  0E9B                     	;# 
  1050  0E9C                     	;# 
  1051  0E9D                     	;# 
  1052  0E9E                     	;# 
  1053  0E9F                     	;# 
  1054  0FE4                     	;# 
  1055  0FE5                     	;# 
  1056  0FE6                     	;# 
  1057  0FE7                     	;# 
  1058  0FE8                     	;# 
  1059  0FE9                     	;# 
  1060  0FEA                     	;# 
  1061  0FEB                     	;# 
  1062  0FED                     	;# 
  1063  0FEE                     	;# 
  1064  0FEF                     	;# 
  1065                           
  1066                           	psect	idataBANK0
  1067  0442                     __pidataBANK0:
  1068                           
  1069                           ;initializer for _cicloMax
  1070  0442  344B               	retlw	75
  1071                           
  1072                           ;initializer for _cicloReposo
  1073  0443  342D               	retlw	45
  1074                           
  1075                           ;initializer for _cicloMin
  1076  0444  340F               	retlw	15
  1077                           
  1078                           	psect	stringtext1
  1079  0266                     __pstringtext1:
  1080  0266                     _i2c_fsmStateTable:
  1081  0266  342C               	retlw	low _I2C_DO_IDLE
  1082  0267  3404               	retlw	high _I2C_DO_IDLE
  1083  0268  34CF               	retlw	low _I2C_DO_SEND_ADR_READ
  1084  0269  3403               	retlw	high _I2C_DO_SEND_ADR_READ
  1085  026A  34D8               	retlw	low _I2C_DO_SEND_ADR_WRITE
  1086  026B  3403               	retlw	high _I2C_DO_SEND_ADR_WRITE
  1087  026C  34B2               	retlw	low _I2C_DO_TX
  1088  026D  3400               	retlw	high _I2C_DO_TX
  1089  026E  3407               	retlw	low _I2C_DO_RX
  1090  026F  3401               	retlw	high _I2C_DO_RX
  1091  0270  34E0               	retlw	low _I2C_DO_RCEN
  1092  0271  3403               	retlw	high _I2C_DO_RCEN
  1093  0272  34BA               	retlw	low _I2C_DO_TX_EMPTY
  1094  0273  3401               	retlw	high _I2C_DO_TX_EMPTY
  1095  0274  3427               	retlw	low _I2C_DO_SEND_RESTART_READ
  1096  0275  3404               	retlw	high _I2C_DO_SEND_RESTART_READ
  1097  0276  3422               	retlw	low _I2C_DO_SEND_RESTART_WRITE
  1098  0277  3404               	retlw	high _I2C_DO_SEND_RESTART_WRITE
  1099  0278  341D               	retlw	low _I2C_DO_SEND_RESTART
  1100  0279  3404               	retlw	high _I2C_DO_SEND_RESTART
  1101  027A  3418               	retlw	low _I2C_DO_SEND_STOP
  1102  027B  3404               	retlw	high _I2C_DO_SEND_STOP
  1103  027C  3413               	retlw	low _I2C_DO_RX_ACK
  1104  027D  3404               	retlw	high _I2C_DO_RX_ACK
  1105  027E  340E               	retlw	low _I2C_DO_RX_NACK_STOP
  1106  027F  3404               	retlw	high _I2C_DO_RX_NACK_STOP
  1107  0280  3409               	retlw	low _I2C_DO_RX_NACK_RESTART
  1108  0281  3404               	retlw	high _I2C_DO_RX_NACK_RESTART
  1109  0282  3404               	retlw	low _I2C_DO_RESET
  1110  0283  3404               	retlw	high _I2C_DO_RESET
  1111  0284  34E9               	retlw	low _I2C_DO_ADDRESS_NACK
  1112  0285  3401               	retlw	high _I2C_DO_ADDRESS_NACK
  1113  0286                     __end_of_i2c_fsmStateTable:
  1114                           
  1115                           	psect	nvBANK0
  1116  0052                     __pnvBANK0:
  1117  0052                     _TMR1_InterruptHandler:
  1118  0052                     	ds	2
  1119  0054                     _timer1ReloadVal:
  1120  0054                     	ds	2
  1121  0018                     _T1CONbits	set	24
  1122  0018                     _T1CON	set	24
  1123  0016                     _TMR1L	set	22
  1124  0017                     _TMR1H	set	23
  1125  0019                     _T1GCON	set	25
  1126  000B                     _INTCONbits	set	11
  1127  0011                     _PIR1bits	set	17
  1128  0095                     _OPTION_REGbits	set	149
  1129  008E                     _TRISC	set	142
  1130  008C                     _TRISA	set	140
  1131  0097                     _WDTCON	set	151
  1132  0098                     _OSCTUNE	set	152
  1133  0099                     _OSCCON	set	153
  1134  0091                     _PIE1bits	set	145
  1135  011D                     _APFCON	set	285
  1136  010E                     _LATC	set	270
  1137  010C                     _LATA	set	268
  1138  0116                     _BORCON	set	278
  1139  018C                     _ANSELA	set	396
  1140  018E                     _ANSELC	set	398
  1141  020C                     _WPUA	set	524
  1142  0216                     _SSP1CON2bits	set	534
  1143  0211                     _SSP1BUF	set	529
  1144  0215                     _SSP1CON1bits	set	533
  1145  0212                     _SSP1ADD	set	530
  1146  0216                     _SSP1CON2	set	534
  1147  0215                     _SSP1CON1	set	533
  1148  0214                     _SSP1STAT	set	532
  1149  039B                     _ACTCON	set	923
  1150                           
  1151                           	psect	cinit
  1152  001B                     start_initialization:	
  1153                           ; #config settings
  1154                           
  1155  001B                     __initialization:
  1156                           
  1157                           ; Initialize objects allocated to BANK0
  1158  001B  3184  2442  3180   	fcall	__pidataBANK0	;fetch initializer
  1159  001E  00D6               	movwf	__pdataBANK0& (0+127)
  1160  001F  3184  2443  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1161  0022  00D7               	movwf	(__pdataBANK0+1)& (0+127)
  1162  0023  3184  2444  3180   	fcall	__pidataBANK0+2	;fetch initializer
  1163  0026  00D8               	movwf	(__pdataBANK0+2)& (0+127)
  1164                           
  1165                           ; Clear objects allocated to COMMON
  1166  0027  01FB               	clrf	__pbssCOMMON& (0+127)
  1167                           
  1168                           ; Clear objects allocated to BANK0
  1169  0028  3020               	movlw	low __pbssBANK0
  1170  0029  0084               	movwf	4
  1171  002A  3000               	movlw	high __pbssBANK0
  1172  002B  0085               	movwf	5
  1173  002C  3022               	movlw	34
  1174  002D  3183  23E7  3180   	fcall	clear_ram0
  1175  0030                     end_of_initialization:	
  1176                           ;End of C runtime variable initialization code
  1177                           
  1178  0030                     __end_of__initialization:
  1179  0030  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1180  0031  0020               	movlb	0
  1181  0032  3182  2AF6         	ljmp	_main	;jump to C main() function
  1182                           
  1183                           	psect	bssCOMMON
  1184  007B                     __pbssCOMMON:
  1185  007B                     _flag:
  1186  007B                     	ds	1
  1187                           
  1188                           	psect	bssBANK0
  1189  0020                     __pbssBANK0:
  1190  0020                     _I2C_Status:
  1191  0020                     	ds	29
  1192  003D                     _MSSP_InterruptHandler:
  1193  003D                     	ds	2
  1194  003F                     _ciclo:
  1195  003F                     	ds	1
  1196  0040                     _estado_mov_nuevo:
  1197  0040                     	ds	1
  1198  0041                     _estado_mov_viejo:
  1199  0041                     	ds	1
  1200                           
  1201                           	psect	dataBANK0
  1202  0056                     __pdataBANK0:
  1203  0056                     _cicloMax:
  1204  0056                     	ds	1
  1205  0057                     _cicloReposo:
  1206  0057                     	ds	1
  1207  0058                     _cicloMin:
  1208  0058                     	ds	1
  1209                           
  1210                           	psect	clrtext
  1211  03E7                     clear_ram0:	
  1212                           ;	Called with FSR0 containing the base address, and
  1213                           ;	WREG with the size to clear
  1214                           
  1215  03E7  0064               	clrwdt	;clear the watchdog before getting into this loop
  1216  03E8                     clrloop0:
  1217  03E8  0180               	clrf	0	;clear RAM location pointed to by FSR
  1218  03E9  3101               	addfsr 0,1
  1219  03EA  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1220  03EB  2BE8               	goto	clrloop0	;have we reached the end yet?
  1221  03EC  3400               	retlw	0	;all done for this memory range, return
  1222                           
  1223                           	psect	cstackCOMMON
  1224  0070                     __pcstackCOMMON:
  1225  0070                     ?_I2C_DO_IDLE:
  1226  0070                     ?_I2C_DO_SEND_ADR_READ:	
  1227                           ; 1 bytes @ 0x0
  1228                           
  1229  0070                     ?_I2C_DO_SEND_ADR_WRITE:	
  1230                           ; 1 bytes @ 0x0
  1231                           
  1232  0070                     ?_I2C_DO_TX:	
  1233                           ; 1 bytes @ 0x0
  1234                           
  1235  0070                     ?_I2C_DO_RX:	
  1236                           ; 1 bytes @ 0x0
  1237                           
  1238  0070                     ?_I2C_DO_RCEN:	
  1239                           ; 1 bytes @ 0x0
  1240                           
  1241  0070                     ?_I2C_DO_TX_EMPTY:	
  1242                           ; 1 bytes @ 0x0
  1243                           
  1244  0070                     ?_I2C_DO_SEND_RESTART_READ:	
  1245                           ; 1 bytes @ 0x0
  1246                           
  1247  0070                     ?_I2C_DO_SEND_RESTART_WRITE:	
  1248                           ; 1 bytes @ 0x0
  1249                           
  1250  0070                     ?_I2C_DO_SEND_RESTART:	
  1251                           ; 1 bytes @ 0x0
  1252                           
  1253  0070                     ?_I2C_DO_SEND_STOP:	
  1254                           ; 1 bytes @ 0x0
  1255                           
  1256  0070                     ?_I2C_DO_RX_ACK:	
  1257                           ; 1 bytes @ 0x0
  1258                           
  1259  0070                     ?_I2C_DO_RX_NACK_STOP:	
  1260                           ; 1 bytes @ 0x0
  1261                           
  1262  0070                     ?_I2C_DO_RX_NACK_RESTART:	
  1263                           ; 1 bytes @ 0x0
  1264                           
  1265  0070                     ?_I2C_DO_RESET:	
  1266                           ; 1 bytes @ 0x0
  1267                           
  1268  0070                     ?_I2C_DO_ADDRESS_NACK:	
  1269                           ; 1 bytes @ 0x0
  1270                           
  1271  0070                     ?_I2C_MasterClearIrq:	
  1272                           ; 1 bytes @ 0x0
  1273                           
  1274  0070                     ?_I2C_MasterOpen:	
  1275                           ; 1 bytes @ 0x0
  1276                           
  1277  0070                     ?_I2C_MasterDisableIrq:	
  1278                           ; 1 bytes @ 0x0
  1279                           
  1280  0070                     ?_I2C_MasterClose:	
  1281                           ; 1 bytes @ 0x0
  1282                           
  1283  0070                     ?_I2C_MasterStart:	
  1284                           ; 1 bytes @ 0x0
  1285                           
  1286  0070                     ?_I2C_Poller:	
  1287                           ; 1 bytes @ 0x0
  1288                           
  1289  0070                     ?_I2C_MasterWaitForEvent:	
  1290                           ; 1 bytes @ 0x0
  1291                           
  1292  0070                     ?_I2C_MasterFsm:	
  1293                           ; 1 bytes @ 0x0
  1294                           
  1295  0070                     ?_I2C_MasterIsNack:	
  1296                           ; 1 bytes @ 0x0
  1297                           
  1298  0070                     ?_I2C_MasterSendTxData:	
  1299                           ; 1 bytes @ 0x0
  1300                           
  1301  0070                     ?_I2C_MasterGetRxData:	
  1302                           ; 1 bytes @ 0x0
  1303                           
  1304  0070                     ?_I2C_MasterSendAck:	
  1305                           ; 1 bytes @ 0x0
  1306                           
  1307  0070                     ?_I2C_MasterStartRx:	
  1308                           ; 1 bytes @ 0x0
  1309                           
  1310  0070                     ?_I2C_MasterSetIrq:	
  1311                           ; 1 bytes @ 0x0
  1312                           
  1313  0070                     ?_I2C_MasterEnableRestart:	
  1314                           ; 1 bytes @ 0x0
  1315                           
  1316  0070                     ?_I2C_MasterStop:	
  1317                           ; 1 bytes @ 0x0
  1318                           
  1319  0070                     ?_I2C_MasterSendNack:	
  1320                           ; 1 bytes @ 0x0
  1321                           
  1322  0070                     ?_PIN_MANAGER_Initialize:	
  1323                           ; 1 bytes @ 0x0
  1324                           
  1325  0070                     ?_OSCILLATOR_Initialize:	
  1326                           ; 1 bytes @ 0x0
  1327                           
  1328  0070                     ?_WDT_Initialize:	
  1329                           ; 1 bytes @ 0x0
  1330                           
  1331  0070                     ?_TMR1_Initialize:	
  1332                           ; 1 bytes @ 0x0
  1333                           
  1334  0070                     ?_TMR1_ISR:	
  1335                           ; 1 bytes @ 0x0
  1336                           
  1337  0070                     ?_Get_Master_TMR1_flag:	
  1338                           ; 1 bytes @ 0x0
  1339                           
  1340  0070                     ?_Rotar_All_Slaves:	
  1341                           ; 1 bytes @ 0x0
  1342                           
  1343  0070                     ?_Clear_Master_TMR1_flag:	
  1344                           ; 1 bytes @ 0x0
  1345                           
  1346  0070                     ?_TMR1_Master_InterruptHandler:	
  1347                           ; 1 bytes @ 0x0
  1348                           
  1349  0070                     ??_TMR1_Master_InterruptHandler:	
  1350                           ; 1 bytes @ 0x0
  1351                           
  1352  0070                     ?_I2C_Initialize:	
  1353                           ; 1 bytes @ 0x0
  1354                           
  1355  0070                     ?_I2C_Open:	
  1356                           ; 1 bytes @ 0x0
  1357                           
  1358  0070                     ?_I2C_Close:	
  1359                           ; 1 bytes @ 0x0
  1360                           
  1361  0070                     ?_I2C_MasterOperation:	
  1362                           ; 1 bytes @ 0x0
  1363                           
  1364  0070                     ?_I2C_MasterWrite:	
  1365                           ; 1 bytes @ 0x0
  1366                           
  1367  0070                     ?_SYSTEM_Initialize:	
  1368                           ; 1 bytes @ 0x0
  1369                           
  1370  0070                     ?_INTERRUPT_InterruptManager:	
  1371                           ; 1 bytes @ 0x0
  1372                           
  1373  0070                     ?_main:	
  1374                           ; 1 bytes @ 0x0
  1375                           
  1376  0070                     ?_TMR1_WriteTimer:	
  1377                           ; 1 bytes @ 0x0
  1378                           
  1379  0070                     ?_Rotar_Slave:	
  1380                           ; 1 bytes @ 0x0
  1381                           
  1382  0070                     TMR1_WriteTimer@timerVal:	
  1383                           ; 1 bytes @ 0x0
  1384                           
  1385                           
  1386                           ; 2 bytes @ 0x0
  1387  0070                     	ds	2
  1388  0072                     ??_I2C_DO_IDLE:
  1389  0072                     ??_I2C_DO_SEND_ADR_READ:	
  1390                           ; 1 bytes @ 0x2
  1391                           
  1392  0072                     ??_I2C_DO_RX:	
  1393                           ; 1 bytes @ 0x2
  1394                           
  1395  0072                     ??_I2C_DO_RCEN:	
  1396                           ; 1 bytes @ 0x2
  1397                           
  1398  0072                     ??_I2C_DO_TX_EMPTY:	
  1399                           ; 1 bytes @ 0x2
  1400                           
  1401  0072                     ??_I2C_DO_SEND_RESTART_READ:	
  1402                           ; 1 bytes @ 0x2
  1403                           
  1404  0072                     ??_I2C_DO_SEND_RESTART_WRITE:	
  1405                           ; 1 bytes @ 0x2
  1406                           
  1407  0072                     ??_I2C_DO_SEND_RESTART:	
  1408                           ; 1 bytes @ 0x2
  1409                           
  1410  0072                     ??_I2C_DO_SEND_STOP:	
  1411                           ; 1 bytes @ 0x2
  1412                           
  1413  0072                     ??_I2C_DO_RX_ACK:	
  1414                           ; 1 bytes @ 0x2
  1415                           
  1416  0072                     ??_I2C_DO_RX_NACK_STOP:	
  1417                           ; 1 bytes @ 0x2
  1418                           
  1419  0072                     ??_I2C_DO_RX_NACK_RESTART:	
  1420                           ; 1 bytes @ 0x2
  1421                           
  1422  0072                     ??_I2C_DO_RESET:	
  1423                           ; 1 bytes @ 0x2
  1424                           
  1425  0072                     ??_I2C_DO_ADDRESS_NACK:	
  1426                           ; 1 bytes @ 0x2
  1427                           
  1428  0072                     ??_I2C_MasterClearIrq:	
  1429                           ; 1 bytes @ 0x2
  1430                           
  1431  0072                     ??_I2C_MasterOpen:	
  1432                           ; 1 bytes @ 0x2
  1433                           
  1434  0072                     ??_I2C_MasterDisableIrq:	
  1435                           ; 1 bytes @ 0x2
  1436                           
  1437  0072                     ??_I2C_MasterClose:	
  1438                           ; 1 bytes @ 0x2
  1439                           
  1440  0072                     ??_I2C_MasterStart:	
  1441                           ; 1 bytes @ 0x2
  1442                           
  1443  0072                     ?_I2C_SetCallback:	
  1444                           ; 1 bytes @ 0x2
  1445                           
  1446  0072                     ??_I2C_MasterWaitForEvent:	
  1447                           ; 1 bytes @ 0x2
  1448                           
  1449  0072                     ??_I2C_MasterIsNack:	
  1450                           ; 1 bytes @ 0x2
  1451                           
  1452  0072                     ??_I2C_MasterSendTxData:	
  1453                           ; 1 bytes @ 0x2
  1454                           
  1455  0072                     ??_I2C_MasterGetRxData:	
  1456                           ; 1 bytes @ 0x2
  1457                           
  1458  0072                     ??_I2C_MasterSendAck:	
  1459                           ; 1 bytes @ 0x2
  1460                           
  1461  0072                     ??_I2C_MasterStartRx:	
  1462                           ; 1 bytes @ 0x2
  1463                           
  1464  0072                     ??_I2C_MasterSetIrq:	
  1465                           ; 1 bytes @ 0x2
  1466                           
  1467  0072                     ??_I2C_MasterEnableRestart:	
  1468                           ; 1 bytes @ 0x2
  1469                           
  1470  0072                     ??_I2C_MasterStop:	
  1471                           ; 1 bytes @ 0x2
  1472                           
  1473  0072                     ??_I2C_MasterSendNack:	
  1474                           ; 1 bytes @ 0x2
  1475                           
  1476  0072                     ??_PIN_MANAGER_Initialize:	
  1477                           ; 1 bytes @ 0x2
  1478                           
  1479  0072                     ??_OSCILLATOR_Initialize:	
  1480                           ; 1 bytes @ 0x2
  1481                           
  1482  0072                     ??_WDT_Initialize:	
  1483                           ; 1 bytes @ 0x2
  1484                           
  1485  0072                     ??_TMR1_ISR:	
  1486                           ; 1 bytes @ 0x2
  1487                           
  1488  0072                     ??_Get_Master_TMR1_flag:	
  1489                           ; 1 bytes @ 0x2
  1490                           
  1491  0072                     ??_Clear_Master_TMR1_flag:	
  1492                           ; 1 bytes @ 0x2
  1493                           
  1494  0072                     ?_TMR1_SetInterruptHandler:	
  1495                           ; 1 bytes @ 0x2
  1496                           
  1497  0072                     ??_I2C_Initialize:	
  1498                           ; 1 bytes @ 0x2
  1499                           
  1500  0072                     ??_I2C_Open:	
  1501                           ; 1 bytes @ 0x2
  1502                           
  1503  0072                     ??_I2C_Close:	
  1504                           ; 1 bytes @ 0x2
  1505                           
  1506  0072                     ?_I2C_SetBuffer:	
  1507                           ; 1 bytes @ 0x2
  1508                           
  1509  0072                     ??_INTERRUPT_InterruptManager:	
  1510                           ; 1 bytes @ 0x2
  1511                           
  1512  0072                     ??_TMR1_WriteTimer:	
  1513                           ; 1 bytes @ 0x2
  1514                           
  1515  0072                     I2C_MasterSendTxData@data:	
  1516                           ; 1 bytes @ 0x2
  1517                           
  1518  0072                     I2C_SetBuffer@bufferSize:	
  1519                           ; 1 bytes @ 0x2
  1520                           
  1521  0072                     I2C_SetCallback@cb:	
  1522                           ; 2 bytes @ 0x2
  1523                           
  1524  0072                     TMR1_SetInterruptHandler@InterruptHandler:	
  1525                           ; 2 bytes @ 0x2
  1526                           
  1527                           
  1528                           ; 2 bytes @ 0x2
  1529  0072                     	ds	1
  1530  0073                     ??_I2C_DO_SEND_ADR_WRITE:
  1531  0073                     ??_I2C_DO_TX:	
  1532                           ; 1 bytes @ 0x3
  1533                           
  1534  0073                     I2C_Open@address:	
  1535                           ; 1 bytes @ 0x3
  1536                           
  1537  0073                     I2C_Close@returnValue:	
  1538                           ; 1 bytes @ 0x3
  1539                           
  1540                           
  1541                           ; 1 bytes @ 0x3
  1542  0073                     	ds	1
  1543  0074                     ??_TMR1_Initialize:
  1544  0074                     ??_TMR1_SetInterruptHandler:	
  1545                           ; 1 bytes @ 0x4
  1546                           
  1547  0074                     ??_I2C_SetBuffer:	
  1548                           ; 1 bytes @ 0x4
  1549                           
  1550  0074                     ??_SYSTEM_Initialize:	
  1551                           ; 1 bytes @ 0x4
  1552                           
  1553  0074                     I2C_Open@returnValue:	
  1554                           ; 1 bytes @ 0x4
  1555                           
  1556  0074                     I2C_SetCallback@ptr:	
  1557                           ; 1 bytes @ 0x4
  1558                           
  1559                           
  1560                           ; 1 bytes @ 0x4
  1561  0074                     	ds	1
  1562  0075                     ??_I2C_SetCallback:
  1563  0075                     I2C_SetBuffer@buffer:	
  1564                           ; 1 bytes @ 0x5
  1565                           
  1566                           
  1567                           ; 1 bytes @ 0x5
  1568  0075                     	ds	1
  1569  0076                     ??_I2C_MasterFsm:
  1570  0076                     I2C_SetCallback@idx:	
  1571                           ; 1 bytes @ 0x6
  1572                           
  1573                           
  1574                           ; 1 bytes @ 0x6
  1575  0076                     	ds	1
  1576  0077                     ?_I2C_SetDataCompleteCallback:
  1577  0077                     ?_I2C_SetAddressNackCallback:	
  1578                           ; 1 bytes @ 0x7
  1579                           
  1580  0077                     I2C_SetDataCompleteCallback@cb:	
  1581                           ; 1 bytes @ 0x7
  1582                           
  1583  0077                     I2C_SetAddressNackCallback@cb:	
  1584                           ; 2 bytes @ 0x7
  1585                           
  1586                           
  1587                           ; 2 bytes @ 0x7
  1588  0077                     	ds	2
  1589  0079                     ??_I2C_Poller:
  1590  0079                     ??_I2C_MasterOperation:	
  1591                           ; 1 bytes @ 0x9
  1592                           
  1593  0079                     I2C_SetDataCompleteCallback@ptr:	
  1594                           ; 1 bytes @ 0x9
  1595                           
  1596  0079                     I2C_SetAddressNackCallback@ptr:	
  1597                           ; 1 bytes @ 0x9
  1598                           
  1599                           
  1600                           ; 1 bytes @ 0x9
  1601  0079                     	ds	1
  1602  007A                     ??_I2C_MasterWrite:
  1603  007A                     ??_I2C_SetDataCompleteCallback:	
  1604                           ; 1 bytes @ 0xA
  1605                           
  1606  007A                     ??_I2C_SetAddressNackCallback:	
  1607                           ; 1 bytes @ 0xA
  1608                           
  1609                           
  1610                           ; 1 bytes @ 0xA
  1611  007A                     	ds	1
  1612  007B                     ??_I2C_CallbackReturnStop:
  1613  007B                     ??_I2C_CallbackReturnReset:	
  1614                           ; 1 bytes @ 0xB
  1615                           
  1616  007B                     ??_wr1RegCompleteHandler:	
  1617                           ; 1 bytes @ 0xB
  1618                           
  1619  007B                     ??_main:	
  1620                           ; 1 bytes @ 0xB
  1621                           
  1622                           
  1623                           	psect	cstackBANK0
  1624  0042                     __pcstackBANK0:	
  1625                           ; 1 bytes @ 0xB
  1626                           
  1627  0042                     ?_I2C_CallbackReturnStop:
  1628  0042                     ?_I2C_CallbackReturnReset:	
  1629                           ; 1 bytes @ 0x0
  1630                           
  1631  0042                     ?_wr1RegCompleteHandler:	
  1632                           ; 1 bytes @ 0x0
  1633                           
  1634  0042                     I2C_MasterOperation@read:	
  1635                           ; 1 bytes @ 0x0
  1636                           
  1637  0042                     I2C_CallbackReturnStop@funPtr:	
  1638                           ; 1 bytes @ 0x0
  1639                           
  1640  0042                     I2C_CallbackReturnReset@funPtr:	
  1641                           ; 1 bytes @ 0x0
  1642                           
  1643  0042                     wr1RegCompleteHandler@ptr:	
  1644                           ; 1 bytes @ 0x0
  1645                           
  1646                           
  1647                           ; 1 bytes @ 0x0
  1648  0042                     	ds	1
  1649  0043                     I2C_MasterOperation@returnValue:
  1650                           
  1651                           ; 1 bytes @ 0x1
  1652  0043                     	ds	1
  1653  0044                     ?_I2C_Write1ByteRegister:
  1654  0044                     I2C_Write1ByteRegister@reg:	
  1655                           ; 1 bytes @ 0x2
  1656                           
  1657                           
  1658                           ; 1 bytes @ 0x2
  1659  0044                     	ds	1
  1660  0045                     I2C_Write1ByteRegister@data:
  1661                           
  1662                           ; 1 bytes @ 0x3
  1663  0045                     	ds	1
  1664  0046                     ??_I2C_Write1ByteRegister:
  1665                           
  1666                           ; 1 bytes @ 0x4
  1667  0046                     	ds	1
  1668  0047                     I2C_Write1ByteRegister@address:
  1669                           
  1670                           ; 1 bytes @ 0x5
  1671  0047                     	ds	1
  1672  0048                     ?_SetServo:
  1673  0048                     SetServo@ciclo:	
  1674                           ; 1 bytes @ 0x6
  1675                           
  1676                           
  1677                           ; 1 bytes @ 0x6
  1678  0048                     	ds	1
  1679  0049                     ??_SetServo:
  1680                           
  1681                           ; 1 bytes @ 0x7
  1682  0049                     	ds	2
  1683  004B                     SetServo@slave:
  1684                           
  1685                           ; 1 bytes @ 0x9
  1686  004B                     	ds	1
  1687  004C                     ??_Rotar_Slave:
  1688                           
  1689                           ; 1 bytes @ 0xA
  1690  004C                     	ds	2
  1691  004E                     Rotar_Slave@esclavo:
  1692                           
  1693                           ; 1 bytes @ 0xC
  1694  004E                     	ds	1
  1695  004F                     ??_Rotar_All_Slaves:
  1696                           
  1697                           ; 1 bytes @ 0xD
  1698  004F                     	ds	1
  1699  0050                     Rotar_All_Slaves@n:
  1700                           
  1701                           ; 2 bytes @ 0xE
  1702  0050                     	ds	2
  1703                           
  1704                           	psect	maintext
  1705  02F6                     __pmaintext:	
  1706 ;;
  1707 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1708 ;;
  1709 ;; *************** function _main *****************
  1710 ;; Defined at:
  1711 ;;		line 14 in file "../src/main.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;		None
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;		None
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      void 
  1718 ;; Registers used:
  1719 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1720 ;; Tracked objects:
  1721 ;;		On entry : B1F/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1729 ;;Total ram usage:        0 bytes
  1730 ;; Hardware stack levels required when called:   15
  1731 ;; This function calls:
  1732 ;;		_Clear_Master_TMR1_flag
  1733 ;;		_Get_Master_TMR1_flag
  1734 ;;		_Rotar_All_Slaves
  1735 ;;		_SYSTEM_Initialize
  1736 ;; This function is called by:
  1737 ;;		Startup code after reset
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           
  1742                           ;psect for function _main
  1743  02F6                     _main:
  1744  02F6                     l2676:	
  1745                           ;incstack = 0
  1746                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1747                           
  1748                           
  1749                           ;../src/main.c: 17:     SYSTEM_Initialize();
  1750  02F6  3183  235A  3182   	fcall	_SYSTEM_Initialize
  1751  02F9                     l2678:
  1752                           
  1753                           ;../src/main.c: 20:     (INTCONbits.GIE = 1);
  1754  02F9  178B               	bsf	11,7	;volatile
  1755  02FA                     l2680:
  1756                           
  1757                           ;../src/main.c: 23:     (INTCONbits.PEIE = 1);
  1758  02FA  170B               	bsf	11,6	;volatile
  1759  02FB                     l2682:
  1760                           
  1761                           ;../src/main.c: 27:     {;../src/main.c: 28:          if (Get_Master_TMR1_flag())
  1762  02FB  3184  2467  3182   	fcall	_Get_Master_TMR1_flag
  1763  02FE  3A00               	xorlw	0
  1764  02FF  1903               	skipnz
  1765  0300  2B02               	goto	u841
  1766  0301  2B03               	goto	u840
  1767  0302                     u841:
  1768  0302  2AFB               	goto	l2682
  1769  0303                     u840:
  1770  0303                     l2684:
  1771                           
  1772                           ;../src/main.c: 29:         {;../src/main.c: 30:              Rotar_All_Slaves();
  1773  0303  3182  22A5  3182   	fcall	_Rotar_All_Slaves
  1774  0306                     l2686:
  1775                           
  1776                           ;../src/main.c: 31:              Clear_Master_TMR1_flag();
  1777  0306  3184  2469  3182   	fcall	_Clear_Master_TMR1_flag
  1778  0309  2AFB               	goto	l2682
  1779  030A  3180  2819         	ljmp	start
  1780  030C                     __end_of_main:
  1781                           
  1782                           	psect	text1
  1783  035A                     __ptext1:	
  1784 ;; *************** function _SYSTEM_Initialize *****************
  1785 ;; Defined at:
  1786 ;;		line 4 in file "../src/init.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;		None
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;		None
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  1    wreg      void 
  1793 ;; Registers used:
  1794 ;;		wreg, status,2, status,0, pclath, cstack
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1804 ;;Total ram usage:        0 bytes
  1805 ;; Hardware stack levels used:    1
  1806 ;; Hardware stack levels required when called:    5
  1807 ;; This function calls:
  1808 ;;		_I2C_Initialize
  1809 ;;		_OSCILLATOR_Initialize
  1810 ;;		_PIN_MANAGER_Initialize
  1811 ;;		_TMR1_Initialize
  1812 ;;		_WDT_Initialize
  1813 ;; This function is called by:
  1814 ;;		_main
  1815 ;; This function uses a non-reentrant model
  1816 ;;
  1817                           
  1818                           
  1819                           ;psect for function _SYSTEM_Initialize
  1820  035A                     _SYSTEM_Initialize:
  1821  035A                     l2126:	
  1822                           ;incstack = 0
  1823                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1824                           
  1825                           
  1826                           ;../src/init.c: 6:     I2C_Initialize();
  1827  035A  3183  23C6  3183   	fcall	_I2C_Initialize
  1828                           
  1829                           ;../src/init.c: 7:     PIN_MANAGER_Initialize();
  1830  035D  3183  2322  3183   	fcall	_PIN_MANAGER_Initialize
  1831                           
  1832                           ;../src/init.c: 8:     OSCILLATOR_Initialize();
  1833  0360  3183  23BD  3183   	fcall	_OSCILLATOR_Initialize
  1834                           
  1835                           ;../src/init.c: 9:     WDT_Initialize();
  1836  0363  3184  2436  3183   	fcall	_WDT_Initialize
  1837                           
  1838                           ;../src/init.c: 10:     TMR1_Initialize();
  1839  0366  3182  22DE  3183   	fcall	_TMR1_Initialize
  1840  0369                     l332:
  1841  0369  0008               	return
  1842  036A                     __end_of_SYSTEM_Initialize:
  1843                           
  1844                           	psect	text2
  1845  0436                     __ptext2:	
  1846 ;; *************** function _WDT_Initialize *****************
  1847 ;; Defined at:
  1848 ;;		line 25 in file "../src/init.c"
  1849 ;; Parameters:    Size  Location     Type
  1850 ;;		None
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;		None
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  1    wreg      void 
  1855 ;; Registers used:
  1856 ;;		wreg
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1866 ;;Total ram usage:        0 bytes
  1867 ;; Hardware stack levels used:    1
  1868 ;; Hardware stack levels required when called:    3
  1869 ;; This function calls:
  1870 ;;		Nothing
  1871 ;; This function is called by:
  1872 ;;		_SYSTEM_Initialize
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           
  1877                           ;psect for function _WDT_Initialize
  1878  0436                     _WDT_Initialize:
  1879  0436                     l1424:	
  1880                           ;incstack = 0
  1881                           ; Regs used in _WDT_Initialize: [wreg]
  1882                           
  1883                           
  1884                           ;../src/init.c: 28:     WDTCON = 0x16;
  1885  0436  3016               	movlw	22
  1886  0437  0021               	movlb	1	; select bank1
  1887  0438  0097               	movwf	23	;volatile
  1888  0439                     l338:
  1889  0439  0008               	return
  1890  043A                     __end_of_WDT_Initialize:
  1891                           
  1892                           	psect	text3
  1893  02DE                     __ptext3:	
  1894 ;; *************** function _TMR1_Initialize *****************
  1895 ;; Defined at:
  1896 ;;		line 8 in file "../src/tmr1.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;		None
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;		None
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  1    wreg      void 
  1903 ;; Registers used:
  1904 ;;		wreg, status,2, status,0, pclath, cstack
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1914 ;;Total ram usage:        0 bytes
  1915 ;; Hardware stack levels used:    1
  1916 ;; Hardware stack levels required when called:    4
  1917 ;; This function calls:
  1918 ;;		_TMR1_SetInterruptHandler
  1919 ;; This function is called by:
  1920 ;;		_SYSTEM_Initialize
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           
  1925                           ;psect for function _TMR1_Initialize
  1926  02DE                     _TMR1_Initialize:
  1927  02DE                     l2048:	
  1928                           ;incstack = 0
  1929                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1930                           
  1931                           
  1932                           ;../src/tmr1.c: 12:     T1GCON = 0x00;
  1933  02DE  0020               	movlb	0	; select bank0
  1934  02DF  0199               	clrf	25	;volatile
  1935  02E0                     l2050:
  1936                           
  1937                           ;../src/tmr1.c: 15:     TMR1H = 0x0B;
  1938  02E0  300B               	movlw	11
  1939  02E1  0097               	movwf	23	;volatile
  1940  02E2                     l2052:
  1941                           
  1942                           ;../src/tmr1.c: 18:     TMR1L = 0xDC;
  1943  02E2  30DC               	movlw	220
  1944  02E3  0096               	movwf	22	;volatile
  1945  02E4                     l2054:
  1946                           
  1947                           ;../src/tmr1.c: 21:     PIR1bits.TMR1IF = 0;
  1948  02E4  1011               	bcf	17,0	;volatile
  1949  02E5                     l2056:
  1950                           
  1951                           ;../src/tmr1.c: 24:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  1952  02E5  0817               	movf	23,w	;volatile
  1953  02E6  00D5               	movwf	_timer1ReloadVal+1	;volatile
  1954  02E7  0816               	movf	22,w	;volatile
  1955  02E8  00D4               	movwf	_timer1ReloadVal	;volatile
  1956  02E9                     l2058:
  1957                           
  1958                           ;../src/tmr1.c: 27:     PIE1bits.TMR1IE = 1;
  1959  02E9  0021               	movlb	1	; select bank1
  1960  02EA  1411               	bsf	17,0	;volatile
  1961  02EB                     l2060:
  1962                           
  1963                           ;../src/tmr1.c: 30:     TMR1_SetInterruptHandler(TMR1_Master_InterruptHandler);
  1964  02EB  3060               	movlw	low _TMR1_Master_InterruptHandler
  1965  02EC  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1966  02ED  3004               	movlw	high _TMR1_Master_InterruptHandler
  1967  02EE  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1968  02EF  3183  23ED  3182   	fcall	_TMR1_SetInterruptHandler
  1969  02F2                     l2062:
  1970                           
  1971                           ;../src/tmr1.c: 33:     T1CON = 0x31;
  1972  02F2  3031               	movlw	49
  1973  02F3  0020               	movlb	0	; select bank0
  1974  02F4  0098               	movwf	24	;volatile
  1975  02F5                     l426:
  1976  02F5  0008               	return
  1977  02F6                     __end_of_TMR1_Initialize:
  1978                           
  1979                           	psect	text4
  1980  03ED                     __ptext4:	
  1981 ;; *************** function _TMR1_SetInterruptHandler *****************
  1982 ;; Defined at:
  1983 ;;		line 71 in file "../src/tmr1.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  1986 ;;		 -> TMR1_Master_InterruptHandler(1), 
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;		None
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  1    wreg      void 
  1991 ;; Registers used:
  1992 ;;		wreg
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1998 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2001 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2002 ;;Total ram usage:        2 bytes
  2003 ;; Hardware stack levels used:    1
  2004 ;; Hardware stack levels required when called:    3
  2005 ;; This function calls:
  2006 ;;		Nothing
  2007 ;; This function is called by:
  2008 ;;		_TMR1_Initialize
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           
  2013                           ;psect for function _TMR1_SetInterruptHandler
  2014  03ED                     _TMR1_SetInterruptHandler:
  2015  03ED                     l2044:	
  2016                           ;incstack = 0
  2017                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  2018                           
  2019                           
  2020                           ;../src/tmr1.c: 72:     TMR1_InterruptHandler = InterruptHandler;
  2021  03ED  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  2022  03EE  0020               	movlb	0	; select bank0
  2023  03EF  00D3               	movwf	_TMR1_InterruptHandler+1
  2024  03F0  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  2025  03F1  00D2               	movwf	_TMR1_InterruptHandler
  2026  03F2                     l438:
  2027  03F2  0008               	return
  2028  03F3                     __end_of_TMR1_SetInterruptHandler:
  2029                           
  2030                           	psect	text5
  2031  0322                     __ptext5:	
  2032 ;; *************** function _PIN_MANAGER_Initialize *****************
  2033 ;; Defined at:
  2034 ;;		line 3 in file "../src/pin_manager.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;		None
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;		None
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  1    wreg      void 
  2041 ;; Registers used:
  2042 ;;		wreg, status,2
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2052 ;;Total ram usage:        0 bytes
  2053 ;; Hardware stack levels used:    1
  2054 ;; Hardware stack levels required when called:    3
  2055 ;; This function calls:
  2056 ;;		Nothing
  2057 ;; This function is called by:
  2058 ;;		_SYSTEM_Initialize
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           
  2063                           ;psect for function _PIN_MANAGER_Initialize
  2064  0322                     _PIN_MANAGER_Initialize:
  2065  0322                     l1398:	
  2066                           ;incstack = 0
  2067                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2068                           
  2069                           
  2070                           ;../src/pin_manager.c: 8:     LATA = 0x00;
  2071  0322  0022               	movlb	2	; select bank2
  2072  0323  018C               	clrf	12	;volatile
  2073  0324                     l1400:
  2074                           
  2075                           ;../src/pin_manager.c: 9:     LATC = 0x02;
  2076  0324  3002               	movlw	2
  2077  0325  008E               	movwf	14	;volatile
  2078  0326                     l1402:
  2079                           
  2080                           ;../src/pin_manager.c: 14:     TRISA = 0x30;
  2081  0326  3030               	movlw	48
  2082  0327  0021               	movlb	1	; select bank1
  2083  0328  008C               	movwf	12	;volatile
  2084  0329                     l1404:
  2085                           
  2086                           ;../src/pin_manager.c: 15:     TRISC = 0x3F;
  2087  0329  303F               	movlw	63
  2088  032A  008E               	movwf	14	;volatile
  2089  032B                     l1406:
  2090                           
  2091                           ;../src/pin_manager.c: 20:     ANSELC = 0x0C;
  2092  032B  300C               	movlw	12
  2093  032C  0023               	movlb	3	; select bank3
  2094  032D  008E               	movwf	14	;volatile
  2095  032E                     l1408:
  2096                           
  2097                           ;../src/pin_manager.c: 21:     ANSELA = 0x10;
  2098  032E  3010               	movlw	16
  2099  032F  008C               	movwf	12	;volatile
  2100  0330                     l1410:
  2101                           
  2102                           ;../src/pin_manager.c: 26:     WPUA = 0x00;
  2103  0330  0024               	movlb	4	; select bank4
  2104  0331  018C               	clrf	12	;volatile
  2105  0332                     l1412:
  2106                           
  2107                           ;../src/pin_manager.c: 27:     OPTION_REGbits.nWPUEN = 1;
  2108  0332  0021               	movlb	1	; select bank1
  2109  0333  1795               	bsf	21,7	;volatile
  2110  0334                     l1414:
  2111                           
  2112                           ;../src/pin_manager.c: 32:     APFCON = 0x00;
  2113  0334  0022               	movlb	2	; select bank2
  2114  0335  019D               	clrf	29	;volatile
  2115  0336                     l399:
  2116  0336  0008               	return
  2117  0337                     __end_of_PIN_MANAGER_Initialize:
  2118                           
  2119                           	psect	text6
  2120  03BD                     __ptext6:	
  2121 ;; *************** function _OSCILLATOR_Initialize *****************
  2122 ;; Defined at:
  2123 ;;		line 13 in file "../src/init.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;		None
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;		None
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      void 
  2130 ;; Registers used:
  2131 ;;		wreg, status,2
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2141 ;;Total ram usage:        0 bytes
  2142 ;; Hardware stack levels used:    1
  2143 ;; Hardware stack levels required when called:    3
  2144 ;; This function calls:
  2145 ;;		Nothing
  2146 ;; This function is called by:
  2147 ;;		_SYSTEM_Initialize
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           
  2151                           
  2152                           ;psect for function _OSCILLATOR_Initialize
  2153  03BD                     _OSCILLATOR_Initialize:
  2154  03BD                     l1416:	
  2155                           ;incstack = 0
  2156                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2157                           
  2158                           
  2159                           ;../src/init.c: 16:     OSCCON = 0x32;
  2160  03BD  3032               	movlw	50
  2161  03BE  0021               	movlb	1	; select bank1
  2162  03BF  0099               	movwf	25	;volatile
  2163  03C0                     l1418:
  2164                           
  2165                           ;../src/init.c: 18:     OSCTUNE = 0x00;
  2166  03C0  0198               	clrf	24	;volatile
  2167  03C1                     l1420:
  2168                           
  2169                           ;../src/init.c: 20:     ACTCON = 0x00;
  2170  03C1  0027               	movlb	7	; select bank7
  2171  03C2  019B               	clrf	27	;volatile
  2172  03C3                     l1422:
  2173                           
  2174                           ;../src/init.c: 22:     BORCON = 0x00;
  2175  03C3  0022               	movlb	2	; select bank2
  2176  03C4  0196               	clrf	22	;volatile
  2177  03C5                     l335:
  2178  03C5  0008               	return
  2179  03C6                     __end_of_OSCILLATOR_Initialize:
  2180                           
  2181                           	psect	text7
  2182  03C6                     __ptext7:	
  2183 ;; *************** function _I2C_Initialize *****************
  2184 ;; Defined at:
  2185 ;;		line 117 in file "../src/i2c_master.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;		None
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;		None
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  1    wreg      void 
  2192 ;; Registers used:
  2193 ;;		wreg, status,2
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2203 ;;Total ram usage:        0 bytes
  2204 ;; Hardware stack levels used:    1
  2205 ;; Hardware stack levels required when called:    3
  2206 ;; This function calls:
  2207 ;;		Nothing
  2208 ;; This function is called by:
  2209 ;;		_SYSTEM_Initialize
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213                           
  2214                           ;psect for function _I2C_Initialize
  2215  03C6                     _I2C_Initialize:
  2216  03C6                     l1390:	
  2217                           ;incstack = 0
  2218                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  2219                           
  2220                           
  2221                           ;../src/i2c_master.c: 119:     SSP1STAT = 0x00;
  2222  03C6  0024               	movlb	4	; select bank4
  2223  03C7  0194               	clrf	20	;volatile
  2224  03C8                     l1392:
  2225                           
  2226                           ;../src/i2c_master.c: 120:     SSP1CON1 = 0x08;
  2227  03C8  3008               	movlw	8
  2228  03C9  0095               	movwf	21	;volatile
  2229  03CA                     l1394:
  2230                           
  2231                           ;../src/i2c_master.c: 121:     SSP1CON2 = 0x00;
  2232  03CA  0196               	clrf	22	;volatile
  2233                           
  2234                           ;../src/i2c_master.c: 122:     SSP1ADD = 0x04;
  2235  03CB  3004               	movlw	4
  2236  03CC  0092               	movwf	18	;volatile
  2237  03CD                     l1396:
  2238                           
  2239                           ;../src/i2c_master.c: 123:     SSP1CON1bits.SSPEN = 0;
  2240  03CD  1295               	bcf	21,5	;volatile
  2241  03CE                     l99:
  2242  03CE  0008               	return
  2243  03CF                     __end_of_I2C_Initialize:
  2244                           
  2245                           	psect	text8
  2246  02A5                     __ptext8:	
  2247 ;; *************** function _Rotar_All_Slaves *****************
  2248 ;; Defined at:
  2249 ;;		line 85 in file "../src/vertebra.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;		None
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;  n               2   14[BANK0 ] int 
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  1    wreg      void 
  2256 ;; Registers used:
  2257 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2264 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2265 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2266 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2267 ;;Total ram usage:        3 bytes
  2268 ;; Hardware stack levels used:    1
  2269 ;; Hardware stack levels required when called:   14
  2270 ;; This function calls:
  2271 ;;		_Rotar_Slave
  2272 ;; This function is called by:
  2273 ;;		_main
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277                           
  2278                           ;psect for function _Rotar_All_Slaves
  2279  02A5                     _Rotar_All_Slaves:
  2280  02A5                     l2668:	
  2281                           ;incstack = 0
  2282                           ; Regs used in _Rotar_All_Slaves: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2283                           
  2284                           
  2285                           ;../src/vertebra.c: 86:     int n=0;
  2286  02A5  0020               	movlb	0	; select bank0
  2287  02A6  01D0               	clrf	Rotar_All_Slaves@n
  2288  02A7  01D1               	clrf	Rotar_All_Slaves@n+1
  2289                           
  2290                           ;../src/vertebra.c: 88:     while(n<2){
  2291  02A8  2AB4               	goto	l2674
  2292  02A9                     l2670:
  2293                           
  2294                           ;../src/vertebra.c: 89:         Rotar_Slave(31+n);
  2295  02A9  0020               	movlb	0	; select bank0
  2296  02AA  0850               	movf	Rotar_All_Slaves@n,w
  2297  02AB  3E1F               	addlw	31
  2298  02AC  3180  2034  3182   	fcall	_Rotar_Slave
  2299  02AF                     l2672:
  2300                           
  2301                           ;../src/vertebra.c: 90:         n++;
  2302  02AF  3001               	movlw	1
  2303  02B0  0020               	movlb	0	; select bank0
  2304  02B1  07D0               	addwf	Rotar_All_Slaves@n,f
  2305  02B2  3000               	movlw	0
  2306  02B3  3DD1               	addwfc	Rotar_All_Slaves@n+1,f
  2307  02B4                     l2674:
  2308                           
  2309                           ;../src/vertebra.c: 88:     while(n<2){
  2310  02B4  0851               	movf	Rotar_All_Slaves@n+1,w
  2311  02B5  3A80               	xorlw	128
  2312  02B6  00CF               	movwf	??_Rotar_All_Slaves
  2313  02B7  3080               	movlw	128
  2314  02B8  024F               	subwf	??_Rotar_All_Slaves,w
  2315  02B9  1D03               	skipz
  2316  02BA  2ABD               	goto	u835
  2317  02BB  3002               	movlw	2
  2318  02BC  0250               	subwf	Rotar_All_Slaves@n,w
  2319  02BD                     u835:
  2320  02BD  1C03               	skipc
  2321  02BE  2AC0               	goto	u831
  2322  02BF  2AC1               	goto	u830
  2323  02C0                     u831:
  2324  02C0  2AA9               	goto	l2670
  2325  02C1                     u830:
  2326  02C1                     l488:
  2327  02C1  0008               	return
  2328  02C2                     __end_of_Rotar_All_Slaves:
  2329                           
  2330                           	psect	text9
  2331  0034                     __ptext9:	
  2332 ;; *************** function _Rotar_Slave *****************
  2333 ;; Defined at:
  2334 ;;		line 43 in file "../src/vertebra.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;  esclavo         1    wreg     unsigned char 
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;  esclavo         1   12[BANK0 ] unsigned char 
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  1    wreg      void 
  2341 ;; Registers used:
  2342 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2349 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2350 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2351 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2352 ;;Total ram usage:        3 bytes
  2353 ;; Hardware stack levels used:    1
  2354 ;; Hardware stack levels required when called:   13
  2355 ;; This function calls:
  2356 ;;		_SetServo
  2357 ;; This function is called by:
  2358 ;;		_Rotar_All_Slaves
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362                           
  2363                           ;psect for function _Rotar_Slave
  2364  0034                     _Rotar_Slave:
  2365                           
  2366                           ;incstack = 0
  2367                           ; Regs used in _Rotar_Slave: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2368                           ;Rotar_Slave@esclavo stored from wreg
  2369  0034  0020               	movlb	0	; select bank0
  2370  0035  00CE               	movwf	Rotar_Slave@esclavo
  2371  0036                     l2622:
  2372                           
  2373                           ;../src/vertebra.c: 43: void Rotar_Slave(uint8_t esclavo);../src/vertebra.c: 44: {;../sr
      +                          c/vertebra.c: 46:     if (ciclo < 8 && esclavo %2 ==0){
  2374  0036  3008               	movlw	8
  2375  0037  023F               	subwf	_ciclo,w
  2376  0038  1803               	skipnc
  2377  0039  283B               	goto	u761
  2378  003A  283C               	goto	u760
  2379  003B                     u761:
  2380  003B  2844               	goto	l471
  2381  003C                     u760:
  2382  003C                     l2624:
  2383  003C  184E               	btfsc	Rotar_Slave@esclavo,0
  2384  003D  283F               	goto	u771
  2385  003E  2840               	goto	u770
  2386  003F                     u771:
  2387  003F  2844               	goto	l471
  2388  0040                     u770:
  2389  0040                     l2626:
  2390                           
  2391                           ;../src/vertebra.c: 47:         estado_mov_nuevo = estado_mov_viejo;
  2392  0040  0841               	movf	_estado_mov_viejo,w
  2393  0041  00CC               	movwf	??_Rotar_Slave
  2394  0042  084C               	movf	??_Rotar_Slave,w
  2395  0043  00C0               	movwf	_estado_mov_nuevo
  2396  0044                     l471:	
  2397                           ;../src/vertebra.c: 48:     }
  2398                           
  2399                           
  2400                           ;../src/vertebra.c: 49:     if(ciclo > 8 && ciclo < 16 && esclavo %2!=0){
  2401  0044  3009               	movlw	9
  2402  0045  023F               	subwf	_ciclo,w
  2403  0046  1C03               	skipc
  2404  0047  2849               	goto	u781
  2405  0048  284A               	goto	u780
  2406  0049                     u781:
  2407  0049  2859               	goto	l2634
  2408  004A                     u780:
  2409  004A                     l2628:
  2410  004A  3010               	movlw	16
  2411  004B  023F               	subwf	_ciclo,w
  2412  004C  1803               	skipnc
  2413  004D  284F               	goto	u791
  2414  004E  2850               	goto	u790
  2415  004F                     u791:
  2416  004F  2859               	goto	l2634
  2417  0050                     u790:
  2418  0050                     l2630:
  2419  0050  1C4E               	btfss	Rotar_Slave@esclavo,0
  2420  0051  2853               	goto	u801
  2421  0052  2854               	goto	u800
  2422  0053                     u801:
  2423  0053  2859               	goto	l2634
  2424  0054                     u800:
  2425  0054                     l2632:
  2426                           
  2427                           ;../src/vertebra.c: 50:         estado_mov_nuevo = estado_mov_viejo;
  2428  0054  0841               	movf	_estado_mov_viejo,w
  2429  0055  00CC               	movwf	??_Rotar_Slave
  2430  0056  084C               	movf	??_Rotar_Slave,w
  2431  0057  00C0               	movwf	_estado_mov_nuevo
  2432                           
  2433                           ;../src/vertebra.c: 51:     }
  2434  0058  2890               	goto	l2656
  2435  0059                     l2634:
  2436  0059  3011               	movlw	17
  2437  005A  023F               	subwf	_ciclo,w
  2438  005B  1C03               	skipc
  2439  005C  285E               	goto	u811
  2440  005D  285F               	goto	u810
  2441  005E                     u811:
  2442  005E  2890               	goto	l2656
  2443  005F                     u810:
  2444  005F                     l2636:
  2445                           
  2446                           ;../src/vertebra.c: 53:         estado_mov_nuevo =QUIETO;
  2447  005F  3002               	movlw	2
  2448  0060  00CC               	movwf	??_Rotar_Slave
  2449  0061  084C               	movf	??_Rotar_Slave,w
  2450  0062  00C0               	movwf	_estado_mov_nuevo
  2451  0063  2890               	goto	l2656
  2452  0064                     l2638:
  2453                           
  2454                           ;../src/vertebra.c: 58:             estado_mov_viejo = SENO;
  2455  0064  01C1               	clrf	_estado_mov_viejo
  2456  0065                     l2640:
  2457                           
  2458                           ;../src/vertebra.c: 59:             SetServo(esclavo,cicloMin);
  2459  0065  300F               	movlw	15
  2460  0066  00CC               	movwf	??_Rotar_Slave
  2461  0067  084C               	movf	??_Rotar_Slave,w
  2462  0068  00C8               	movwf	SetServo@ciclo
  2463  0069  084E               	movf	Rotar_Slave@esclavo,w
  2464  006A  3183  237A  3180   	fcall	_SetServo
  2465  006D                     l2642:
  2466                           
  2467                           ;../src/vertebra.c: 60:             estado_mov_nuevo = COSENO;
  2468  006D  0020               	movlb	0	; select bank0
  2469  006E  01C0               	clrf	_estado_mov_nuevo
  2470  006F  0AC0               	incf	_estado_mov_nuevo,f
  2471                           
  2472                           ;../src/vertebra.c: 61:             break;
  2473  0070  28A3               	goto	l2658
  2474  0071                     l478:	
  2475                           ;../src/vertebra.c: 62:         case COSENO:
  2476                           
  2477                           
  2478                           ;../src/vertebra.c: 63:             estado_mov_viejo = COSENO;
  2479  0071  01C1               	clrf	_estado_mov_viejo
  2480  0072  0AC1               	incf	_estado_mov_viejo,f
  2481  0073                     l2644:
  2482                           
  2483                           ;../src/vertebra.c: 64:             SetServo(esclavo,cicloMax);
  2484  0073  304B               	movlw	75
  2485  0074  00CC               	movwf	??_Rotar_Slave
  2486  0075  084C               	movf	??_Rotar_Slave,w
  2487  0076  00C8               	movwf	SetServo@ciclo
  2488  0077  084E               	movf	Rotar_Slave@esclavo,w
  2489  0078  3183  237A  3180   	fcall	_SetServo
  2490  007B                     l2646:
  2491                           
  2492                           ;../src/vertebra.c: 65:             estado_mov_nuevo = SENO;
  2493  007B  0020               	movlb	0	; select bank0
  2494  007C  01C0               	clrf	_estado_mov_nuevo
  2495                           
  2496                           ;../src/vertebra.c: 66:             break;
  2497  007D  28A3               	goto	l2658
  2498  007E                     l2648:
  2499                           
  2500                           ;../src/vertebra.c: 68:             estado_mov_viejo = QUIETO;
  2501  007E  3002               	movlw	2
  2502  007F  00CC               	movwf	??_Rotar_Slave
  2503  0080  084C               	movf	??_Rotar_Slave,w
  2504  0081  00C1               	movwf	_estado_mov_viejo
  2505  0082                     l2650:
  2506                           
  2507                           ;../src/vertebra.c: 69:             SetServo(esclavo,cicloReposo);
  2508  0082  302D               	movlw	45
  2509  0083  00CC               	movwf	??_Rotar_Slave
  2510  0084  084C               	movf	??_Rotar_Slave,w
  2511  0085  00C8               	movwf	SetServo@ciclo
  2512  0086  084E               	movf	Rotar_Slave@esclavo,w
  2513  0087  3183  237A  3180   	fcall	_SetServo
  2514  008A                     l2652:
  2515                           
  2516                           ;../src/vertebra.c: 70:             estado_mov_nuevo = QUIETO;
  2517  008A  3002               	movlw	2
  2518  008B  0020               	movlb	0	; select bank0
  2519  008C  00CC               	movwf	??_Rotar_Slave
  2520  008D  084C               	movf	??_Rotar_Slave,w
  2521  008E  00C0               	movwf	_estado_mov_nuevo
  2522                           
  2523                           ;../src/vertebra.c: 71:             break;
  2524  008F  28A3               	goto	l2658
  2525  0090                     l2656:
  2526  0090  0840               	movf	_estado_mov_nuevo,w
  2527  0091  00CC               	movwf	??_Rotar_Slave
  2528  0092  01CD               	clrf	??_Rotar_Slave+1
  2529                           
  2530                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2531                           ; Switch size 1, requested type "simple"
  2532                           ; Number of cases is 1, Range of values is 0 to 0
  2533                           ; switch strategies available:
  2534                           ; Name         Instructions Cycles
  2535                           ; simple_byte            4     3 (average)
  2536                           ; direct_byte            8     6 (fixed)
  2537                           ; jumptable            260     6 (fixed)
  2538                           ;	Chosen strategy is simple_byte
  2539  0093  084D               	movf	??_Rotar_Slave+1,w
  2540  0094  3A00               	xorlw	0	; case 0
  2541  0095  1903               	skipnz
  2542  0096  2898               	goto	l2788
  2543  0097  28A3               	goto	l2658
  2544  0098                     l2788:
  2545                           
  2546                           ; Switch size 1, requested type "simple"
  2547                           ; Number of cases is 3, Range of values is 0 to 2
  2548                           ; switch strategies available:
  2549                           ; Name         Instructions Cycles
  2550                           ; simple_byte           10     6 (average)
  2551                           ; direct_byte           12     6 (fixed)
  2552                           ; jumptable            260     6 (fixed)
  2553                           ;	Chosen strategy is simple_byte
  2554  0098  084C               	movf	??_Rotar_Slave,w
  2555  0099  3A00               	xorlw	0	; case 0
  2556  009A  1903               	skipnz
  2557  009B  2864               	goto	l2638
  2558  009C  3A01               	xorlw	1	; case 1
  2559  009D  1903               	skipnz
  2560  009E  2871               	goto	l478
  2561  009F  3A03               	xorlw	3	; case 2
  2562  00A0  1903               	skipnz
  2563  00A1  287E               	goto	l2648
  2564  00A2  28A3               	goto	l2658
  2565  00A3                     l2658:
  2566                           
  2567                           ;../src/vertebra.c: 75:     ciclo=ciclo+1;
  2568  00A3  083F               	movf	_ciclo,w
  2569  00A4  3E01               	addlw	1
  2570  00A5  00CC               	movwf	??_Rotar_Slave
  2571  00A6  084C               	movf	??_Rotar_Slave,w
  2572  00A7  00BF               	movwf	_ciclo
  2573  00A8                     l2660:
  2574                           
  2575                           ;../src/vertebra.c: 78:     if(ciclo > 24){
  2576  00A8  3019               	movlw	25
  2577  00A9  023F               	subwf	_ciclo,w
  2578  00AA  1C03               	skipc
  2579  00AB  28AD               	goto	u821
  2580  00AC  28AE               	goto	u820
  2581  00AD                     u821:
  2582  00AD  28B1               	goto	l482
  2583  00AE                     u820:
  2584  00AE                     l2662:
  2585                           
  2586                           ;../src/vertebra.c: 79:         ciclo=0;
  2587  00AE  01BF               	clrf	_ciclo
  2588                           
  2589                           ;../src/vertebra.c: 80:         estado_mov_viejo = SENO;
  2590  00AF  01C1               	clrf	_estado_mov_viejo
  2591                           
  2592                           ;../src/vertebra.c: 81:         estado_mov_nuevo = SENO;
  2593  00B0  01C0               	clrf	_estado_mov_nuevo
  2594  00B1                     l482:
  2595  00B1  0008               	return
  2596  00B2                     __end_of_Rotar_Slave:
  2597                           
  2598                           	psect	text10
  2599  037A                     __ptext10:	
  2600 ;; *************** function _SetServo *****************
  2601 ;; Defined at:
  2602 ;;		line 39 in file "../src/vertebra.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;  slave           1    wreg     unsigned char 
  2605 ;;  ciclo           1    6[BANK0 ] unsigned char 
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;  slave           1    9[BANK0 ] unsigned char 
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  1    wreg      void 
  2610 ;; Registers used:
  2611 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2617 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2618 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2619 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2620 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2621 ;;Total ram usage:        4 bytes
  2622 ;; Hardware stack levels used:    1
  2623 ;; Hardware stack levels required when called:   12
  2624 ;; This function calls:
  2625 ;;		_I2C_Write1ByteRegister
  2626 ;; This function is called by:
  2627 ;;		_Rotar_Slave
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631                           
  2632                           ;psect for function _SetServo
  2633  037A                     _SetServo:
  2634                           
  2635                           ;incstack = 0
  2636                           ; Regs used in _SetServo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2637                           ;SetServo@slave stored from wreg
  2638  037A  0020               	movlb	0	; select bank0
  2639  037B  00CB               	movwf	SetServo@slave
  2640  037C                     l2620:
  2641                           
  2642                           ;../src/vertebra.c: 39: void SetServo(i2c_address_t slave, uint8_t ciclo);../src/vertebr
      +                          a.c: 40: {;../src/vertebra.c: 41:     I2C_Write1ByteRegister(slave,15,ciclo);
  2643  037C  300F               	movlw	15
  2644  037D  00C9               	movwf	??_SetServo
  2645  037E  0849               	movf	??_SetServo,w
  2646  037F  00C4               	movwf	I2C_Write1ByteRegister@reg
  2647  0380  0848               	movf	SetServo@ciclo,w
  2648  0381  00CA               	movwf	??_SetServo+1
  2649  0382  084A               	movf	??_SetServo+1,w
  2650  0383  00C5               	movwf	I2C_Write1ByteRegister@data
  2651  0384  084B               	movf	SetServo@slave,w
  2652  0385  3181  2187  3183   	fcall	_I2C_Write1ByteRegister
  2653  0388                     l468:
  2654  0388  0008               	return
  2655  0389                     __end_of_SetServo:
  2656                           
  2657                           	psect	text11
  2658  0187                     __ptext11:	
  2659 ;; *************** function _I2C_Write1ByteRegister *****************
  2660 ;; Defined at:
  2661 ;;		line 12 in file "../src/i2c_master_functions.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;  address         1    wreg     unsigned char 
  2664 ;;  reg             1    2[BANK0 ] unsigned char 
  2665 ;;  data            1    3[BANK0 ] unsigned char 
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;  address         1    5[BANK0 ] unsigned char 
  2668 ;; Return value:  Size  Location     Type
  2669 ;;                  1    wreg      void 
  2670 ;; Registers used:
  2671 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2677 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2678 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2679 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2680 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2681 ;;Total ram usage:        4 bytes
  2682 ;; Hardware stack levels used:    1
  2683 ;; Hardware stack levels required when called:   11
  2684 ;; This function calls:
  2685 ;;		_I2C_Close
  2686 ;;		_I2C_MasterWrite
  2687 ;;		_I2C_Open
  2688 ;;		_I2C_SetAddressNackCallback
  2689 ;;		_I2C_SetBuffer
  2690 ;;		_I2C_SetDataCompleteCallback
  2691 ;; This function is called by:
  2692 ;;		_SetServo
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           
  2696                           
  2697                           ;psect for function _I2C_Write1ByteRegister
  2698  0187                     _I2C_Write1ByteRegister:
  2699                           
  2700                           ;incstack = 0
  2701                           ; Regs used in _I2C_Write1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2702                           ;I2C_Write1ByteRegister@address stored from wreg
  2703  0187  0020               	movlb	0	; select bank0
  2704  0188  00C7               	movwf	I2C_Write1ByteRegister@address
  2705  0189                     l2606:
  2706  0189                     l2608:	
  2707                           ;../src/i2c_master_functions.c: 12: void I2C_Write1ByteRegister(i2c_address_t address, u
      +                          int8_t reg, uint8_t data);../src/i2c_master_functions.c: 13: {;../src/i2c_master_functio
      +                          ns.c: 14:     while(!I2C_Open(address));
  2708                           
  2709  0189  0020               	movlb	0	; select bank0
  2710  018A  0847               	movf	I2C_Write1ByteRegister@address,w
  2711  018B  3181  214D  3181   	fcall	_I2C_Open
  2712  018E  3A00               	xorlw	0
  2713  018F  1903               	skipnz
  2714  0190  2992               	goto	u741
  2715  0191  2993               	goto	u740
  2716  0192                     u741:
  2717  0192  2989               	goto	l2608
  2718  0193                     u740:
  2719  0193                     l2610:
  2720                           
  2721                           ;../src/i2c_master_functions.c: 15:     I2C_SetDataCompleteCallback(wr1RegCompleteHandle
      +                          r,&data);
  2722  0193  3037               	movlw	low _wr1RegCompleteHandler
  2723  0194  00F7               	movwf	I2C_SetDataCompleteCallback@cb
  2724  0195  3003               	movlw	high _wr1RegCompleteHandler
  2725  0196  00F8               	movwf	I2C_SetDataCompleteCallback@cb+1
  2726  0197  3045               	movlw	(low (I2C_Write1ByteRegister@data| 0))& (0+255)
  2727  0198  0020               	movlb	0	; select bank0
  2728  0199  00C6               	movwf	??_I2C_Write1ByteRegister
  2729  019A  0846               	movf	??_I2C_Write1ByteRegister,w
  2730  019B  00F9               	movwf	I2C_SetDataCompleteCallback@ptr
  2731  019C  3183  23B0  3181   	fcall	_I2C_SetDataCompleteCallback
  2732  019F                     l2612:
  2733                           
  2734                           ;../src/i2c_master_functions.c: 16:     I2C_SetBuffer(&reg,1);
  2735  019F  3001               	movlw	1
  2736  01A0  00F2               	movwf	I2C_SetBuffer@bufferSize
  2737  01A1  3000               	movlw	0
  2738  01A2  00F3               	movwf	I2C_SetBuffer@bufferSize+1
  2739  01A3  3044               	movlw	(low (I2C_Write1ByteRegister@reg| 0))& (0+255)
  2740  01A4  3183  236A  3181   	fcall	_I2C_SetBuffer
  2741  01A7                     l2614:
  2742                           
  2743                           ;../src/i2c_master_functions.c: 17:     I2C_SetAddressNackCallback(((void*)0),((void*)0)
      +                          );
  2744  01A7  3000               	movlw	0
  2745  01A8  00F7               	movwf	I2C_SetAddressNackCallback@cb
  2746  01A9  00F8               	movwf	I2C_SetAddressNackCallback@cb+1
  2747  01AA  01F9               	clrf	I2C_SetAddressNackCallback@ptr
  2748  01AB  3183  2389  3181   	fcall	_I2C_SetAddressNackCallback
  2749  01AE                     l2616:
  2750                           
  2751                           ;../src/i2c_master_functions.c: 18:     I2C_MasterWrite();
  2752  01AE  3183  23FF  3181   	fcall	_I2C_MasterWrite
  2753  01B1                     l2618:	
  2754                           ;../src/i2c_master_functions.c: 19:     while(I2C_BUSY == I2C_Close());
  2755                           
  2756  01B1  3182  22C2  3181   	fcall	_I2C_Close
  2757  01B4  3A01               	xorlw	1
  2758  01B5  1903               	skipnz
  2759  01B6  29B8               	goto	u751
  2760  01B7  29B9               	goto	u750
  2761  01B8                     u751:
  2762  01B8  29B1               	goto	l2618
  2763  01B9                     u750:
  2764  01B9                     l304:
  2765  01B9  0008               	return
  2766  01BA                     __end_of_I2C_Write1ByteRegister:
  2767                           
  2768                           	psect	text12
  2769  0389                     __ptext12:	
  2770 ;; *************** function _I2C_SetAddressNackCallback *****************
  2771 ;; Defined at:
  2772 ;;		line 218 in file "../src/i2c_master.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  cb              2    7[COMMON] PTR FTN(PTR void ,)enum 
  2775 ;;		 -> Absolute function(1), 
  2776 ;;  ptr             1    9[COMMON] PTR void 
  2777 ;;		 -> NULL(0), 
  2778 ;; Auto vars:     Size  Location     Type
  2779 ;;		None
  2780 ;; Return value:  Size  Location     Type
  2781 ;;                  1    wreg      void 
  2782 ;; Registers used:
  2783 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2784 ;; Tracked objects:
  2785 ;;		On entry : 0/0
  2786 ;;		On exit  : 0/0
  2787 ;;		Unchanged: 0/0
  2788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2789 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2791 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2792 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2793 ;;Total ram usage:        4 bytes
  2794 ;; Hardware stack levels used:    1
  2795 ;; Hardware stack levels required when called:    4
  2796 ;; This function calls:
  2797 ;;		_I2C_SetCallback
  2798 ;; This function is called by:
  2799 ;;		_I2C_Write1ByteRegister
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803                           
  2804                           ;psect for function _I2C_SetAddressNackCallback
  2805  0389                     _I2C_SetAddressNackCallback:
  2806  0389                     l2604:	
  2807                           ;incstack = 0
  2808                           ; Regs used in _I2C_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  2809                           
  2810                           
  2811                           ;../src/i2c_master.c: 218: void I2C_SetAddressNackCallback(i2c_callback_t cb, void *ptr)
      +                          ;../src/i2c_master.c: 219: {;../src/i2c_master.c: 220:     I2C_SetCallback(I2C_ADDR_NACK
      +                          , cb, ptr);
  2812  0389  0878               	movf	I2C_SetAddressNackCallback@cb+1,w
  2813  038A  00F3               	movwf	I2C_SetCallback@cb+1
  2814  038B  0877               	movf	I2C_SetAddressNackCallback@cb,w
  2815  038C  00F2               	movwf	I2C_SetCallback@cb
  2816  038D  0879               	movf	I2C_SetAddressNackCallback@ptr,w
  2817  038E  00FA               	movwf	??_I2C_SetAddressNackCallback
  2818  038F  087A               	movf	??_I2C_SetAddressNackCallback,w
  2819  0390  00F4               	movwf	I2C_SetCallback@ptr
  2820  0391  3002               	movlw	2
  2821  0392  3182  2240  3183   	fcall	_I2C_SetCallback
  2822  0395                     l126:
  2823  0395  0008               	return
  2824  0396                     __end_of_I2C_SetAddressNackCallback:
  2825                           
  2826                           	psect	text13
  2827  014D                     __ptext13:	
  2828 ;; *************** function _I2C_Open *****************
  2829 ;; Defined at:
  2830 ;;		line 126 in file "../src/i2c_master.c"
  2831 ;; Parameters:    Size  Location     Type
  2832 ;;  address         1    wreg     unsigned char 
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;  address         1    3[COMMON] unsigned char 
  2835 ;;  returnValue     1    4[COMMON] enum E353
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  1    wreg      enum E353
  2838 ;; Registers used:
  2839 ;;		wreg, status,2, status,0, pclath, cstack
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2846 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2847 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2848 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2849 ;;Total ram usage:        3 bytes
  2850 ;; Hardware stack levels used:    1
  2851 ;; Hardware stack levels required when called:    4
  2852 ;; This function calls:
  2853 ;;		_I2C_MasterClearIrq
  2854 ;;		_I2C_MasterOpen
  2855 ;; This function is called by:
  2856 ;;		_I2C_Write1ByteRegister
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860                           
  2861                           ;psect for function _I2C_Open
  2862  014D                     _I2C_Open:
  2863                           
  2864                           ;incstack = 0
  2865                           ; Regs used in _I2C_Open: [wreg+status,2+status,0+pclath+cstack]
  2866                           ;I2C_Open@address stored from wreg
  2867  014D  00F3               	movwf	I2C_Open@address
  2868  014E                     l2550:
  2869                           
  2870                           ;../src/i2c_master.c: 126: i2c_error_t I2C_Open(i2c_address_t address);../src/i2c_master
      +                          .c: 127: {;../src/i2c_master.c: 128:     i2c_error_t returnValue = I2C_BUSY;
  2871  014E  01F4               	clrf	I2C_Open@returnValue
  2872  014F  0AF4               	incf	I2C_Open@returnValue,f
  2873                           
  2874                           ;../src/i2c_master.c: 130:     if(!I2C_Status.inUse)
  2875  0150  0020               	movlb	0	; select bank0
  2876  0151  193C               	btfsc	_I2C_Status+28,2
  2877  0152  2954               	goto	u721
  2878  0153  2955               	goto	u720
  2879  0154                     u721:
  2880  0154  2985               	goto	l102
  2881  0155                     u720:
  2882  0155                     l2552:
  2883                           
  2884                           ;../src/i2c_master.c: 131:     {;../src/i2c_master.c: 132:         I2C_Status.address = 
      +                          address;
  2885  0155  0873               	movf	I2C_Open@address,w
  2886  0156  00F2               	movwf	??_I2C_Open
  2887  0157  0872               	movf	??_I2C_Open,w
  2888  0158  00B6               	movwf	_I2C_Status+22
  2889  0159                     l2554:
  2890                           
  2891                           ;../src/i2c_master.c: 133:         I2C_Status.busy = 0;
  2892  0159  10BC               	bcf	_I2C_Status+28,1
  2893  015A                     l2556:
  2894                           
  2895                           ;../src/i2c_master.c: 134:         I2C_Status.inUse = 1;
  2896  015A  153C               	bsf	_I2C_Status+28,2
  2897  015B                     l2558:
  2898                           
  2899                           ;../src/i2c_master.c: 135:         I2C_Status.addressNackCheck = 0;
  2900  015B  103C               	bcf	_I2C_Status+28,0
  2901                           
  2902                           ;../src/i2c_master.c: 136:         I2C_Status.state = I2C_RESET;
  2903  015C  300E               	movlw	14
  2904  015D  00F2               	movwf	??_I2C_Open
  2905  015E  0872               	movf	??_I2C_Open,w
  2906  015F  00BA               	movwf	_I2C_Status+26
  2907                           
  2908                           ;../src/i2c_master.c: 137:         I2C_Status.time_out_value = 500;
  2909  0160  30F4               	movlw	244
  2910  0161  00B4               	movwf	_I2C_Status+20
  2911  0162  3001               	movlw	1
  2912  0163  00B5               	movwf	_I2C_Status+21
  2913  0164                     l2560:
  2914                           
  2915                           ;../src/i2c_master.c: 138:         I2C_Status.bufferFree = 1;
  2916  0164  15BC               	bsf	_I2C_Status+28,3
  2917                           
  2918                           ;../src/i2c_master.c: 141:         I2C_Status.callbackTable[I2C_DATA_COMPLETE]=I2C_Callb
      +                          ackReturnStop;
  2919  0165  3065               	movlw	low _I2C_CallbackReturnStop
  2920  0166  00A0               	movwf	_I2C_Status
  2921  0167  3004               	movlw	high _I2C_CallbackReturnStop
  2922  0168  00A1               	movwf	_I2C_Status+1
  2923  0169                     l2562:
  2924                           
  2925                           ;../src/i2c_master.c: 142:         I2C_Status.callbackPayload[I2C_DATA_COMPLETE] = ((voi
      +                          d*)0);
  2926  0169  01AC               	clrf	low ((_I2C_Status| 0+12))
  2927  016A                     l2564:
  2928                           
  2929                           ;../src/i2c_master.c: 143:         I2C_Status.callbackTable[I2C_WRITE_COLLISION]=I2C_Cal
      +                          lbackReturnStop;
  2930  016A  3065               	movlw	low _I2C_CallbackReturnStop
  2931  016B  00A2               	movwf	low ((_I2C_Status| 0+2))
  2932  016C  3004               	movlw	high _I2C_CallbackReturnStop
  2933  016D  00A3               	movwf	(low ((_I2C_Status| 0+2))+1)
  2934                           
  2935                           ;../src/i2c_master.c: 144:         I2C_Status.callbackPayload[I2C_WRITE_COLLISION] = ((v
      +                          oid*)0);
  2936  016E  01AD               	clrf	low ((_I2C_Status| 0+13))
  2937  016F                     l2566:
  2938                           
  2939                           ;../src/i2c_master.c: 145:         I2C_Status.callbackTable[I2C_ADDR_NACK]=I2C_CallbackR
      +                          eturnStop;
  2940  016F  3065               	movlw	low _I2C_CallbackReturnStop
  2941  0170  00A4               	movwf	low ((_I2C_Status| 0+4))
  2942  0171  3004               	movlw	high _I2C_CallbackReturnStop
  2943  0172  00A5               	movwf	(low ((_I2C_Status| 0+4))+1)
  2944  0173                     l2568:
  2945                           
  2946                           ;../src/i2c_master.c: 146:         I2C_Status.callbackPayload[I2C_ADDR_NACK] = ((void*)0
      +                          );
  2947  0173  01AE               	clrf	low ((_I2C_Status| 0+14))
  2948                           
  2949                           ;../src/i2c_master.c: 147:         I2C_Status.callbackTable[I2C_DATA_NACK]=I2C_CallbackR
      +                          eturnStop;
  2950  0174  3065               	movlw	low _I2C_CallbackReturnStop
  2951  0175  00A6               	movwf	low ((_I2C_Status| 0+6))
  2952  0176  3004               	movlw	high _I2C_CallbackReturnStop
  2953  0177  00A7               	movwf	(low ((_I2C_Status| 0+6))+1)
  2954  0178                     l2570:
  2955                           
  2956                           ;../src/i2c_master.c: 148:         I2C_Status.callbackPayload[I2C_DATA_NACK] = ((void*)0
      +                          );
  2957  0178  01AF               	clrf	low ((_I2C_Status| 0+15))
  2958  0179                     l2572:
  2959                           
  2960                           ;../src/i2c_master.c: 149:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2C_CallbackRet
      +                          urnReset;
  2961  0179  3063               	movlw	low _I2C_CallbackReturnReset
  2962  017A  00A8               	movwf	low ((_I2C_Status| 0+8))
  2963  017B  3004               	movlw	high _I2C_CallbackReturnReset
  2964  017C  00A9               	movwf	(low ((_I2C_Status| 0+8))+1)
  2965                           
  2966                           ;../src/i2c_master.c: 150:         I2C_Status.callbackPayload[I2C_TIMEOUT] = ((void*)0);
  2967  017D  01B0               	clrf	low ((_I2C_Status| 0+16))
  2968  017E                     l2574:
  2969                           
  2970                           ;../src/i2c_master.c: 152:         I2C_MasterClearIrq();
  2971  017E  3184  245D  3181   	fcall	_I2C_MasterClearIrq
  2972  0181                     l2576:
  2973                           
  2974                           ;../src/i2c_master.c: 153:         I2C_MasterOpen();
  2975  0181  3183  2396  3181   	fcall	_I2C_MasterOpen
  2976  0184                     l2578:
  2977                           
  2978                           ;../src/i2c_master.c: 154:         returnValue = I2C_NOERR;
  2979  0184  01F4               	clrf	I2C_Open@returnValue
  2980  0185                     l102:	
  2981                           ;../src/i2c_master.c: 155:     }
  2982                           
  2983                           
  2984                           ;../src/i2c_master.c: 156:     return returnValue;
  2985  0185  0874               	movf	I2C_Open@returnValue,w
  2986  0186                     l103:
  2987  0186  0008               	return
  2988  0187                     __end_of_I2C_Open:
  2989                           
  2990                           	psect	text14
  2991  0396                     __ptext14:	
  2992 ;; *************** function _I2C_MasterOpen *****************
  2993 ;; Defined at:
  2994 ;;		line 427 in file "../src/i2c_master.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;		None
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;		None
  2999 ;; Return value:  Size  Location     Type
  3000 ;;                  1    wreg      _Bool 
  3001 ;; Registers used:
  3002 ;;		wreg, status,2
  3003 ;; Tracked objects:
  3004 ;;		On entry : 0/0
  3005 ;;		On exit  : 0/0
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3012 ;;Total ram usage:        0 bytes
  3013 ;; Hardware stack levels used:    1
  3014 ;; Hardware stack levels required when called:    3
  3015 ;; This function calls:
  3016 ;;		Nothing
  3017 ;; This function is called by:
  3018 ;;		_I2C_Open
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           
  3023                           ;psect for function _I2C_MasterOpen
  3024  0396                     _I2C_MasterOpen:
  3025  0396                     l1938:	
  3026                           ;incstack = 0
  3027                           ; Regs used in _I2C_MasterOpen: [wreg+status,2]
  3028                           
  3029                           
  3030                           ;../src/i2c_master.c: 429:     if(!SSP1CON1bits.SSPEN)
  3031  0396  0024               	movlb	4	; select bank4
  3032  0397  1A95               	btfsc	21,5	;volatile
  3033  0398  2B9A               	goto	u401
  3034  0399  2B9B               	goto	u400
  3035  039A                     u401:
  3036  039A  2BA2               	goto	l233
  3037  039B                     u400:
  3038  039B                     l1940:
  3039                           
  3040                           ;../src/i2c_master.c: 430:     {;../src/i2c_master.c: 431:         SSP1STAT = 0x00;
  3041  039B  0194               	clrf	20	;volatile
  3042  039C                     l1942:
  3043                           
  3044                           ;../src/i2c_master.c: 432:         SSP1CON1 = 0x08;
  3045  039C  3008               	movlw	8
  3046  039D  0095               	movwf	21	;volatile
  3047  039E                     l1944:
  3048                           
  3049                           ;../src/i2c_master.c: 433:         SSP1CON2 = 0x00;
  3050  039E  0196               	clrf	22	;volatile
  3051                           
  3052                           ;../src/i2c_master.c: 434:         SSP1ADD = 0x04;
  3053  039F  3004               	movlw	4
  3054  03A0  0092               	movwf	18	;volatile
  3055  03A1                     l1946:
  3056                           
  3057                           ;../src/i2c_master.c: 435:         SSP1CON1bits.SSPEN = 1;
  3058  03A1  1695               	bsf	21,5	;volatile
  3059  03A2                     l233:
  3060  03A2  0008               	return
  3061  03A3                     __end_of_I2C_MasterOpen:
  3062                           
  3063                           	psect	text15
  3064  03FF                     __ptext15:	
  3065 ;; *************** function _I2C_MasterWrite *****************
  3066 ;; Defined at:
  3067 ;;		line 198 in file "../src/i2c_master.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;		None
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;		None
  3072 ;; Return value:  Size  Location     Type
  3073 ;;                  1    wreg      enum E353
  3074 ;; Registers used:
  3075 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3076 ;; Tracked objects:
  3077 ;;		On entry : 0/0
  3078 ;;		On exit  : 0/0
  3079 ;;		Unchanged: 0/0
  3080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3085 ;;Total ram usage:        0 bytes
  3086 ;; Hardware stack levels used:    1
  3087 ;; Hardware stack levels required when called:   10
  3088 ;; This function calls:
  3089 ;;		_I2C_MasterOperation
  3090 ;; This function is called by:
  3091 ;;		_I2C_Write1ByteRegister
  3092 ;; This function uses a non-reentrant model
  3093 ;;
  3094                           
  3095                           
  3096                           ;psect for function _I2C_MasterWrite
  3097  03FF                     _I2C_MasterWrite:
  3098  03FF                     l2600:	
  3099                           ;incstack = 0
  3100                           ; Regs used in _I2C_MasterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3101                           
  3102                           
  3103                           ;../src/i2c_master.c: 200:     return I2C_MasterOperation(0);;	Return value of _I2C_Mast
      +                          erWrite is never used
  3104  03FF  3000               	movlw	0
  3105  0400  3182  2286  3183   	fcall	_I2C_MasterOperation
  3106  0403                     l116:
  3107  0403  0008               	return
  3108  0404                     __end_of_I2C_MasterWrite:
  3109                           
  3110                           	psect	text16
  3111  0286                     __ptext16:	
  3112 ;; *************** function _I2C_MasterOperation *****************
  3113 ;; Defined at:
  3114 ;;		line 174 in file "../src/i2c_master.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;  read            1    wreg     _Bool 
  3117 ;; Auto vars:     Size  Location     Type
  3118 ;;  read            1    0[BANK0 ] _Bool 
  3119 ;;  returnValue     1    1[BANK0 ] enum E353
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  1    wreg      enum E353
  3122 ;; Registers used:
  3123 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3130 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3131 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3132 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3133 ;;Total ram usage:        3 bytes
  3134 ;; Hardware stack levels used:    1
  3135 ;; Hardware stack levels required when called:    9
  3136 ;; This function calls:
  3137 ;;		_I2C_MasterStart
  3138 ;;		_I2C_Poller
  3139 ;; This function is called by:
  3140 ;;		_I2C_MasterWrite
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           
  3145                           ;psect for function _I2C_MasterOperation
  3146  0286                     _I2C_MasterOperation:
  3147                           
  3148                           ;incstack = 0
  3149                           ; Regs used in _I2C_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3150                           ;I2C_MasterOperation@read stored from wreg
  3151  0286  0020               	movlb	0	; select bank0
  3152  0287  00C2               	movwf	I2C_MasterOperation@read
  3153  0288                     l2530:
  3154                           
  3155                           ;../src/i2c_master.c: 174: i2c_error_t I2C_MasterOperation(_Bool read);../src/i2c_master
      +                          .c: 175: {;../src/i2c_master.c: 176:     i2c_error_t returnValue = I2C_BUSY;
  3156  0288  01C3               	clrf	I2C_MasterOperation@returnValue
  3157  0289  0AC3               	incf	I2C_MasterOperation@returnValue,f
  3158                           
  3159                           ;../src/i2c_master.c: 177:     if(!I2C_Status.busy)
  3160  028A  18BC               	btfsc	_I2C_Status+28,1
  3161  028B  2A8D               	goto	u701
  3162  028C  2A8E               	goto	u700
  3163  028D                     u701:
  3164  028D  2AA2               	goto	l2546
  3165  028E                     u700:
  3166  028E                     l2532:
  3167                           
  3168                           ;../src/i2c_master.c: 178:     {;../src/i2c_master.c: 179:         I2C_Status.busy = 1;
  3169  028E  14BC               	bsf	_I2C_Status+28,1
  3170  028F                     l2534:
  3171                           
  3172                           ;../src/i2c_master.c: 180:         returnValue = I2C_NOERR;
  3173  028F  01C3               	clrf	I2C_MasterOperation@returnValue
  3174  0290                     l2536:
  3175                           
  3176                           ;../src/i2c_master.c: 182:         if(read)
  3177  0290  0842               	movf	I2C_MasterOperation@read,w
  3178  0291  1903               	btfsc	3,2
  3179  0292  2A94               	goto	u711
  3180  0293  2A95               	goto	u710
  3181  0294                     u711:
  3182  0294  2A98               	goto	l2540
  3183  0295                     u710:
  3184  0295                     l2538:
  3185                           
  3186                           ;../src/i2c_master.c: 183:         {;../src/i2c_master.c: 184:             I2C_Status.st
      +                          ate = I2C_SEND_ADR_READ;
  3187  0295  01BA               	clrf	_I2C_Status+26
  3188  0296  0ABA               	incf	_I2C_Status+26,f
  3189                           
  3190                           ;../src/i2c_master.c: 185:         }
  3191  0297  2A9C               	goto	l2542
  3192  0298                     l2540:
  3193                           
  3194                           ;../src/i2c_master.c: 187:         {;../src/i2c_master.c: 188:             I2C_Status.st
      +                          ate = I2C_SEND_ADR_WRITE;
  3195  0298  3002               	movlw	2
  3196  0299  00F9               	movwf	??_I2C_MasterOperation
  3197  029A  0879               	movf	??_I2C_MasterOperation,w
  3198  029B  00BA               	movwf	_I2C_Status+26
  3199  029C                     l2542:
  3200                           
  3201                           ;../src/i2c_master.c: 190:         I2C_MasterStart();
  3202  029C  3184  2454  3182   	fcall	_I2C_MasterStart
  3203  029F                     l2544:
  3204                           
  3205                           ;../src/i2c_master.c: 191:         I2C_Poller();
  3206  029F  3183  23A3  3182   	fcall	_I2C_Poller
  3207  02A2                     l2546:
  3208                           
  3209                           ;../src/i2c_master.c: 193:     return returnValue;
  3210  02A2  0020               	movlb	0	; select bank0
  3211  02A3  0843               	movf	I2C_MasterOperation@returnValue,w
  3212  02A4                     l113:
  3213  02A4  0008               	return
  3214  02A5                     __end_of_I2C_MasterOperation:
  3215                           
  3216                           	psect	text17
  3217  03A3                     __ptext17:	
  3218 ;; *************** function _I2C_Poller *****************
  3219 ;; Defined at:
  3220 ;;		line 237 in file "../src/i2c_master.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;		None
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;		None
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  1    wreg      void 
  3227 ;; Registers used:
  3228 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3238 ;;Total ram usage:        0 bytes
  3239 ;; Hardware stack levels used:    1
  3240 ;; Hardware stack levels required when called:    8
  3241 ;; This function calls:
  3242 ;;		_I2C_MasterFsm
  3243 ;;		_I2C_MasterWaitForEvent
  3244 ;; This function is called by:
  3245 ;;		_I2C_MasterOperation
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249                           
  3250                           ;psect for function _I2C_Poller
  3251  03A3                     _I2C_Poller:
  3252  03A3                     l2522:	
  3253                           ;incstack = 0
  3254                           ; Regs used in _I2C_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3255                           
  3256                           
  3257                           ;../src/i2c_master.c: 239:     while(I2C_Status.busy)
  3258  03A3  2BAA               	goto	l2528
  3259  03A4                     l2524:
  3260                           
  3261                           ;../src/i2c_master.c: 240:     {;../src/i2c_master.c: 241:         I2C_MasterWaitForEven
      +                          t();
  3262  03A4  3183  23F3  3183   	fcall	_I2C_MasterWaitForEvent
  3263  03A7                     l2526:
  3264                           
  3265                           ;../src/i2c_master.c: 242:         I2C_MasterFsm();
  3266  03A7  3182  2215  3183   	fcall	_I2C_MasterFsm
  3267  03AA                     l2528:
  3268                           
  3269                           ;../src/i2c_master.c: 239:     while(I2C_Status.busy)
  3270  03AA  0020               	movlb	0	; select bank0
  3271  03AB  18BC               	btfsc	_I2C_Status+28,1
  3272  03AC  2BAE               	goto	u691
  3273  03AD  2BAF               	goto	u690
  3274  03AE                     u691:
  3275  03AE  2BA4               	goto	l2524
  3276  03AF                     u690:
  3277  03AF                     l137:
  3278  03AF  0008               	return
  3279  03B0                     __end_of_I2C_Poller:
  3280                           
  3281                           	psect	text18
  3282  03F3                     __ptext18:	
  3283 ;; *************** function _I2C_MasterWaitForEvent *****************
  3284 ;; Defined at:
  3285 ;;		line 509 in file "../src/i2c_master.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;		None
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;		None
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  1    wreg      void 
  3292 ;; Registers used:
  3293 ;;		None
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3303 ;;Total ram usage:        0 bytes
  3304 ;; Hardware stack levels used:    1
  3305 ;; Hardware stack levels required when called:    3
  3306 ;; This function calls:
  3307 ;;		Nothing
  3308 ;; This function is called by:
  3309 ;;		_I2C_Poller
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           
  3314                           ;psect for function _I2C_MasterWaitForEvent
  3315  03F3                     _I2C_MasterWaitForEvent:
  3316  03F3                     l275:	
  3317                           ;incstack = 0
  3318                           ; Regs used in _I2C_MasterWaitForEvent: []
  3319                           ;../src/i2c_master.c: 511:     while(1)
  3320                           
  3321                           
  3322                           ;../src/i2c_master.c: 512:     {;../src/i2c_master.c: 513:         if(PIR1bits.SSP1IF)
  3323  03F3  0020               	movlb	0	; select bank0
  3324  03F4  1D91               	btfss	17,3	;volatile
  3325  03F5  2BF7               	goto	u661
  3326  03F6  2BF8               	goto	u660
  3327  03F7                     u661:
  3328  03F7  2BF3               	goto	l275
  3329  03F8                     u660:
  3330  03F8                     l279:
  3331  03F8  0008               	return
  3332  03F9                     __end_of_I2C_MasterWaitForEvent:
  3333                           
  3334                           	psect	text19
  3335  0215                     __ptext19:	
  3336 ;; *************** function _I2C_MasterFsm *****************
  3337 ;; Defined at:
  3338 ;;		line 246 in file "../src/i2c_master.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;		None
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;		None
  3343 ;; Return value:  Size  Location     Type
  3344 ;;                  1    wreg      void 
  3345 ;; Registers used:
  3346 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3354 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3355 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3356 ;;Total ram usage:        3 bytes
  3357 ;; Hardware stack levels used:    1
  3358 ;; Hardware stack levels required when called:    7
  3359 ;; This function calls:
  3360 ;;		_I2C_DO_ADDRESS_NACK
  3361 ;;		_I2C_DO_IDLE
  3362 ;;		_I2C_DO_RCEN
  3363 ;;		_I2C_DO_RESET
  3364 ;;		_I2C_DO_RX
  3365 ;;		_I2C_DO_RX_ACK
  3366 ;;		_I2C_DO_RX_NACK_RESTART
  3367 ;;		_I2C_DO_RX_NACK_STOP
  3368 ;;		_I2C_DO_SEND_ADR_READ
  3369 ;;		_I2C_DO_SEND_ADR_WRITE
  3370 ;;		_I2C_DO_SEND_RESTART
  3371 ;;		_I2C_DO_SEND_RESTART_READ
  3372 ;;		_I2C_DO_SEND_RESTART_WRITE
  3373 ;;		_I2C_DO_SEND_STOP
  3374 ;;		_I2C_DO_TX
  3375 ;;		_I2C_DO_TX_EMPTY
  3376 ;;		_I2C_MasterClearIrq
  3377 ;;		_I2C_MasterIsNack
  3378 ;; This function is called by:
  3379 ;;		_I2C_Poller
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           
  3384                           ;psect for function _I2C_MasterFsm
  3385  0215                     _I2C_MasterFsm:
  3386  0215                     l2510:	
  3387                           ;incstack = 0
  3388                           ; Regs used in _I2C_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3389                           
  3390                           
  3391                           ;../src/i2c_master.c: 248:     I2C_MasterClearIrq();
  3392  0215  3184  245D  3182   	fcall	_I2C_MasterClearIrq
  3393  0218                     l2512:
  3394                           
  3395                           ;../src/i2c_master.c: 250:     if(I2C_Status.addressNackCheck && I2C_MasterIsNack())
  3396  0218  0020               	movlb	0	; select bank0
  3397  0219  1C3C               	btfss	_I2C_Status+28,0
  3398  021A  2A1C               	goto	u671
  3399  021B  2A1D               	goto	u670
  3400  021C                     u671:
  3401  021C  2A2A               	goto	l2518
  3402  021D                     u670:
  3403  021D                     l2514:
  3404  021D  3183  23F9  3182   	fcall	_I2C_MasterIsNack
  3405  0220  3A00               	xorlw	0
  3406  0221  1903               	skipnz
  3407  0222  2A24               	goto	u681
  3408  0223  2A25               	goto	u680
  3409  0224                     u681:
  3410  0224  2A2A               	goto	l2518
  3411  0225                     u680:
  3412  0225                     l2516:
  3413                           
  3414                           ;../src/i2c_master.c: 251:     {;../src/i2c_master.c: 252:         I2C_Status.state = I2
      +                          C_ADDRESS_NACK;
  3415  0225  300F               	movlw	15
  3416  0226  00F6               	movwf	??_I2C_MasterFsm
  3417  0227  0876               	movf	??_I2C_MasterFsm,w
  3418  0228  0020               	movlb	0	; select bank0
  3419  0229  00BA               	movwf	_I2C_Status+26
  3420  022A                     l2518:
  3421                           
  3422                           ;../src/i2c_master.c: 254:     I2C_Status.state = i2c_fsmStateTable[I2C_Status.state]();
  3423  022A  0020               	movlb	0	; select bank0
  3424  022B  083A               	movf	_I2C_Status+26,w
  3425  022C  00F6               	movwf	??_I2C_MasterFsm
  3426  022D  01F7               	clrf	??_I2C_MasterFsm+1
  3427  022E  35F6               	lslf	??_I2C_MasterFsm,f
  3428  022F  0DF7               	rlf	??_I2C_MasterFsm+1,f
  3429  0230  3066               	movlw	low (_i2c_fsmStateTable| (0+32768))
  3430  0231  0776               	addwf	??_I2C_MasterFsm,w
  3431  0232  0084               	movwf	4
  3432  0233  3082               	movlw	high (_i2c_fsmStateTable| (0+32768))
  3433  0234  3D77               	addwfc	??_I2C_MasterFsm+1,w
  3434  0235  0085               	movwf	5
  3435  0236  3F01               	moviw [1]fsr0
  3436  0237  008A               	movwf	10
  3437  0238  3F00               	moviw [0]fsr0
  3438  0239  000A               	callw
  3439  023A  3182               	pagesel	$
  3440  023B  00F8               	movwf	??_I2C_MasterFsm+2
  3441  023C  0878               	movf	??_I2C_MasterFsm+2,w
  3442  023D  0020               	movlb	0	; select bank0
  3443  023E  00BA               	movwf	_I2C_Status+26
  3444  023F                     l141:
  3445  023F  0008               	return
  3446  0240                     __end_of_I2C_MasterFsm:
  3447                           
  3448                           	psect	text20
  3449  01E9                     __ptext20:	
  3450 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  3451 ;; Defined at:
  3452 ;;		line 401 in file "../src/i2c_master.c"
  3453 ;; Parameters:    Size  Location     Type
  3454 ;;		None
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;		None
  3457 ;; Return value:  Size  Location     Type
  3458 ;;                  1    wreg      enum E2552
  3459 ;; Registers used:
  3460 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3461 ;; Tracked objects:
  3462 ;;		On entry : 0/0
  3463 ;;		On exit  : 0/0
  3464 ;;		Unchanged: 0/0
  3465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3468 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3469 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3470 ;;Total ram usage:        3 bytes
  3471 ;; Hardware stack levels used:    1
  3472 ;; Hardware stack levels required when called:    6
  3473 ;; This function calls:
  3474 ;;		Absolute function
  3475 ;;		_I2C_CallbackReturnReset
  3476 ;;		_I2C_CallbackReturnStop
  3477 ;;		_I2C_DO_SEND_RESTART
  3478 ;;		_I2C_DO_SEND_STOP
  3479 ;;		_wr1RegCompleteHandler
  3480 ;; This function is called by:
  3481 ;;		_I2C_MasterFsm
  3482 ;; This function uses a non-reentrant model
  3483 ;;
  3484                           
  3485                           
  3486                           ;psect for function _I2C_DO_ADDRESS_NACK
  3487  01E9                     _I2C_DO_ADDRESS_NACK:
  3488  01E9                     l2488:	
  3489                           ;incstack = 0
  3490                           ; Regs used in _I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3491                           
  3492                           
  3493                           ;../src/i2c_master.c: 403:     I2C_Status.addressNackCheck = 0;
  3494  01E9  0020               	movlb	0	; select bank0
  3495  01EA  103C               	bcf	_I2C_Status+28,0
  3496  01EB                     l2490:
  3497                           
  3498                           ;../src/i2c_master.c: 404:     I2C_Status.error = I2C_FAIL;
  3499  01EB  3002               	movlw	2
  3500  01EC  00F2               	movwf	??_I2C_DO_ADDRESS_NACK
  3501  01ED  0872               	movf	??_I2C_DO_ADDRESS_NACK,w
  3502  01EE  00BB               	movwf	_I2C_Status+27
  3503                           
  3504                           ;../src/i2c_master.c: 405:     switch(I2C_Status.callbackTable[I2C_ADDR_NACK](I2C_Status
      +                          .callbackPayload[I2C_ADDR_NACK]))
  3505  01EF  29F8               	goto	l2502
  3506  01F0                     l2492:
  3507                           
  3508                           ;../src/i2c_master.c: 409:             return I2C_DO_SEND_RESTART();
  3509  01F0  3184  241D  3181   	fcall	_I2C_DO_SEND_RESTART
  3510  01F3  2A14               	goto	l221
  3511  01F4                     l2496:
  3512                           
  3513                           ;../src/i2c_master.c: 411:             return I2C_DO_SEND_STOP();
  3514  01F4  3184  2418  3181   	fcall	_I2C_DO_SEND_STOP
  3515  01F7  2A14               	goto	l221
  3516  01F8                     l2502:
  3517  01F8  082E               	movf	low ((_I2C_Status| 0+14)),w
  3518  01F9  00F2               	movwf	??_I2C_DO_ADDRESS_NACK
  3519  01FA  0872               	movf	??_I2C_DO_ADDRESS_NACK,w
  3520  01FB  00C2               	movwf	wr1RegCompleteHandler@ptr
  3521  01FC  3004               	movlw	4
  3522  01FD  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  3523  01FE  0086               	movwf	6
  3524  01FF  0187               	clrf	7
  3525  0200  3F41               	moviw [1]fsr1
  3526  0201  008A               	movwf	10
  3527  0202  3F40               	moviw [0]fsr1
  3528  0203  000A               	callw
  3529  0204  3181               	pagesel	$
  3530  0205  00F3               	movwf	??_I2C_DO_ADDRESS_NACK+1
  3531  0206  01F4               	clrf	??_I2C_DO_ADDRESS_NACK+2
  3532                           
  3533                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3534                           ; Switch size 1, requested type "simple"
  3535                           ; Number of cases is 1, Range of values is 0 to 0
  3536                           ; switch strategies available:
  3537                           ; Name         Instructions Cycles
  3538                           ; simple_byte            4     3 (average)
  3539                           ; direct_byte            8     6 (fixed)
  3540                           ; jumptable            260     6 (fixed)
  3541                           ;	Chosen strategy is simple_byte
  3542  0207  0874               	movf	??_I2C_DO_ADDRESS_NACK+2,w
  3543  0208  3A00               	xorlw	0	; case 0
  3544  0209  1903               	skipnz
  3545  020A  2A0C               	goto	l2790
  3546  020B  29F4               	goto	l2496
  3547  020C                     l2790:
  3548                           
  3549                           ; Switch size 1, requested type "simple"
  3550                           ; Number of cases is 2, Range of values is 2 to 3
  3551                           ; switch strategies available:
  3552                           ; Name         Instructions Cycles
  3553                           ; simple_byte            7     4 (average)
  3554                           ; direct_byte           13     9 (fixed)
  3555                           ; jumptable            263     9 (fixed)
  3556                           ;	Chosen strategy is simple_byte
  3557  020C  0873               	movf	??_I2C_DO_ADDRESS_NACK+1,w
  3558  020D  3A02               	xorlw	2	; case 2
  3559  020E  1903               	skipnz
  3560  020F  29F0               	goto	l2492
  3561  0210  3A01               	xorlw	1	; case 3
  3562  0211  1903               	skipnz
  3563  0212  29F0               	goto	l2492
  3564  0213  29F4               	goto	l2496
  3565  0214                     l221:
  3566  0214  0008               	return
  3567  0215                     __end_of_I2C_DO_ADDRESS_NACK:
  3568                           
  3569                           	psect	text21
  3570  0404                     __ptext21:	
  3571 ;; *************** function _I2C_DO_RESET *****************
  3572 ;; Defined at:
  3573 ;;		line 395 in file "../src/i2c_master.c"
  3574 ;; Parameters:    Size  Location     Type
  3575 ;;		None
  3576 ;; Auto vars:     Size  Location     Type
  3577 ;;		None
  3578 ;; Return value:  Size  Location     Type
  3579 ;;                  1    wreg      enum E2552
  3580 ;; Registers used:
  3581 ;;		wreg, status,2
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3591 ;;Total ram usage:        0 bytes
  3592 ;; Hardware stack levels used:    1
  3593 ;; Hardware stack levels required when called:    3
  3594 ;; This function calls:
  3595 ;;		Nothing
  3596 ;; This function is called by:
  3597 ;;		_I2C_MasterFsm
  3598 ;; This function uses a non-reentrant model
  3599 ;;
  3600                           
  3601                           
  3602                           ;psect for function _I2C_DO_RESET
  3603  0404                     _I2C_DO_RESET:
  3604  0404                     l2480:	
  3605                           ;incstack = 0
  3606                           ; Regs used in _I2C_DO_RESET: [wreg+status,2]
  3607                           
  3608                           
  3609                           ;../src/i2c_master.c: 397:     I2C_Status.busy = 0;
  3610  0404  0020               	movlb	0	; select bank0
  3611  0405  10BC               	bcf	_I2C_Status+28,1
  3612  0406                     l2482:
  3613                           
  3614                           ;../src/i2c_master.c: 398:     I2C_Status.error = I2C_NOERR;
  3615  0406  01BB               	clrf	_I2C_Status+27
  3616  0407                     l2484:
  3617                           
  3618                           ;../src/i2c_master.c: 399:     return I2C_RESET;
  3619  0407  300E               	movlw	14
  3620  0408                     l215:
  3621  0408  0008               	return
  3622  0409                     __end_of_I2C_DO_RESET:
  3623                           
  3624                           	psect	text22
  3625  0409                     __ptext22:	
  3626 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  3627 ;; Defined at:
  3628 ;;		line 389 in file "../src/i2c_master.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;		None
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;		None
  3633 ;; Return value:  Size  Location     Type
  3634 ;;                  1    wreg      enum E2552
  3635 ;; Registers used:
  3636 ;;		wreg, status,2, status,0, pclath, cstack
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3646 ;;Total ram usage:        0 bytes
  3647 ;; Hardware stack levels used:    1
  3648 ;; Hardware stack levels required when called:    4
  3649 ;; This function calls:
  3650 ;;		_I2C_MasterSendNack
  3651 ;; This function is called by:
  3652 ;;		_I2C_DO_RX
  3653 ;;		_I2C_MasterFsm
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           
  3658                           ;psect for function _I2C_DO_RX_NACK_RESTART
  3659  0409                     _I2C_DO_RX_NACK_RESTART:
  3660  0409                     l2314:	
  3661                           ;incstack = 0
  3662                           ; Regs used in _I2C_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  3663                           
  3664                           
  3665                           ;../src/i2c_master.c: 391:     I2C_MasterSendNack();
  3666  0409  3184  243E  3184   	fcall	_I2C_MasterSendNack
  3667  040C                     l2316:
  3668                           
  3669                           ;../src/i2c_master.c: 392:     return I2C_SEND_RESTART;
  3670  040C  3009               	movlw	9
  3671  040D                     l212:
  3672  040D  0008               	return
  3673  040E                     __end_of_I2C_DO_RX_NACK_RESTART:
  3674                           
  3675                           	psect	text23
  3676  040E                     __ptext23:	
  3677 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  3678 ;; Defined at:
  3679 ;;		line 383 in file "../src/i2c_master.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;		None
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;		None
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  1    wreg      enum E2552
  3686 ;; Registers used:
  3687 ;;		wreg, status,2, status,0, pclath, cstack
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3697 ;;Total ram usage:        0 bytes
  3698 ;; Hardware stack levels used:    1
  3699 ;; Hardware stack levels required when called:    4
  3700 ;; This function calls:
  3701 ;;		_I2C_MasterSendNack
  3702 ;; This function is called by:
  3703 ;;		_I2C_DO_RX
  3704 ;;		_I2C_MasterFsm
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708                           
  3709                           ;psect for function _I2C_DO_RX_NACK_STOP
  3710  040E                     _I2C_DO_RX_NACK_STOP:
  3711  040E                     l2320:	
  3712                           ;incstack = 0
  3713                           ; Regs used in _I2C_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  3714                           
  3715                           
  3716                           ;../src/i2c_master.c: 385:     I2C_MasterSendNack();
  3717  040E  3184  243E  3184   	fcall	_I2C_MasterSendNack
  3718  0411                     l2322:
  3719                           
  3720                           ;../src/i2c_master.c: 386:     return I2C_SEND_STOP;
  3721  0411  300A               	movlw	10
  3722  0412                     l209:
  3723  0412  0008               	return
  3724  0413                     __end_of_I2C_DO_RX_NACK_STOP:
  3725                           
  3726                           	psect	text24
  3727  0413                     __ptext24:	
  3728 ;; *************** function _I2C_DO_RX_ACK *****************
  3729 ;; Defined at:
  3730 ;;		line 376 in file "../src/i2c_master.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;		None
  3733 ;; Auto vars:     Size  Location     Type
  3734 ;;		None
  3735 ;; Return value:  Size  Location     Type
  3736 ;;                  1    wreg      enum E2552
  3737 ;; Registers used:
  3738 ;;		wreg, status,2, status,0, pclath, cstack
  3739 ;; Tracked objects:
  3740 ;;		On entry : 0/0
  3741 ;;		On exit  : 0/0
  3742 ;;		Unchanged: 0/0
  3743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3748 ;;Total ram usage:        0 bytes
  3749 ;; Hardware stack levels used:    1
  3750 ;; Hardware stack levels required when called:    4
  3751 ;; This function calls:
  3752 ;;		_I2C_MasterSendAck
  3753 ;; This function is called by:
  3754 ;;		_I2C_MasterFsm
  3755 ;; This function uses a non-reentrant model
  3756 ;;
  3757                           
  3758                           
  3759                           ;psect for function _I2C_DO_RX_ACK
  3760  0413                     _I2C_DO_RX_ACK:
  3761  0413                     l2474:	
  3762                           ;incstack = 0
  3763                           ; Regs used in _I2C_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
  3764                           
  3765                           
  3766                           ;../src/i2c_master.c: 378:     I2C_MasterSendAck();
  3767  0413  3184  243A  3184   	fcall	_I2C_MasterSendAck
  3768  0416                     l2476:
  3769                           
  3770                           ;../src/i2c_master.c: 379:     return I2C_RCEN;
  3771  0416  3005               	movlw	5
  3772  0417                     l206:
  3773  0417  0008               	return
  3774  0418                     __end_of_I2C_DO_RX_ACK:
  3775                           
  3776                           	psect	text25
  3777  0418                     __ptext25:	
  3778 ;; *************** function _I2C_DO_SEND_STOP *****************
  3779 ;; Defined at:
  3780 ;;		line 370 in file "../src/i2c_master.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;		None
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;		None
  3785 ;; Return value:  Size  Location     Type
  3786 ;;                  1    wreg      enum E2552
  3787 ;; Registers used:
  3788 ;;		wreg, status,2, status,0, pclath, cstack
  3789 ;; Tracked objects:
  3790 ;;		On entry : 0/0
  3791 ;;		On exit  : 0/0
  3792 ;;		Unchanged: 0/0
  3793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3798 ;;Total ram usage:        0 bytes
  3799 ;; Hardware stack levels used:    1
  3800 ;; Hardware stack levels required when called:    4
  3801 ;; This function calls:
  3802 ;;		_I2C_MasterStop
  3803 ;; This function is called by:
  3804 ;;		_I2C_DO_TX
  3805 ;;		_I2C_DO_TX_EMPTY
  3806 ;;		_I2C_DO_ADDRESS_NACK
  3807 ;;		_I2C_MasterFsm
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           
  3812                           ;psect for function _I2C_DO_SEND_STOP
  3813  0418                     _I2C_DO_SEND_STOP:
  3814  0418                     l2302:	
  3815                           ;incstack = 0
  3816                           ; Regs used in _I2C_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
  3817                           
  3818                           
  3819                           ;../src/i2c_master.c: 372:     I2C_MasterStop();
  3820  0418  3184  244E  3184   	fcall	_I2C_MasterStop
  3821  041B                     l2304:
  3822                           
  3823                           ;../src/i2c_master.c: 373:     return I2C_IDLE;
  3824  041B  3000               	movlw	0
  3825  041C                     l203:
  3826  041C  0008               	return
  3827  041D                     __end_of_I2C_DO_SEND_STOP:
  3828                           
  3829                           	psect	text26
  3830  041D                     __ptext26:	
  3831 ;; *************** function _I2C_DO_SEND_RESTART *****************
  3832 ;; Defined at:
  3833 ;;		line 364 in file "../src/i2c_master.c"
  3834 ;; Parameters:    Size  Location     Type
  3835 ;;		None
  3836 ;; Auto vars:     Size  Location     Type
  3837 ;;		None
  3838 ;; Return value:  Size  Location     Type
  3839 ;;                  1    wreg      enum E2552
  3840 ;; Registers used:
  3841 ;;		wreg, status,2, status,0, pclath, cstack
  3842 ;; Tracked objects:
  3843 ;;		On entry : 0/0
  3844 ;;		On exit  : 0/0
  3845 ;;		Unchanged: 0/0
  3846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3851 ;;Total ram usage:        0 bytes
  3852 ;; Hardware stack levels used:    1
  3853 ;; Hardware stack levels required when called:    4
  3854 ;; This function calls:
  3855 ;;		_I2C_MasterEnableRestart
  3856 ;; This function is called by:
  3857 ;;		_I2C_DO_TX_EMPTY
  3858 ;;		_I2C_DO_ADDRESS_NACK
  3859 ;;		_I2C_MasterFsm
  3860 ;; This function uses a non-reentrant model
  3861 ;;
  3862                           
  3863                           
  3864                           ;psect for function _I2C_DO_SEND_RESTART
  3865  041D                     _I2C_DO_SEND_RESTART:
  3866  041D                     l2328:	
  3867                           ;incstack = 0
  3868                           ; Regs used in _I2C_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
  3869                           
  3870                           
  3871                           ;../src/i2c_master.c: 366:     I2C_MasterEnableRestart();
  3872  041D  3184  2451  3184   	fcall	_I2C_MasterEnableRestart
  3873  0420                     l2330:
  3874                           
  3875                           ;../src/i2c_master.c: 367:     return I2C_SEND_ADR_READ;
  3876  0420  3001               	movlw	1
  3877  0421                     l200:
  3878  0421  0008               	return
  3879  0422                     __end_of_I2C_DO_SEND_RESTART:
  3880                           
  3881                           	psect	text27
  3882  0422                     __ptext27:	
  3883 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  3884 ;; Defined at:
  3885 ;;		line 357 in file "../src/i2c_master.c"
  3886 ;; Parameters:    Size  Location     Type
  3887 ;;		None
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;		None
  3890 ;; Return value:  Size  Location     Type
  3891 ;;                  1    wreg      enum E2552
  3892 ;; Registers used:
  3893 ;;		wreg, status,2, status,0, pclath, cstack
  3894 ;; Tracked objects:
  3895 ;;		On entry : 0/0
  3896 ;;		On exit  : 0/0
  3897 ;;		Unchanged: 0/0
  3898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3903 ;;Total ram usage:        0 bytes
  3904 ;; Hardware stack levels used:    1
  3905 ;; Hardware stack levels required when called:    4
  3906 ;; This function calls:
  3907 ;;		_I2C_MasterEnableRestart
  3908 ;; This function is called by:
  3909 ;;		_I2C_DO_TX
  3910 ;;		_I2C_MasterFsm
  3911 ;; This function uses a non-reentrant model
  3912 ;;
  3913                           
  3914                           
  3915                           ;psect for function _I2C_DO_SEND_RESTART_WRITE
  3916  0422                     _I2C_DO_SEND_RESTART_WRITE:
  3917  0422                     l2296:	
  3918                           ;incstack = 0
  3919                           ; Regs used in _I2C_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  3920                           
  3921                           
  3922                           ;../src/i2c_master.c: 359:     I2C_MasterEnableRestart();
  3923  0422  3184  2451  3184   	fcall	_I2C_MasterEnableRestart
  3924  0425                     l2298:
  3925                           
  3926                           ;../src/i2c_master.c: 360:     return I2C_SEND_ADR_WRITE;
  3927  0425  3002               	movlw	2
  3928  0426                     l197:
  3929  0426  0008               	return
  3930  0427                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  3931                           
  3932                           	psect	text28
  3933  0427                     __ptext28:	
  3934 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  3935 ;; Defined at:
  3936 ;;		line 351 in file "../src/i2c_master.c"
  3937 ;; Parameters:    Size  Location     Type
  3938 ;;		None
  3939 ;; Auto vars:     Size  Location     Type
  3940 ;;		None
  3941 ;; Return value:  Size  Location     Type
  3942 ;;                  1    wreg      enum E2552
  3943 ;; Registers used:
  3944 ;;		wreg, status,2, status,0, pclath, cstack
  3945 ;; Tracked objects:
  3946 ;;		On entry : 0/0
  3947 ;;		On exit  : 0/0
  3948 ;;		Unchanged: 0/0
  3949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3954 ;;Total ram usage:        0 bytes
  3955 ;; Hardware stack levels used:    1
  3956 ;; Hardware stack levels required when called:    4
  3957 ;; This function calls:
  3958 ;;		_I2C_MasterEnableRestart
  3959 ;; This function is called by:
  3960 ;;		_I2C_DO_TX
  3961 ;;		_I2C_MasterFsm
  3962 ;; This function uses a non-reentrant model
  3963 ;;
  3964                           
  3965                           
  3966                           ;psect for function _I2C_DO_SEND_RESTART_READ
  3967  0427                     _I2C_DO_SEND_RESTART_READ:
  3968  0427                     l2290:	
  3969                           ;incstack = 0
  3970                           ; Regs used in _I2C_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
  3971                           
  3972                           
  3973                           ;../src/i2c_master.c: 353:     I2C_MasterEnableRestart();
  3974  0427  3184  2451  3184   	fcall	_I2C_MasterEnableRestart
  3975  042A                     l2292:
  3976                           
  3977                           ;../src/i2c_master.c: 354:     return I2C_SEND_ADR_READ;
  3978  042A  3001               	movlw	1
  3979  042B                     l194:
  3980  042B  0008               	return
  3981  042C                     __end_of_I2C_DO_SEND_RESTART_READ:
  3982                           
  3983                           	psect	text29
  3984  03E0                     __ptext29:	
  3985 ;; *************** function _I2C_DO_RCEN *****************
  3986 ;; Defined at:
  3987 ;;		line 327 in file "../src/i2c_master.c"
  3988 ;; Parameters:    Size  Location     Type
  3989 ;;		None
  3990 ;; Auto vars:     Size  Location     Type
  3991 ;;		None
  3992 ;; Return value:  Size  Location     Type
  3993 ;;                  1    wreg      enum E2552
  3994 ;; Registers used:
  3995 ;;		wreg, status,2, status,0, pclath, cstack
  3996 ;; Tracked objects:
  3997 ;;		On entry : 0/0
  3998 ;;		On exit  : 0/0
  3999 ;;		Unchanged: 0/0
  4000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4005 ;;Total ram usage:        0 bytes
  4006 ;; Hardware stack levels used:    1
  4007 ;; Hardware stack levels required when called:    4
  4008 ;; This function calls:
  4009 ;;		_I2C_MasterStartRx
  4010 ;; This function is called by:
  4011 ;;		_I2C_MasterFsm
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015                           
  4016                           ;psect for function _I2C_DO_RCEN
  4017  03E0                     _I2C_DO_RCEN:
  4018  03E0                     l2442:	
  4019                           ;incstack = 0
  4020                           ; Regs used in _I2C_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
  4021                           
  4022                           
  4023                           ;../src/i2c_master.c: 329:     I2C_Status.addressNackCheck = 0;
  4024  03E0  0020               	movlb	0	; select bank0
  4025  03E1  103C               	bcf	_I2C_Status+28,0
  4026  03E2                     l2444:
  4027                           
  4028                           ;../src/i2c_master.c: 330:     I2C_MasterStartRx();
  4029  03E2  3184  244B  3183   	fcall	_I2C_MasterStartRx
  4030  03E5                     l2446:
  4031                           
  4032                           ;../src/i2c_master.c: 331:     return I2C_RX;
  4033  03E5  3004               	movlw	4
  4034  03E6                     l181:
  4035  03E6  0008               	return
  4036  03E7                     __end_of_I2C_DO_RCEN:
  4037                           
  4038                           	psect	text30
  4039  0107                     __ptext30:	
  4040 ;; *************** function _I2C_DO_RX *****************
  4041 ;; Defined at:
  4042 ;;		line 303 in file "../src/i2c_master.c"
  4043 ;; Parameters:    Size  Location     Type
  4044 ;;		None
  4045 ;; Auto vars:     Size  Location     Type
  4046 ;;		None
  4047 ;; Return value:  Size  Location     Type
  4048 ;;                  1    wreg      enum E2552
  4049 ;; Registers used:
  4050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4051 ;; Tracked objects:
  4052 ;;		On entry : 0/0
  4053 ;;		On exit  : 0/0
  4054 ;;		Unchanged: 0/0
  4055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4058 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4059 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4060 ;;Total ram usage:        3 bytes
  4061 ;; Hardware stack levels used:    1
  4062 ;; Hardware stack levels required when called:    6
  4063 ;; This function calls:
  4064 ;;		Absolute function
  4065 ;;		_I2C_CallbackReturnReset
  4066 ;;		_I2C_CallbackReturnStop
  4067 ;;		_I2C_DO_RX_NACK_RESTART
  4068 ;;		_I2C_DO_RX_NACK_STOP
  4069 ;;		_I2C_MasterGetRxData
  4070 ;;		_I2C_MasterSendAck
  4071 ;;		_wr1RegCompleteHandler
  4072 ;; This function is called by:
  4073 ;;		_I2C_MasterFsm
  4074 ;; This function uses a non-reentrant model
  4075 ;;
  4076                           
  4077                           
  4078                           ;psect for function _I2C_DO_RX
  4079  0107                     _I2C_DO_RX:
  4080  0107                     l2412:	
  4081                           ;incstack = 0
  4082                           ; Regs used in _I2C_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4083                           
  4084                           
  4085                           ;../src/i2c_master.c: 305:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData();
  4086  0107  3184  2448  3181   	fcall	_I2C_MasterGetRxData
  4087  010A  00F2               	movwf	??_I2C_DO_RX
  4088  010B  0020               	movlb	0	; select bank0
  4089  010C  0837               	movf	low ((_I2C_Status| 0+23)),w
  4090  010D  0086               	movwf	6
  4091  010E  0187               	clrf	7
  4092  010F  0872               	movf	??_I2C_DO_RX,w
  4093  0110  0081               	movwf	1
  4094  0111                     l2414:
  4095  0111  3001               	movlw	1
  4096  0112  00F2               	movwf	??_I2C_DO_RX
  4097  0113  0872               	movf	??_I2C_DO_RX,w
  4098  0114  07B7               	addwf	low ((_I2C_Status| 0+23)),f
  4099  0115                     l2416:
  4100                           
  4101                           ;../src/i2c_master.c: 306:     if(--I2C_Status.data_length)
  4102  0115  3001               	movlw	1
  4103  0116  02B8               	subwf	_I2C_Status+24,f
  4104  0117  3000               	movlw	0
  4105  0118  3BB9               	subwfb	_I2C_Status+25,f
  4106  0119  0838               	movf	_I2C_Status+24,w
  4107  011A  0439               	iorwf	_I2C_Status+25,w
  4108  011B  1903               	btfsc	3,2
  4109  011C  291E               	goto	u651
  4110  011D  291F               	goto	u650
  4111  011E                     u651:
  4112  011E  2924               	goto	l169
  4113  011F                     u650:
  4114  011F                     l2418:
  4115                           
  4116                           ;../src/i2c_master.c: 307:     {;../src/i2c_master.c: 308:         I2C_MasterSendAck();
  4117  011F  3184  243A  3181   	fcall	_I2C_MasterSendAck
  4118  0122                     l2420:
  4119                           
  4120                           ;../src/i2c_master.c: 309:         return I2C_RCEN;
  4121  0122  3005               	movlw	5
  4122  0123  294C               	goto	l170
  4123  0124                     l169:	
  4124                           ;../src/i2c_master.c: 311:     else
  4125                           
  4126                           
  4127                           ;../src/i2c_master.c: 312:     {;../src/i2c_master.c: 313:         I2C_Status.bufferFree
      +                           = 1;
  4128  0124  15BC               	bsf	_I2C_Status+28,3
  4129                           
  4130                           ;../src/i2c_master.c: 314:         switch(I2C_Status.callbackTable[I2C_DATA_COMPLETE](I2
      +                          C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  4131  0125  292E               	goto	l2436
  4132  0126                     l2426:
  4133                           
  4134                           ;../src/i2c_master.c: 318:                 return I2C_DO_RX_NACK_RESTART();
  4135  0126  3184  2409  3181   	fcall	_I2C_DO_RX_NACK_RESTART
  4136  0129  294C               	goto	l170
  4137  012A                     l2430:
  4138                           
  4139                           ;../src/i2c_master.c: 322:                 return I2C_DO_RX_NACK_STOP();
  4140  012A  3184  240E  3181   	fcall	_I2C_DO_RX_NACK_STOP
  4141  012D  294C               	goto	l170
  4142  012E                     l2436:
  4143  012E  082C               	movf	low ((_I2C_Status| 0+12)),w
  4144  012F  00F2               	movwf	??_I2C_DO_RX
  4145  0130  0872               	movf	??_I2C_DO_RX,w
  4146  0131  00C2               	movwf	wr1RegCompleteHandler@ptr
  4147  0132  0821               	movf	_I2C_Status+1,w
  4148  0133  008A               	movwf	10
  4149  0134  0820               	movf	_I2C_Status,w
  4150  0135  000A               	callw
  4151  0136  3181               	pagesel	$
  4152  0137  00F3               	movwf	??_I2C_DO_RX+1
  4153  0138  01F4               	clrf	??_I2C_DO_RX+2
  4154                           
  4155                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4156                           ; Switch size 1, requested type "simple"
  4157                           ; Number of cases is 1, Range of values is 0 to 0
  4158                           ; switch strategies available:
  4159                           ; Name         Instructions Cycles
  4160                           ; simple_byte            4     3 (average)
  4161                           ; direct_byte            8     6 (fixed)
  4162                           ; jumptable            260     6 (fixed)
  4163                           ;	Chosen strategy is simple_byte
  4164  0139  0874               	movf	??_I2C_DO_RX+2,w
  4165  013A  3A00               	xorlw	0	; case 0
  4166  013B  1903               	skipnz
  4167  013C  293E               	goto	l2792
  4168  013D  292A               	goto	l2430
  4169  013E                     l2792:
  4170                           
  4171                           ; Switch size 1, requested type "simple"
  4172                           ; Number of cases is 4, Range of values is 1 to 4
  4173                           ; switch strategies available:
  4174                           ; Name         Instructions Cycles
  4175                           ; simple_byte           13     7 (average)
  4176                           ; direct_byte           17     9 (fixed)
  4177                           ; jumptable            263     9 (fixed)
  4178                           ;	Chosen strategy is simple_byte
  4179  013E  0873               	movf	??_I2C_DO_RX+1,w
  4180  013F  3A01               	xorlw	1	; case 1
  4181  0140  1903               	skipnz
  4182  0141  292A               	goto	l2430
  4183  0142  3A03               	xorlw	3	; case 2
  4184  0143  1903               	skipnz
  4185  0144  2926               	goto	l2426
  4186  0145  3A01               	xorlw	1	; case 3
  4187  0146  1903               	skipnz
  4188  0147  2926               	goto	l2426
  4189  0148  3A07               	xorlw	7	; case 4
  4190  0149  1903               	skipnz
  4191  014A  292A               	goto	l2430
  4192  014B  292A               	goto	l2430
  4193  014C                     l170:
  4194  014C  0008               	return
  4195  014D                     __end_of_I2C_DO_RX:
  4196                           
  4197                           	psect	text31
  4198  00B2                     __ptext31:	
  4199 ;; *************** function _I2C_DO_TX *****************
  4200 ;; Defined at:
  4201 ;;		line 279 in file "../src/i2c_master.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;		None
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;		None
  4206 ;; Return value:  Size  Location     Type
  4207 ;;                  1    wreg      enum E2552
  4208 ;; Registers used:
  4209 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4210 ;; Tracked objects:
  4211 ;;		On entry : 0/0
  4212 ;;		On exit  : 0/0
  4213 ;;		Unchanged: 0/0
  4214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4217 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4218 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4219 ;;Total ram usage:        3 bytes
  4220 ;; Hardware stack levels used:    1
  4221 ;; Hardware stack levels required when called:    6
  4222 ;; This function calls:
  4223 ;;		Absolute function
  4224 ;;		_I2C_CallbackReturnReset
  4225 ;;		_I2C_CallbackReturnStop
  4226 ;;		_I2C_DO_SEND_RESTART_READ
  4227 ;;		_I2C_DO_SEND_RESTART_WRITE
  4228 ;;		_I2C_DO_SEND_STOP
  4229 ;;		_I2C_MasterIsNack
  4230 ;;		_I2C_MasterSendTxData
  4231 ;;		_wr1RegCompleteHandler
  4232 ;; This function is called by:
  4233 ;;		_I2C_MasterFsm
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           
  4237                           
  4238                           ;psect for function _I2C_DO_TX
  4239  00B2                     _I2C_DO_TX:
  4240  00B2                     l2378:	
  4241                           ;incstack = 0
  4242                           ; Regs used in _I2C_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4243                           
  4244                           
  4245                           ;../src/i2c_master.c: 281:     if(I2C_MasterIsNack())
  4246  00B2  3183  23F9  3180   	fcall	_I2C_MasterIsNack
  4247  00B5  3A00               	xorlw	0
  4248  00B6  1903               	skipnz
  4249  00B7  28B9               	goto	u631
  4250  00B8  28BA               	goto	u630
  4251  00B9                     u631:
  4252  00B9  28EA               	goto	l153
  4253  00BA                     u630:
  4254  00BA  28C7               	goto	l2396
  4255  00BB                     l2382:
  4256                           
  4257                           ;../src/i2c_master.c: 286:                 return I2C_DO_SEND_RESTART_READ();
  4258  00BB  3184  2427  3180   	fcall	_I2C_DO_SEND_RESTART_READ
  4259  00BE  2906               	goto	l156
  4260  00BF                     l2386:
  4261                           
  4262                           ;../src/i2c_master.c: 288:                   return I2C_DO_SEND_RESTART_WRITE();
  4263  00BF  3184  2422  3180   	fcall	_I2C_DO_SEND_RESTART_WRITE
  4264  00C2  2906               	goto	l156
  4265  00C3                     l2390:
  4266                           
  4267                           ;../src/i2c_master.c: 292:                 return I2C_DO_SEND_STOP();
  4268  00C3  3184  2418  3180   	fcall	_I2C_DO_SEND_STOP
  4269  00C6  2906               	goto	l156
  4270  00C7                     l2396:
  4271  00C7  0020               	movlb	0	; select bank0
  4272  00C8  082F               	movf	low ((_I2C_Status| 0+15)),w
  4273  00C9  00F3               	movwf	??_I2C_DO_TX
  4274  00CA  0873               	movf	??_I2C_DO_TX,w
  4275  00CB  00C2               	movwf	wr1RegCompleteHandler@ptr
  4276  00CC  3006               	movlw	6
  4277  00CD  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  4278  00CE  0086               	movwf	6
  4279  00CF  0187               	clrf	7
  4280  00D0  3F41               	moviw [1]fsr1
  4281  00D1  008A               	movwf	10
  4282  00D2  3F40               	moviw [0]fsr1
  4283  00D3  000A               	callw
  4284  00D4  3180               	pagesel	$
  4285  00D5  00F4               	movwf	??_I2C_DO_TX+1
  4286  00D6  01F5               	clrf	??_I2C_DO_TX+2
  4287                           
  4288                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4289                           ; Switch size 1, requested type "simple"
  4290                           ; Number of cases is 1, Range of values is 0 to 0
  4291                           ; switch strategies available:
  4292                           ; Name         Instructions Cycles
  4293                           ; simple_byte            4     3 (average)
  4294                           ; direct_byte            8     6 (fixed)
  4295                           ; jumptable            260     6 (fixed)
  4296                           ;	Chosen strategy is simple_byte
  4297  00D7  0875               	movf	??_I2C_DO_TX+2,w
  4298  00D8  3A00               	xorlw	0	; case 0
  4299  00D9  1903               	skipnz
  4300  00DA  28DC               	goto	l2794
  4301  00DB  28C3               	goto	l2390
  4302  00DC                     l2794:
  4303                           
  4304                           ; Switch size 1, requested type "simple"
  4305                           ; Number of cases is 4, Range of values is 1 to 4
  4306                           ; switch strategies available:
  4307                           ; Name         Instructions Cycles
  4308                           ; simple_byte           13     7 (average)
  4309                           ; direct_byte           17     9 (fixed)
  4310                           ; jumptable            263     9 (fixed)
  4311                           ;	Chosen strategy is simple_byte
  4312  00DC  0874               	movf	??_I2C_DO_TX+1,w
  4313  00DD  3A01               	xorlw	1	; case 1
  4314  00DE  1903               	skipnz
  4315  00DF  28C3               	goto	l2390
  4316  00E0  3A03               	xorlw	3	; case 2
  4317  00E1  1903               	skipnz
  4318  00E2  28BB               	goto	l2382
  4319  00E3  3A01               	xorlw	1	; case 3
  4320  00E4  1903               	skipnz
  4321  00E5  28BF               	goto	l2386
  4322  00E6  3A07               	xorlw	7	; case 4
  4323  00E7  1903               	skipnz
  4324  00E8  28C3               	goto	l2390
  4325  00E9  28C3               	goto	l2390
  4326  00EA                     l153:	
  4327                           ;../src/i2c_master.c: 295:     else
  4328                           
  4329                           
  4330                           ;../src/i2c_master.c: 296:     {;../src/i2c_master.c: 297:         I2C_Status.addressNac
      +                          kCheck = 0;
  4331  00EA  0020               	movlb	0	; select bank0
  4332  00EB  103C               	bcf	_I2C_Status+28,0
  4333  00EC                     l2398:
  4334                           
  4335                           ;../src/i2c_master.c: 298:         I2C_MasterSendTxData(*I2C_Status.data_ptr++);
  4336  00EC  3017               	movlw	23
  4337  00ED  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  4338  00EE  0086               	movwf	6
  4339  00EF  0187               	clrf	7
  4340  00F0  3F40               	moviw [0]fsr1
  4341  00F1  0084               	movwf	4
  4342  00F2  0185               	clrf	5
  4343  00F3  0A81               	incf	1,f
  4344  00F4  0800               	movf	0,w
  4345  00F5  3184  2431  3180   	fcall	_I2C_MasterSendTxData
  4346  00F8                     l2400:
  4347                           
  4348                           ;../src/i2c_master.c: 299:         return (--I2C_Status.data_length)?I2C_TX:I2C_TX_EMPTY
      +                          ;
  4349  00F8  3001               	movlw	1
  4350  00F9  0020               	movlb	0	; select bank0
  4351  00FA  02B8               	subwf	_I2C_Status+24,f
  4352  00FB  3000               	movlw	0
  4353  00FC  3BB9               	subwfb	_I2C_Status+25,f
  4354  00FD  0838               	movf	_I2C_Status+24,w
  4355  00FE  0439               	iorwf	_I2C_Status+25,w
  4356  00FF  1D03               	btfss	3,2
  4357  0100  2902               	goto	u641
  4358  0101  2903               	goto	u640
  4359  0102                     u641:
  4360  0102  2905               	goto	l2404
  4361  0103                     u640:
  4362  0103                     l2402:
  4363  0103  3006               	movlw	6
  4364  0104  2906               	goto	l156
  4365  0105                     l2404:
  4366  0105  3003               	movlw	3
  4367  0106                     l156:
  4368  0106  0008               	return
  4369  0107                     __end_of_I2C_DO_TX:
  4370                           
  4371                           	psect	text32
  4372  03D8                     __ptext32:	
  4373 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  4374 ;; Defined at:
  4375 ;;		line 272 in file "../src/i2c_master.c"
  4376 ;; Parameters:    Size  Location     Type
  4377 ;;		None
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;		None
  4380 ;; Return value:  Size  Location     Type
  4381 ;;                  1    wreg      enum E2552
  4382 ;; Registers used:
  4383 ;;		wreg, status,2, status,0, pclath, cstack
  4384 ;; Tracked objects:
  4385 ;;		On entry : 0/0
  4386 ;;		On exit  : 0/0
  4387 ;;		Unchanged: 0/0
  4388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4393 ;;Total ram usage:        0 bytes
  4394 ;; Hardware stack levels used:    1
  4395 ;; Hardware stack levels required when called:    4
  4396 ;; This function calls:
  4397 ;;		_I2C_MasterSendTxData
  4398 ;; This function is called by:
  4399 ;;		_I2C_MasterFsm
  4400 ;; This function uses a non-reentrant model
  4401 ;;
  4402                           
  4403                           
  4404                           ;psect for function _I2C_DO_SEND_ADR_WRITE
  4405  03D8                     _I2C_DO_SEND_ADR_WRITE:
  4406  03D8                     l2370:	
  4407                           ;incstack = 0
  4408                           ; Regs used in _I2C_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  4409                           
  4410                           
  4411                           ;../src/i2c_master.c: 274:     I2C_Status.addressNackCheck = 1;
  4412  03D8  0020               	movlb	0	; select bank0
  4413  03D9  143C               	bsf	_I2C_Status+28,0
  4414  03DA                     l2372:
  4415                           
  4416                           ;../src/i2c_master.c: 275:     I2C_MasterSendTxData((uint8_t) (I2C_Status.address << 1))
      +                          ;
  4417  03DA  3536               	lslf	_I2C_Status+22,w
  4418  03DB  3184  2431  3183   	fcall	_I2C_MasterSendTxData
  4419  03DE                     l2374:
  4420                           
  4421                           ;../src/i2c_master.c: 276:     return I2C_TX;
  4422  03DE  3003               	movlw	3
  4423  03DF                     l150:
  4424  03DF  0008               	return
  4425  03E0                     __end_of_I2C_DO_SEND_ADR_WRITE:
  4426                           
  4427                           	psect	text33
  4428  03CF                     __ptext33:	
  4429 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  4430 ;; Defined at:
  4431 ;;		line 265 in file "../src/i2c_master.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;		None
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;		None
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  1    wreg      enum E2552
  4438 ;; Registers used:
  4439 ;;		wreg, status,2, status,0, pclath, cstack
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4449 ;;Total ram usage:        0 bytes
  4450 ;; Hardware stack levels used:    1
  4451 ;; Hardware stack levels required when called:    4
  4452 ;; This function calls:
  4453 ;;		_I2C_MasterSendTxData
  4454 ;; This function is called by:
  4455 ;;		_I2C_MasterFsm
  4456 ;; This function uses a non-reentrant model
  4457 ;;
  4458                           
  4459                           
  4460                           ;psect for function _I2C_DO_SEND_ADR_READ
  4461  03CF                     _I2C_DO_SEND_ADR_READ:
  4462  03CF                     l2362:	
  4463                           ;incstack = 0
  4464                           ; Regs used in _I2C_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  4465                           
  4466                           
  4467                           ;../src/i2c_master.c: 267:     I2C_Status.addressNackCheck = 1;
  4468  03CF  0020               	movlb	0	; select bank0
  4469  03D0  143C               	bsf	_I2C_Status+28,0
  4470  03D1                     l2364:
  4471                           
  4472                           ;../src/i2c_master.c: 268:     I2C_MasterSendTxData((uint8_t) (I2C_Status.address << 1 |
      +                           1));
  4473  03D1  1403               	setc
  4474  03D2  0D36               	rlf	_I2C_Status+22,w
  4475  03D3  3184  2431  3183   	fcall	_I2C_MasterSendTxData
  4476  03D6                     l2366:
  4477                           
  4478                           ;../src/i2c_master.c: 269:     return I2C_RCEN;
  4479  03D6  3005               	movlw	5
  4480  03D7                     l147:
  4481  03D7  0008               	return
  4482  03D8                     __end_of_I2C_DO_SEND_ADR_READ:
  4483                           
  4484                           	psect	text34
  4485  042C                     __ptext34:	
  4486 ;; *************** function _I2C_DO_IDLE *****************
  4487 ;; Defined at:
  4488 ;;		line 258 in file "../src/i2c_master.c"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;		None
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;		None
  4493 ;; Return value:  Size  Location     Type
  4494 ;;                  1    wreg      enum E2552
  4495 ;; Registers used:
  4496 ;;		wreg, status,2
  4497 ;; Tracked objects:
  4498 ;;		On entry : 0/0
  4499 ;;		On exit  : 0/0
  4500 ;;		Unchanged: 0/0
  4501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4506 ;;Total ram usage:        0 bytes
  4507 ;; Hardware stack levels used:    1
  4508 ;; Hardware stack levels required when called:    3
  4509 ;; This function calls:
  4510 ;;		Nothing
  4511 ;; This function is called by:
  4512 ;;		_I2C_MasterFsm
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516                           
  4517                           ;psect for function _I2C_DO_IDLE
  4518  042C                     _I2C_DO_IDLE:
  4519  042C                     l2354:	
  4520                           ;incstack = 0
  4521                           ; Regs used in _I2C_DO_IDLE: [wreg+status,2]
  4522                           
  4523                           
  4524                           ;../src/i2c_master.c: 260:     I2C_Status.busy = 0;
  4525  042C  0020               	movlb	0	; select bank0
  4526  042D  10BC               	bcf	_I2C_Status+28,1
  4527  042E                     l2356:
  4528                           
  4529                           ;../src/i2c_master.c: 261:     I2C_Status.error = I2C_NOERR;
  4530  042E  01BB               	clrf	_I2C_Status+27
  4531  042F                     l2358:
  4532                           
  4533                           ;../src/i2c_master.c: 262:     return I2C_RESET;
  4534  042F  300E               	movlw	14
  4535  0430                     l144:
  4536  0430  0008               	return
  4537  0431                     __end_of_I2C_DO_IDLE:
  4538                           
  4539                           	psect	text35
  4540  01BA                     __ptext35:	
  4541 ;; *************** function _I2C_DO_TX_EMPTY *****************
  4542 ;; Defined at:
  4543 ;;		line 334 in file "../src/i2c_master.c"
  4544 ;; Parameters:    Size  Location     Type
  4545 ;;		None
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;		None
  4548 ;; Return value:  Size  Location     Type
  4549 ;;                  1    wreg      enum E2552
  4550 ;; Registers used:
  4551 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4559 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4560 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4561 ;;Total ram usage:        3 bytes
  4562 ;; Hardware stack levels used:    1
  4563 ;; Hardware stack levels required when called:    6
  4564 ;; This function calls:
  4565 ;;		Absolute function
  4566 ;;		_I2C_CallbackReturnReset
  4567 ;;		_I2C_CallbackReturnStop
  4568 ;;		_I2C_DO_SEND_RESTART
  4569 ;;		_I2C_DO_SEND_STOP
  4570 ;;		_I2C_MasterSetIrq
  4571 ;;		_wr1RegCompleteHandler
  4572 ;; This function is called by:
  4573 ;;		_I2C_MasterFsm
  4574 ;; This function uses a non-reentrant model
  4575 ;;
  4576                           
  4577                           
  4578                           ;psect for function _I2C_DO_TX_EMPTY
  4579  01BA                     _I2C_DO_TX_EMPTY:
  4580  01BA                     l2450:	
  4581                           ;incstack = 0
  4582                           ; Regs used in _I2C_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4583                           
  4584                           
  4585                           ;../src/i2c_master.c: 336:     I2C_Status.bufferFree = 1;
  4586  01BA  0020               	movlb	0	; select bank0
  4587  01BB  15BC               	bsf	_I2C_Status+28,3
  4588                           
  4589                           ;../src/i2c_master.c: 337:     switch(I2C_Status.callbackTable[I2C_DATA_COMPLETE](I2C_St
      +                          atus.callbackPayload[I2C_DATA_COMPLETE]))
  4590  01BC  29CA               	goto	l2468
  4591  01BD                     l2452:
  4592                           
  4593                           ;../src/i2c_master.c: 341:             return I2C_DO_SEND_RESTART();
  4594  01BD  3184  241D  3181   	fcall	_I2C_DO_SEND_RESTART
  4595  01C0  29E8               	goto	l187
  4596  01C1                     l2456:
  4597                           
  4598                           ;../src/i2c_master.c: 343:             I2C_MasterSetIrq();
  4599  01C1  3184  2445  3181   	fcall	_I2C_MasterSetIrq
  4600  01C4                     l2458:
  4601                           
  4602                           ;../src/i2c_master.c: 344:             return I2C_TX;
  4603  01C4  3003               	movlw	3
  4604  01C5  29E8               	goto	l187
  4605  01C6                     l2462:
  4606                           
  4607                           ;../src/i2c_master.c: 347:             return I2C_DO_SEND_STOP();
  4608  01C6  3184  2418  3181   	fcall	_I2C_DO_SEND_STOP
  4609  01C9  29E8               	goto	l187
  4610  01CA                     l2468:
  4611  01CA  082C               	movf	low ((_I2C_Status| 0+12)),w
  4612  01CB  00F2               	movwf	??_I2C_DO_TX_EMPTY
  4613  01CC  0872               	movf	??_I2C_DO_TX_EMPTY,w
  4614  01CD  00C2               	movwf	wr1RegCompleteHandler@ptr
  4615  01CE  0821               	movf	_I2C_Status+1,w
  4616  01CF  008A               	movwf	10
  4617  01D0  0820               	movf	_I2C_Status,w
  4618  01D1  000A               	callw
  4619  01D2  3181               	pagesel	$
  4620  01D3  00F3               	movwf	??_I2C_DO_TX_EMPTY+1
  4621  01D4  01F4               	clrf	??_I2C_DO_TX_EMPTY+2
  4622                           
  4623                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4624                           ; Switch size 1, requested type "simple"
  4625                           ; Number of cases is 1, Range of values is 0 to 0
  4626                           ; switch strategies available:
  4627                           ; Name         Instructions Cycles
  4628                           ; simple_byte            4     3 (average)
  4629                           ; direct_byte            8     6 (fixed)
  4630                           ; jumptable            260     6 (fixed)
  4631                           ;	Chosen strategy is simple_byte
  4632  01D5  0874               	movf	??_I2C_DO_TX_EMPTY+2,w
  4633  01D6  3A00               	xorlw	0	; case 0
  4634  01D7  1903               	skipnz
  4635  01D8  29DA               	goto	l2796
  4636  01D9  29C6               	goto	l2462
  4637  01DA                     l2796:
  4638                           
  4639                           ; Switch size 1, requested type "simple"
  4640                           ; Number of cases is 4, Range of values is 1 to 4
  4641                           ; switch strategies available:
  4642                           ; Name         Instructions Cycles
  4643                           ; simple_byte           13     7 (average)
  4644                           ; direct_byte           17     9 (fixed)
  4645                           ; jumptable            263     9 (fixed)
  4646                           ;	Chosen strategy is simple_byte
  4647  01DA  0873               	movf	??_I2C_DO_TX_EMPTY+1,w
  4648  01DB  3A01               	xorlw	1	; case 1
  4649  01DC  1903               	skipnz
  4650  01DD  29C6               	goto	l2462
  4651  01DE  3A03               	xorlw	3	; case 2
  4652  01DF  1903               	skipnz
  4653  01E0  29BD               	goto	l2452
  4654  01E1  3A01               	xorlw	1	; case 3
  4655  01E2  1903               	skipnz
  4656  01E3  29BD               	goto	l2452
  4657  01E4  3A07               	xorlw	7	; case 4
  4658  01E5  1903               	skipnz
  4659  01E6  29C1               	goto	l2456
  4660  01E7  29C6               	goto	l2462
  4661  01E8                     l187:
  4662  01E8  0008               	return
  4663  01E9                     __end_of_I2C_DO_TX_EMPTY:
  4664                           
  4665                           	psect	text36
  4666  0445                     __ptext36:	
  4667 ;; *************** function _I2C_MasterSetIrq *****************
  4668 ;; Defined at:
  4669 ;;		line 504 in file "../src/i2c_master.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;		None
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;		None
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  1    wreg      void 
  4676 ;; Registers used:
  4677 ;;		None
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4687 ;;Total ram usage:        0 bytes
  4688 ;; Hardware stack levels used:    1
  4689 ;; Hardware stack levels required when called:    3
  4690 ;; This function calls:
  4691 ;;		Nothing
  4692 ;; This function is called by:
  4693 ;;		_I2C_DO_TX_EMPTY
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697                           
  4698                           ;psect for function _I2C_MasterSetIrq
  4699  0445                     _I2C_MasterSetIrq:
  4700  0445                     l2334:	
  4701                           ;incstack = 0
  4702                           ; Regs used in _I2C_MasterSetIrq: []
  4703                           
  4704                           
  4705                           ;../src/i2c_master.c: 506:     PIR1bits.SSP1IF = 1;
  4706  0445  0020               	movlb	0	; select bank0
  4707  0446  1591               	bsf	17,3	;volatile
  4708  0447                     l272:
  4709  0447  0008               	return
  4710  0448                     __end_of_I2C_MasterSetIrq:
  4711                           
  4712                           	psect	text37
  4713  03F9                     __ptext37:	
  4714 ;; *************** function _I2C_MasterIsNack *****************
  4715 ;; Defined at:
  4716 ;;		line 477 in file "../src/i2c_master.c"
  4717 ;; Parameters:    Size  Location     Type
  4718 ;;		None
  4719 ;; Auto vars:     Size  Location     Type
  4720 ;;		None
  4721 ;; Return value:  Size  Location     Type
  4722 ;;                  1    wreg      _Bool 
  4723 ;; Registers used:
  4724 ;;		wreg, status,2, status,0
  4725 ;; Tracked objects:
  4726 ;;		On entry : 0/0
  4727 ;;		On exit  : 0/0
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4734 ;;Total ram usage:        0 bytes
  4735 ;; Hardware stack levels used:    1
  4736 ;; Hardware stack levels required when called:    3
  4737 ;; This function calls:
  4738 ;;		Nothing
  4739 ;; This function is called by:
  4740 ;;		_I2C_MasterFsm
  4741 ;;		_I2C_DO_TX
  4742 ;; This function uses a non-reentrant model
  4743 ;;
  4744                           
  4745                           
  4746                           ;psect for function _I2C_MasterIsNack
  4747  03F9                     _I2C_MasterIsNack:
  4748  03F9                     l2284:	
  4749                           ;incstack = 0
  4750                           ; Regs used in _I2C_MasterIsNack: [wreg+status,2+status,0]
  4751                           
  4752                           
  4753                           ;../src/i2c_master.c: 479:     return SSP1CON2bits.ACKSTAT;
  4754  03F9  0024               	movlb	4	; select bank4
  4755  03FA  0E16               	swapf	22,w	;volatile
  4756  03FB  0C89               	rrf	9,f
  4757  03FC  0C89               	rrf	9,f
  4758  03FD  3901               	andlw	1
  4759  03FE                     l257:
  4760  03FE  0008               	return
  4761  03FF                     __end_of_I2C_MasterIsNack:
  4762                           
  4763                           	psect	text38
  4764  0431                     __ptext38:	
  4765 ;; *************** function _I2C_MasterSendTxData *****************
  4766 ;; Defined at:
  4767 ;;		line 452 in file "../src/i2c_master.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;  data            1    wreg     unsigned char 
  4770 ;; Auto vars:     Size  Location     Type
  4771 ;;  data            1    2[COMMON] unsigned char 
  4772 ;; Return value:  Size  Location     Type
  4773 ;;                  1    wreg      void 
  4774 ;; Registers used:
  4775 ;;		wreg
  4776 ;; Tracked objects:
  4777 ;;		On entry : 0/0
  4778 ;;		On exit  : 0/0
  4779 ;;		Unchanged: 0/0
  4780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4782 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4784 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4785 ;;Total ram usage:        1 bytes
  4786 ;; Hardware stack levels used:    1
  4787 ;; Hardware stack levels required when called:    3
  4788 ;; This function calls:
  4789 ;;		Nothing
  4790 ;; This function is called by:
  4791 ;;		_I2C_DO_SEND_ADR_READ
  4792 ;;		_I2C_DO_SEND_ADR_WRITE
  4793 ;;		_I2C_DO_TX
  4794 ;; This function uses a non-reentrant model
  4795 ;;
  4796                           
  4797                           
  4798                           ;psect for function _I2C_MasterSendTxData
  4799  0431                     _I2C_MasterSendTxData:
  4800                           
  4801                           ;incstack = 0
  4802                           ; Regs used in _I2C_MasterSendTxData: [wreg]
  4803                           ;I2C_MasterSendTxData@data stored from wreg
  4804  0431  00F2               	movwf	I2C_MasterSendTxData@data
  4805  0432                     l2288:
  4806                           
  4807                           ;../src/i2c_master.c: 452: static __attribute__((inline)) void I2C_MasterSendTxData(uint
      +                          8_t data);../src/i2c_master.c: 453: {;../src/i2c_master.c: 454:     SSP1BUF = data;
  4808  0432  0872               	movf	I2C_MasterSendTxData@data,w
  4809  0433  0024               	movlb	4	; select bank4
  4810  0434  0091               	movwf	17	;volatile
  4811  0435                     l242:
  4812  0435  0008               	return
  4813  0436                     __end_of_I2C_MasterSendTxData:
  4814                           
  4815                           	psect	text39
  4816  043A                     __ptext39:	
  4817 ;; *************** function _I2C_MasterSendAck *****************
  4818 ;; Defined at:
  4819 ;;		line 482 in file "../src/i2c_master.c"
  4820 ;; Parameters:    Size  Location     Type
  4821 ;;		None
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;		None
  4824 ;; Return value:  Size  Location     Type
  4825 ;;                  1    wreg      void 
  4826 ;; Registers used:
  4827 ;;		None
  4828 ;; Tracked objects:
  4829 ;;		On entry : 0/0
  4830 ;;		On exit  : 0/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4837 ;;Total ram usage:        0 bytes
  4838 ;; Hardware stack levels used:    1
  4839 ;; Hardware stack levels required when called:    3
  4840 ;; This function calls:
  4841 ;;		Nothing
  4842 ;; This function is called by:
  4843 ;;		_I2C_DO_RX
  4844 ;;		_I2C_DO_RX_ACK
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           
  4848                           
  4849                           ;psect for function _I2C_MasterSendAck
  4850  043A                     _I2C_MasterSendAck:
  4851  043A                     l2312:	
  4852                           ;incstack = 0
  4853                           ; Regs used in _I2C_MasterSendAck: []
  4854                           
  4855                           
  4856                           ;../src/i2c_master.c: 484:     SSP1CON2bits.ACKDT = 0;
  4857  043A  0024               	movlb	4	; select bank4
  4858  043B  1296               	bcf	22,5	;volatile
  4859                           
  4860                           ;../src/i2c_master.c: 485:     SSP1CON2bits.ACKEN = 1;
  4861  043C  1616               	bsf	22,4	;volatile
  4862  043D                     l260:
  4863  043D  0008               	return
  4864  043E                     __end_of_I2C_MasterSendAck:
  4865                           
  4866                           	psect	text40
  4867  0448                     __ptext40:	
  4868 ;; *************** function _I2C_MasterGetRxData *****************
  4869 ;; Defined at:
  4870 ;;		line 447 in file "../src/i2c_master.c"
  4871 ;; Parameters:    Size  Location     Type
  4872 ;;		None
  4873 ;; Auto vars:     Size  Location     Type
  4874 ;;		None
  4875 ;; Return value:  Size  Location     Type
  4876 ;;                  1    wreg      unsigned char 
  4877 ;; Registers used:
  4878 ;;		wreg
  4879 ;; Tracked objects:
  4880 ;;		On entry : 0/0
  4881 ;;		On exit  : 0/0
  4882 ;;		Unchanged: 0/0
  4883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4888 ;;Total ram usage:        0 bytes
  4889 ;; Hardware stack levels used:    1
  4890 ;; Hardware stack levels required when called:    3
  4891 ;; This function calls:
  4892 ;;		Nothing
  4893 ;; This function is called by:
  4894 ;;		_I2C_DO_RX
  4895 ;; This function uses a non-reentrant model
  4896 ;;
  4897                           
  4898                           
  4899                           ;psect for function _I2C_MasterGetRxData
  4900  0448                     _I2C_MasterGetRxData:
  4901  0448                     l2308:	
  4902                           ;incstack = 0
  4903                           ; Regs used in _I2C_MasterGetRxData: [wreg]
  4904                           
  4905                           
  4906                           ;../src/i2c_master.c: 449:     return SSP1BUF;
  4907  0448  0024               	movlb	4	; select bank4
  4908  0449  0811               	movf	17,w	;volatile
  4909  044A                     l239:
  4910  044A  0008               	return
  4911  044B                     __end_of_I2C_MasterGetRxData:
  4912                           
  4913                           	psect	text41
  4914  043E                     __ptext41:	
  4915 ;; *************** function _I2C_MasterSendNack *****************
  4916 ;; Defined at:
  4917 ;;		line 488 in file "../src/i2c_master.c"
  4918 ;; Parameters:    Size  Location     Type
  4919 ;;		None
  4920 ;; Auto vars:     Size  Location     Type
  4921 ;;		None
  4922 ;; Return value:  Size  Location     Type
  4923 ;;                  1    wreg      void 
  4924 ;; Registers used:
  4925 ;;		None
  4926 ;; Tracked objects:
  4927 ;;		On entry : 0/0
  4928 ;;		On exit  : 0/0
  4929 ;;		Unchanged: 0/0
  4930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4935 ;;Total ram usage:        0 bytes
  4936 ;; Hardware stack levels used:    1
  4937 ;; Hardware stack levels required when called:    3
  4938 ;; This function calls:
  4939 ;;		Nothing
  4940 ;; This function is called by:
  4941 ;;		_I2C_DO_RX_NACK_STOP
  4942 ;;		_I2C_DO_RX_NACK_RESTART
  4943 ;; This function uses a non-reentrant model
  4944 ;;
  4945                           
  4946                           
  4947                           ;psect for function _I2C_MasterSendNack
  4948  043E                     _I2C_MasterSendNack:
  4949  043E                     l2282:	
  4950                           ;incstack = 0
  4951                           ; Regs used in _I2C_MasterSendNack: []
  4952                           
  4953                           
  4954                           ;../src/i2c_master.c: 490:     SSP1CON2bits.ACKDT = 1;
  4955  043E  0024               	movlb	4	; select bank4
  4956  043F  1696               	bsf	22,5	;volatile
  4957                           
  4958                           ;../src/i2c_master.c: 491:     SSP1CON2bits.ACKEN = 1;
  4959  0440  1616               	bsf	22,4	;volatile
  4960  0441                     l263:
  4961  0441  0008               	return
  4962  0442                     __end_of_I2C_MasterSendNack:
  4963                           
  4964                           	psect	text42
  4965  044B                     __ptext42:	
  4966 ;; *************** function _I2C_MasterStartRx *****************
  4967 ;; Defined at:
  4968 ;;		line 462 in file "../src/i2c_master.c"
  4969 ;; Parameters:    Size  Location     Type
  4970 ;;		None
  4971 ;; Auto vars:     Size  Location     Type
  4972 ;;		None
  4973 ;; Return value:  Size  Location     Type
  4974 ;;                  1    wreg      void 
  4975 ;; Registers used:
  4976 ;;		None
  4977 ;; Tracked objects:
  4978 ;;		On entry : 0/0
  4979 ;;		On exit  : 0/0
  4980 ;;		Unchanged: 0/0
  4981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4986 ;;Total ram usage:        0 bytes
  4987 ;; Hardware stack levels used:    1
  4988 ;; Hardware stack levels required when called:    3
  4989 ;; This function calls:
  4990 ;;		Nothing
  4991 ;; This function is called by:
  4992 ;;		_I2C_DO_RCEN
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           
  4997                           ;psect for function _I2C_MasterStartRx
  4998  044B                     _I2C_MasterStartRx:
  4999  044B                     l2326:	
  5000                           ;incstack = 0
  5001                           ; Regs used in _I2C_MasterStartRx: []
  5002                           
  5003                           
  5004                           ;../src/i2c_master.c: 464:     SSP1CON2bits.RCEN = 1;
  5005  044B  0024               	movlb	4	; select bank4
  5006  044C  1596               	bsf	22,3	;volatile
  5007  044D                     l248:
  5008  044D  0008               	return
  5009  044E                     __end_of_I2C_MasterStartRx:
  5010                           
  5011                           	psect	text43
  5012  0463                     __ptext43:	
  5013 ;; *************** function _I2C_CallbackReturnReset *****************
  5014 ;; Defined at:
  5015 ;;		line 421 in file "../src/i2c_master.c"
  5016 ;; Parameters:    Size  Location     Type
  5017 ;;  funPtr          1    0[BANK0 ] PTR void 
  5018 ;;		 -> I2C_Write1ByteRegister@data(1), NULL(0), 
  5019 ;; Auto vars:     Size  Location     Type
  5020 ;;		None
  5021 ;; Return value:  Size  Location     Type
  5022 ;;                  1    wreg      enum E358
  5023 ;; Registers used:
  5024 ;;		wreg
  5025 ;; Tracked objects:
  5026 ;;		On entry : 0/0
  5027 ;;		On exit  : 0/0
  5028 ;;		Unchanged: 0/0
  5029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5030 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5033 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5034 ;;Total ram usage:        1 bytes
  5035 ;; Hardware stack levels used:    1
  5036 ;; Hardware stack levels required when called:    3
  5037 ;; This function calls:
  5038 ;;		Nothing
  5039 ;; This function is called by:
  5040 ;;		_I2C_Open
  5041 ;;		_I2C_DO_TX
  5042 ;;		_I2C_DO_RX
  5043 ;;		_I2C_DO_TX_EMPTY
  5044 ;;		_I2C_DO_ADDRESS_NACK
  5045 ;; This function uses a non-reentrant model
  5046 ;;
  5047                           
  5048                           
  5049                           ;psect for function _I2C_CallbackReturnReset
  5050  0463                     _I2C_CallbackReturnReset:
  5051  0463                     l2340:	
  5052                           ;incstack = 0
  5053                           ; Regs used in _I2C_CallbackReturnReset: [wreg]
  5054                           
  5055                           
  5056                           ;../src/i2c_master.c: 421: i2c_operations_t I2C_CallbackReturnReset(void *funPtr);../src
      +                          /i2c_master.c: 422: {;../src/i2c_master.c: 423:     return I2C_RESET_LINK;
  5057  0463  3005               	movlw	5
  5058  0464                     l229:
  5059  0464  0008               	return
  5060  0465                     __end_of_I2C_CallbackReturnReset:
  5061                           
  5062                           	psect	text44
  5063  0465                     __ptext44:	
  5064 ;; *************** function _I2C_CallbackReturnStop *****************
  5065 ;; Defined at:
  5066 ;;		line 416 in file "../src/i2c_master.c"
  5067 ;; Parameters:    Size  Location     Type
  5068 ;;  funPtr          1    0[BANK0 ] PTR void 
  5069 ;;		 -> I2C_Write1ByteRegister@data(1), NULL(0), 
  5070 ;; Auto vars:     Size  Location     Type
  5071 ;;		None
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  1    wreg      enum E358
  5074 ;; Registers used:
  5075 ;;		wreg
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5081 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5084 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5085 ;;Total ram usage:        1 bytes
  5086 ;; Hardware stack levels used:    1
  5087 ;; Hardware stack levels required when called:    3
  5088 ;; This function calls:
  5089 ;;		Nothing
  5090 ;; This function is called by:
  5091 ;;		_I2C_Open
  5092 ;;		_I2C_SetCallback
  5093 ;;		_I2C_DO_TX
  5094 ;;		_I2C_DO_RX
  5095 ;;		_I2C_DO_TX_EMPTY
  5096 ;;		_I2C_DO_ADDRESS_NACK
  5097 ;; This function uses a non-reentrant model
  5098 ;;
  5099                           
  5100                           
  5101                           ;psect for function _I2C_CallbackReturnStop
  5102  0465                     _I2C_CallbackReturnStop:
  5103  0465                     l2336:	
  5104                           ;incstack = 0
  5105                           ; Regs used in _I2C_CallbackReturnStop: [wreg]
  5106                           
  5107                           
  5108                           ;../src/i2c_master.c: 416: i2c_operations_t I2C_CallbackReturnStop(void *funPtr);../src/
      +                          i2c_master.c: 417: {;../src/i2c_master.c: 418:     return I2C_STOP;
  5109  0465  3001               	movlw	1
  5110  0466                     l226:
  5111  0466  0008               	return
  5112  0467                     __end_of_I2C_CallbackReturnStop:
  5113                           
  5114                           	psect	text45
  5115  0337                     __ptext45:	
  5116 ;; *************** function _wr1RegCompleteHandler *****************
  5117 ;; Defined at:
  5118 ;;		line 22 in file "../src/i2c_master_functions.c"
  5119 ;; Parameters:    Size  Location     Type
  5120 ;;  ptr             1    0[BANK0 ] PTR void 
  5121 ;;		 -> I2C_Write1ByteRegister@data(1), NULL(0), 
  5122 ;; Auto vars:     Size  Location     Type
  5123 ;;		None
  5124 ;; Return value:  Size  Location     Type
  5125 ;;                  1    wreg      enum E358
  5126 ;; Registers used:
  5127 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5128 ;; Tracked objects:
  5129 ;;		On entry : 0/0
  5130 ;;		On exit  : 0/0
  5131 ;;		Unchanged: 0/0
  5132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5133 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5136 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5137 ;;Total ram usage:        1 bytes
  5138 ;; Hardware stack levels used:    1
  5139 ;; Hardware stack levels required when called:    5
  5140 ;; This function calls:
  5141 ;;		_I2C_SetBuffer
  5142 ;;		_I2C_SetDataCompleteCallback
  5143 ;; This function is called by:
  5144 ;;		_I2C_Write1ByteRegister
  5145 ;;		_I2C_DO_TX
  5146 ;;		_I2C_DO_RX
  5147 ;;		_I2C_DO_TX_EMPTY
  5148 ;;		_I2C_DO_ADDRESS_NACK
  5149 ;; This function uses a non-reentrant model
  5150 ;;
  5151                           
  5152                           
  5153                           ;psect for function _wr1RegCompleteHandler
  5154  0337                     _wr1RegCompleteHandler:
  5155  0337                     l2344:	
  5156                           ;incstack = 0
  5157                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  5158                           
  5159                           
  5160                           ;../src/i2c_master_functions.c: 22: static i2c_operations_t wr1RegCompleteHandler(void *
      +                          ptr);../src/i2c_master_functions.c: 23: {;../src/i2c_master_functions.c: 24:     I2C_Set
      +                          Buffer(ptr,1);
  5161  0337  3001               	movlw	1
  5162  0338  00F2               	movwf	I2C_SetBuffer@bufferSize
  5163  0339  3000               	movlw	0
  5164  033A  00F3               	movwf	I2C_SetBuffer@bufferSize+1
  5165  033B  0020               	movlb	0	; select bank0
  5166  033C  0842               	movf	wr1RegCompleteHandler@ptr,w
  5167  033D  3183  236A  3183   	fcall	_I2C_SetBuffer
  5168  0340                     l2346:
  5169                           
  5170                           ;../src/i2c_master_functions.c: 25:     I2C_SetDataCompleteCallback(((void*)0),((void*)0
      +                          ));
  5171  0340  3000               	movlw	0
  5172  0341  00F7               	movwf	I2C_SetDataCompleteCallback@cb
  5173  0342  00F8               	movwf	I2C_SetDataCompleteCallback@cb+1
  5174  0343  01F9               	clrf	I2C_SetDataCompleteCallback@ptr
  5175  0344  3183  23B0  3183   	fcall	_I2C_SetDataCompleteCallback
  5176  0347                     l2348:
  5177                           
  5178                           ;../src/i2c_master_functions.c: 26:     return I2C_CONTINUE;
  5179  0347  3004               	movlw	4
  5180  0348                     l307:
  5181  0348  0008               	return
  5182  0349                     __end_of_wr1RegCompleteHandler:
  5183                           
  5184                           	psect	text46
  5185  03B0                     __ptext46:	
  5186 ;; *************** function _I2C_SetDataCompleteCallback *****************
  5187 ;; Defined at:
  5188 ;;		line 213 in file "../src/i2c_master.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;  cb              2    7[COMMON] PTR FTN(PTR void ,)enum 
  5191 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
  5192 ;;  ptr             1    9[COMMON] PTR void 
  5193 ;;		 -> I2C_Write1ByteRegister@data(1), NULL(0), 
  5194 ;; Auto vars:     Size  Location     Type
  5195 ;;		None
  5196 ;; Return value:  Size  Location     Type
  5197 ;;                  1    wreg      void 
  5198 ;; Registers used:
  5199 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5200 ;; Tracked objects:
  5201 ;;		On entry : 0/0
  5202 ;;		On exit  : 0/0
  5203 ;;		Unchanged: 0/0
  5204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5205 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5207 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5208 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5209 ;;Total ram usage:        4 bytes
  5210 ;; Hardware stack levels used:    1
  5211 ;; Hardware stack levels required when called:    4
  5212 ;; This function calls:
  5213 ;;		_I2C_SetCallback
  5214 ;; This function is called by:
  5215 ;;		_I2C_Write1ByteRegister
  5216 ;;		_wr1RegCompleteHandler
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219                           
  5220                           
  5221                           ;psect for function _I2C_SetDataCompleteCallback
  5222  03B0                     _I2C_SetDataCompleteCallback:
  5223  03B0                     l2276:	
  5224                           ;incstack = 0
  5225                           ; Regs used in _I2C_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  5226                           
  5227                           
  5228                           ;../src/i2c_master.c: 213: void I2C_SetDataCompleteCallback(i2c_callback_t cb, void *ptr
      +                          );../src/i2c_master.c: 214: {;../src/i2c_master.c: 215:     I2C_SetCallback(I2C_DATA_COM
      +                          PLETE, cb, ptr);
  5229  03B0  0878               	movf	I2C_SetDataCompleteCallback@cb+1,w
  5230  03B1  00F3               	movwf	I2C_SetCallback@cb+1
  5231  03B2  0877               	movf	I2C_SetDataCompleteCallback@cb,w
  5232  03B3  00F2               	movwf	I2C_SetCallback@cb
  5233  03B4  0879               	movf	I2C_SetDataCompleteCallback@ptr,w
  5234  03B5  00FA               	movwf	??_I2C_SetDataCompleteCallback
  5235  03B6  087A               	movf	??_I2C_SetDataCompleteCallback,w
  5236  03B7  00F4               	movwf	I2C_SetCallback@ptr
  5237  03B8  3000               	movlw	0
  5238  03B9  3182  2240  3183   	fcall	_I2C_SetCallback
  5239  03BC                     l123:
  5240  03BC  0008               	return
  5241  03BD                     __end_of_I2C_SetDataCompleteCallback:
  5242                           
  5243                           	psect	text47
  5244  0240                     __ptext47:	
  5245 ;; *************** function _I2C_SetCallback *****************
  5246 ;; Defined at:
  5247 ;;		line 223 in file "../src/i2c_master.c"
  5248 ;; Parameters:    Size  Location     Type
  5249 ;;  idx             1    wreg     enum E2570
  5250 ;;  cb              2    2[COMMON] PTR FTN(PTR void ,)enum 
  5251 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
  5252 ;;  ptr             1    4[COMMON] PTR void 
  5253 ;;		 -> I2C_Write1ByteRegister@data(1), NULL(0), 
  5254 ;; Auto vars:     Size  Location     Type
  5255 ;;  idx             1    6[COMMON] enum E2570
  5256 ;; Return value:  Size  Location     Type
  5257 ;;                  1    wreg      void 
  5258 ;; Registers used:
  5259 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5260 ;; Tracked objects:
  5261 ;;		On entry : 0/0
  5262 ;;		On exit  : 0/0
  5263 ;;		Unchanged: 0/0
  5264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5265 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5266 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5267 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5268 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5269 ;;Total ram usage:        5 bytes
  5270 ;; Hardware stack levels used:    1
  5271 ;; Hardware stack levels required when called:    3
  5272 ;; This function calls:
  5273 ;;		Nothing
  5274 ;; This function is called by:
  5275 ;;		_I2C_SetDataCompleteCallback
  5276 ;;		_I2C_SetAddressNackCallback
  5277 ;; This function uses a non-reentrant model
  5278 ;;
  5279                           
  5280                           
  5281                           ;psect for function _I2C_SetCallback
  5282  0240                     _I2C_SetCallback:
  5283                           
  5284                           ;incstack = 0
  5285                           ; Regs used in _I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
  5286                           ;I2C_SetCallback@idx stored from wreg
  5287  0240  00F6               	movwf	I2C_SetCallback@idx
  5288  0241                     l2264:
  5289                           
  5290                           ;../src/i2c_master.c: 223: static void I2C_SetCallback(i2c_callbackIndex_t idx, i2c_call
      +                          back_t cb, void *ptr);../src/i2c_master.c: 224: {;../src/i2c_master.c: 225:     if(cb)
  5291  0241  0872               	movf	I2C_SetCallback@cb,w
  5292  0242  0473               	iorwf	I2C_SetCallback@cb+1,w
  5293  0243  1903               	btfsc	3,2
  5294  0244  2A46               	goto	u611
  5295  0245  2A47               	goto	u610
  5296  0246                     u611:
  5297  0246  2A58               	goto	l2268
  5298  0247                     u610:
  5299  0247                     l2266:
  5300                           
  5301                           ;../src/i2c_master.c: 226:     {;../src/i2c_master.c: 227:         I2C_Status.callbackTa
      +                          ble[idx] = cb;
  5302  0247  3576               	lslf	I2C_SetCallback@idx,w
  5303  0248  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  5304  0249  0086               	movwf	6
  5305  024A  0187               	clrf	7
  5306  024B  0872               	movf	I2C_SetCallback@cb,w
  5307  024C  3FC0               	movwi [0]fsr1
  5308  024D  0873               	movf	I2C_SetCallback@cb+1,w
  5309  024E  3FC1               	movwi [1]fsr1
  5310                           
  5311                           ;../src/i2c_master.c: 228:         I2C_Status.callbackPayload[idx] = ptr;
  5312  024F  0874               	movf	I2C_SetCallback@ptr,w
  5313  0250  00F5               	movwf	??_I2C_SetCallback
  5314  0251  0876               	movf	I2C_SetCallback@idx,w
  5315  0252  3E2C               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  5316  0253  0086               	movwf	6
  5317  0254  0187               	clrf	7
  5318  0255  0875               	movf	??_I2C_SetCallback,w
  5319  0256  0081               	movwf	1
  5320                           
  5321                           ;../src/i2c_master.c: 229:     }
  5322  0257  2A65               	goto	l131
  5323  0258                     l2268:
  5324                           
  5325                           ;../src/i2c_master.c: 231:     {;../src/i2c_master.c: 232:         I2C_Status.callbackTa
      +                          ble[idx] = I2C_CallbackReturnStop;
  5326  0258  3576               	lslf	I2C_SetCallback@idx,w
  5327  0259  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  5328  025A  0086               	movwf	6
  5329  025B  0187               	clrf	7
  5330  025C  3065               	movlw	low _I2C_CallbackReturnStop
  5331  025D  3FC0               	movwi [0]fsr1
  5332  025E  3004               	movlw	high _I2C_CallbackReturnStop
  5333  025F  3FC1               	movwi [1]fsr1
  5334                           
  5335                           ;../src/i2c_master.c: 233:         I2C_Status.callbackPayload[idx] = ((void*)0);
  5336  0260  0876               	movf	I2C_SetCallback@idx,w
  5337  0261  3E2C               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  5338  0262  0086               	movwf	6
  5339  0263  0187               	clrf	7
  5340  0264  0181               	clrf	1
  5341  0265                     l131:
  5342  0265  0008               	return
  5343  0266                     __end_of_I2C_SetCallback:
  5344                           
  5345                           	psect	text48
  5346  036A                     __ptext48:	
  5347 ;; *************** function _I2C_SetBuffer *****************
  5348 ;; Defined at:
  5349 ;;		line 203 in file "../src/i2c_master.c"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;  buffer          1    wreg     PTR void 
  5352 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), NULL(0), 
  5353 ;;  bufferSize      2    2[COMMON] unsigned int 
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;  buffer          1    5[COMMON] PTR void 
  5356 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), NULL(0), 
  5357 ;; Return value:  Size  Location     Type
  5358 ;;                  1    wreg      void 
  5359 ;; Registers used:
  5360 ;;		wreg
  5361 ;; Tracked objects:
  5362 ;;		On entry : 0/0
  5363 ;;		On exit  : 0/0
  5364 ;;		Unchanged: 0/0
  5365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5366 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5367 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5368 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5369 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5370 ;;Total ram usage:        4 bytes
  5371 ;; Hardware stack levels used:    1
  5372 ;; Hardware stack levels required when called:    3
  5373 ;; This function calls:
  5374 ;;		Nothing
  5375 ;; This function is called by:
  5376 ;;		_I2C_Write1ByteRegister
  5377 ;;		_wr1RegCompleteHandler
  5378 ;; This function uses a non-reentrant model
  5379 ;;
  5380                           
  5381                           
  5382                           ;psect for function _I2C_SetBuffer
  5383  036A                     _I2C_SetBuffer:
  5384                           
  5385                           ;incstack = 0
  5386                           ; Regs used in _I2C_SetBuffer: [wreg]
  5387                           ;I2C_SetBuffer@buffer stored from wreg
  5388  036A  00F5               	movwf	I2C_SetBuffer@buffer
  5389  036B                     l2270:
  5390                           
  5391                           ;../src/i2c_master.c: 203: void I2C_SetBuffer(void *buffer, size_t bufferSize);../src/i2
      +                          c_master.c: 204: {;../src/i2c_master.c: 205:     if(I2C_Status.bufferFree)
  5392  036B  0020               	movlb	0	; select bank0
  5393  036C  1DBC               	btfss	_I2C_Status+28,3
  5394  036D  2B6F               	goto	u621
  5395  036E  2B70               	goto	u620
  5396  036F                     u621:
  5397  036F  2B79               	goto	l120
  5398  0370                     u620:
  5399  0370                     l2272:
  5400                           
  5401                           ;../src/i2c_master.c: 206:     {;../src/i2c_master.c: 207:         I2C_Status.data_ptr =
      +                           buffer;
  5402  0370  0875               	movf	I2C_SetBuffer@buffer,w
  5403  0371  00F4               	movwf	??_I2C_SetBuffer
  5404  0372  0874               	movf	??_I2C_SetBuffer,w
  5405  0373  00B7               	movwf	low ((_I2C_Status| 0+23))
  5406                           
  5407                           ;../src/i2c_master.c: 208:         I2C_Status.data_length = bufferSize;
  5408  0374  0873               	movf	I2C_SetBuffer@bufferSize+1,w
  5409  0375  00B9               	movwf	_I2C_Status+25
  5410  0376  0872               	movf	I2C_SetBuffer@bufferSize,w
  5411  0377  00B8               	movwf	_I2C_Status+24
  5412  0378                     l2274:
  5413                           
  5414                           ;../src/i2c_master.c: 209:         I2C_Status.bufferFree = 0;
  5415  0378  11BC               	bcf	_I2C_Status+28,3
  5416  0379                     l120:
  5417  0379  0008               	return
  5418  037A                     __end_of_I2C_SetBuffer:
  5419                           
  5420                           	psect	text49
  5421  044E                     __ptext49:	
  5422 ;; *************** function _I2C_MasterStop *****************
  5423 ;; Defined at:
  5424 ;;		line 472 in file "../src/i2c_master.c"
  5425 ;; Parameters:    Size  Location     Type
  5426 ;;		None
  5427 ;; Auto vars:     Size  Location     Type
  5428 ;;		None
  5429 ;; Return value:  Size  Location     Type
  5430 ;;                  1    wreg      void 
  5431 ;; Registers used:
  5432 ;;		None
  5433 ;; Tracked objects:
  5434 ;;		On entry : 0/0
  5435 ;;		On exit  : 0/0
  5436 ;;		Unchanged: 0/0
  5437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5442 ;;Total ram usage:        0 bytes
  5443 ;; Hardware stack levels used:    1
  5444 ;; Hardware stack levels required when called:    3
  5445 ;; This function calls:
  5446 ;;		Nothing
  5447 ;; This function is called by:
  5448 ;;		_I2C_DO_SEND_STOP
  5449 ;; This function uses a non-reentrant model
  5450 ;;
  5451                           
  5452                           
  5453                           ;psect for function _I2C_MasterStop
  5454  044E                     _I2C_MasterStop:
  5455  044E                     l2280:	
  5456                           ;incstack = 0
  5457                           ; Regs used in _I2C_MasterStop: []
  5458                           
  5459                           
  5460                           ;../src/i2c_master.c: 474:     SSP1CON2bits.PEN = 1;
  5461  044E  0024               	movlb	4	; select bank4
  5462  044F  1516               	bsf	22,2	;volatile
  5463  0450                     l254:
  5464  0450  0008               	return
  5465  0451                     __end_of_I2C_MasterStop:
  5466                           
  5467                           	psect	text50
  5468  0451                     __ptext50:	
  5469 ;; *************** function _I2C_MasterEnableRestart *****************
  5470 ;; Defined at:
  5471 ;;		line 457 in file "../src/i2c_master.c"
  5472 ;; Parameters:    Size  Location     Type
  5473 ;;		None
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;		None
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  1    wreg      void 
  5478 ;; Registers used:
  5479 ;;		None
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5489 ;;Total ram usage:        0 bytes
  5490 ;; Hardware stack levels used:    1
  5491 ;; Hardware stack levels required when called:    3
  5492 ;; This function calls:
  5493 ;;		Nothing
  5494 ;; This function is called by:
  5495 ;;		_I2C_DO_SEND_RESTART_READ
  5496 ;;		_I2C_DO_SEND_RESTART_WRITE
  5497 ;;		_I2C_DO_SEND_RESTART
  5498 ;; This function uses a non-reentrant model
  5499 ;;
  5500                           
  5501                           
  5502                           ;psect for function _I2C_MasterEnableRestart
  5503  0451                     _I2C_MasterEnableRestart:
  5504  0451                     l2278:	
  5505                           ;incstack = 0
  5506                           ; Regs used in _I2C_MasterEnableRestart: []
  5507                           
  5508                           
  5509                           ;../src/i2c_master.c: 459:     SSP1CON2bits.RSEN = 1;
  5510  0451  0024               	movlb	4	; select bank4
  5511  0452  1496               	bsf	22,1	;volatile
  5512  0453                     l245:
  5513  0453  0008               	return
  5514  0454                     __end_of_I2C_MasterEnableRestart:
  5515                           
  5516                           	psect	text51
  5517  0454                     __ptext51:	
  5518 ;; *************** function _I2C_MasterStart *****************
  5519 ;; Defined at:
  5520 ;;		line 467 in file "../src/i2c_master.c"
  5521 ;; Parameters:    Size  Location     Type
  5522 ;;		None
  5523 ;; Auto vars:     Size  Location     Type
  5524 ;;		None
  5525 ;; Return value:  Size  Location     Type
  5526 ;;                  1    wreg      void 
  5527 ;; Registers used:
  5528 ;;		None
  5529 ;; Tracked objects:
  5530 ;;		On entry : 0/0
  5531 ;;		On exit  : 0/0
  5532 ;;		Unchanged: 0/0
  5533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5538 ;;Total ram usage:        0 bytes
  5539 ;; Hardware stack levels used:    1
  5540 ;; Hardware stack levels required when called:    3
  5541 ;; This function calls:
  5542 ;;		Nothing
  5543 ;; This function is called by:
  5544 ;;		_I2C_MasterOperation
  5545 ;; This function uses a non-reentrant model
  5546 ;;
  5547                           
  5548                           
  5549                           ;psect for function _I2C_MasterStart
  5550  0454                     _I2C_MasterStart:
  5551  0454                     l2520:	
  5552                           ;incstack = 0
  5553                           ; Regs used in _I2C_MasterStart: []
  5554                           
  5555                           
  5556                           ;../src/i2c_master.c: 469:     SSP1CON2bits.SEN = 1;
  5557  0454  0024               	movlb	4	; select bank4
  5558  0455  1416               	bsf	22,0	;volatile
  5559  0456                     l251:
  5560  0456  0008               	return
  5561  0457                     __end_of_I2C_MasterStart:
  5562                           
  5563                           	psect	text52
  5564  02C2                     __ptext52:	
  5565 ;; *************** function _I2C_Close *****************
  5566 ;; Defined at:
  5567 ;;		line 159 in file "../src/i2c_master.c"
  5568 ;; Parameters:    Size  Location     Type
  5569 ;;		None
  5570 ;; Auto vars:     Size  Location     Type
  5571 ;;  returnValue     1    3[COMMON] enum E353
  5572 ;; Return value:  Size  Location     Type
  5573 ;;                  1    wreg      enum E353
  5574 ;; Registers used:
  5575 ;;		wreg, status,2, status,0, pclath, cstack
  5576 ;; Tracked objects:
  5577 ;;		On entry : 0/0
  5578 ;;		On exit  : 0/0
  5579 ;;		Unchanged: 0/0
  5580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5582 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5583 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5584 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5585 ;;Total ram usage:        2 bytes
  5586 ;; Hardware stack levels used:    1
  5587 ;; Hardware stack levels required when called:    4
  5588 ;; This function calls:
  5589 ;;		_I2C_MasterClearIrq
  5590 ;;		_I2C_MasterClose
  5591 ;;		_I2C_MasterDisableIrq
  5592 ;; This function is called by:
  5593 ;;		_I2C_Write1ByteRegister
  5594 ;; This function uses a non-reentrant model
  5595 ;;
  5596                           
  5597                           
  5598                           ;psect for function _I2C_Close
  5599  02C2                     _I2C_Close:
  5600  02C2                     l2582:	
  5601                           ;incstack = 0
  5602                           ; Regs used in _I2C_Close: [wreg+status,2+status,0+pclath+cstack]
  5603                           
  5604                           
  5605                           ;../src/i2c_master.c: 161:     i2c_error_t returnValue = I2C_BUSY;
  5606  02C2  01F3               	clrf	I2C_Close@returnValue
  5607  02C3  0AF3               	incf	I2C_Close@returnValue,f
  5608                           
  5609                           ;../src/i2c_master.c: 162:     if(!I2C_Status.busy)
  5610  02C4  0020               	movlb	0	; select bank0
  5611  02C5  18BC               	btfsc	_I2C_Status+28,1
  5612  02C6  2AC8               	goto	u731
  5613  02C7  2AC9               	goto	u730
  5614  02C8                     u731:
  5615  02C8  2ADC               	goto	l2596
  5616  02C9                     u730:
  5617  02C9                     l2584:
  5618                           
  5619                           ;../src/i2c_master.c: 163:     {;../src/i2c_master.c: 164:         I2C_Status.inUse = 0;
  5620  02C9  113C               	bcf	_I2C_Status+28,2
  5621  02CA                     l2586:
  5622                           
  5623                           ;../src/i2c_master.c: 165:         I2C_Status.address = 0xff;
  5624  02CA  30FF               	movlw	255
  5625  02CB  00F2               	movwf	??_I2C_Close
  5626  02CC  0872               	movf	??_I2C_Close,w
  5627  02CD  00B6               	movwf	_I2C_Status+22
  5628  02CE                     l2588:
  5629                           
  5630                           ;../src/i2c_master.c: 166:         I2C_MasterClearIrq();
  5631  02CE  3184  245D  3182   	fcall	_I2C_MasterClearIrq
  5632  02D1                     l2590:
  5633                           
  5634                           ;../src/i2c_master.c: 167:         I2C_MasterDisableIrq();
  5635  02D1  3184  2457  3182   	fcall	_I2C_MasterDisableIrq
  5636  02D4                     l2592:
  5637                           
  5638                           ;../src/i2c_master.c: 168:         I2C_MasterClose();
  5639  02D4  3184  245A  3182   	fcall	_I2C_MasterClose
  5640  02D7                     l2594:
  5641                           
  5642                           ;../src/i2c_master.c: 169:         returnValue = I2C_Status.error;
  5643  02D7  0020               	movlb	0	; select bank0
  5644  02D8  083B               	movf	_I2C_Status+27,w
  5645  02D9  00F2               	movwf	??_I2C_Close
  5646  02DA  0872               	movf	??_I2C_Close,w
  5647  02DB  00F3               	movwf	I2C_Close@returnValue
  5648  02DC                     l2596:
  5649                           
  5650                           ;../src/i2c_master.c: 171:     return returnValue;
  5651  02DC  0873               	movf	I2C_Close@returnValue,w
  5652  02DD                     l107:
  5653  02DD  0008               	return
  5654  02DE                     __end_of_I2C_Close:
  5655                           
  5656                           	psect	text53
  5657  0457                     __ptext53:	
  5658 ;; *************** function _I2C_MasterDisableIrq *****************
  5659 ;; Defined at:
  5660 ;;		line 494 in file "../src/i2c_master.c"
  5661 ;; Parameters:    Size  Location     Type
  5662 ;;		None
  5663 ;; Auto vars:     Size  Location     Type
  5664 ;;		None
  5665 ;; Return value:  Size  Location     Type
  5666 ;;                  1    wreg      void 
  5667 ;; Registers used:
  5668 ;;		None
  5669 ;; Tracked objects:
  5670 ;;		On entry : 0/0
  5671 ;;		On exit  : 0/0
  5672 ;;		Unchanged: 0/0
  5673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5678 ;;Total ram usage:        0 bytes
  5679 ;; Hardware stack levels used:    1
  5680 ;; Hardware stack levels required when called:    3
  5681 ;; This function calls:
  5682 ;;		Nothing
  5683 ;; This function is called by:
  5684 ;;		_I2C_Close
  5685 ;; This function uses a non-reentrant model
  5686 ;;
  5687                           
  5688                           
  5689                           ;psect for function _I2C_MasterDisableIrq
  5690  0457                     _I2C_MasterDisableIrq:
  5691  0457                     l1950:	
  5692                           ;incstack = 0
  5693                           ; Regs used in _I2C_MasterDisableIrq: []
  5694                           
  5695                           
  5696                           ;../src/i2c_master.c: 496:     PIE1bits.SSP1IE = 0;
  5697  0457  0021               	movlb	1	; select bank1
  5698  0458  1191               	bcf	17,3	;volatile
  5699  0459                     l266:
  5700  0459  0008               	return
  5701  045A                     __end_of_I2C_MasterDisableIrq:
  5702                           
  5703                           	psect	text54
  5704  045A                     __ptext54:	
  5705 ;; *************** function _I2C_MasterClose *****************
  5706 ;; Defined at:
  5707 ;;		line 441 in file "../src/i2c_master.c"
  5708 ;; Parameters:    Size  Location     Type
  5709 ;;		None
  5710 ;; Auto vars:     Size  Location     Type
  5711 ;;		None
  5712 ;; Return value:  Size  Location     Type
  5713 ;;                  1    wreg      void 
  5714 ;; Registers used:
  5715 ;;		None
  5716 ;; Tracked objects:
  5717 ;;		On entry : 0/0
  5718 ;;		On exit  : 0/0
  5719 ;;		Unchanged: 0/0
  5720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5725 ;;Total ram usage:        0 bytes
  5726 ;; Hardware stack levels used:    1
  5727 ;; Hardware stack levels required when called:    3
  5728 ;; This function calls:
  5729 ;;		Nothing
  5730 ;; This function is called by:
  5731 ;;		_I2C_Close
  5732 ;; This function uses a non-reentrant model
  5733 ;;
  5734                           
  5735                           
  5736                           ;psect for function _I2C_MasterClose
  5737  045A                     _I2C_MasterClose:
  5738  045A                     l1952:	
  5739                           ;incstack = 0
  5740                           ; Regs used in _I2C_MasterClose: []
  5741                           
  5742                           
  5743                           ;../src/i2c_master.c: 444:     SSP1CON1bits.SSPEN = 0;
  5744  045A  0024               	movlb	4	; select bank4
  5745  045B  1295               	bcf	21,5	;volatile
  5746  045C                     l236:
  5747  045C  0008               	return
  5748  045D                     __end_of_I2C_MasterClose:
  5749                           
  5750                           	psect	text55
  5751  045D                     __ptext55:	
  5752 ;; *************** function _I2C_MasterClearIrq *****************
  5753 ;; Defined at:
  5754 ;;		line 499 in file "../src/i2c_master.c"
  5755 ;; Parameters:    Size  Location     Type
  5756 ;;		None
  5757 ;; Auto vars:     Size  Location     Type
  5758 ;;		None
  5759 ;; Return value:  Size  Location     Type
  5760 ;;                  1    wreg      void 
  5761 ;; Registers used:
  5762 ;;		None
  5763 ;; Tracked objects:
  5764 ;;		On entry : 0/0
  5765 ;;		On exit  : 0/0
  5766 ;;		Unchanged: 0/0
  5767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5772 ;;Total ram usage:        0 bytes
  5773 ;; Hardware stack levels used:    1
  5774 ;; Hardware stack levels required when called:    3
  5775 ;; This function calls:
  5776 ;;		Nothing
  5777 ;; This function is called by:
  5778 ;;		_I2C_Open
  5779 ;;		_I2C_Close
  5780 ;;		_I2C_MasterFsm
  5781 ;; This function uses a non-reentrant model
  5782 ;;
  5783                           
  5784                           
  5785                           ;psect for function _I2C_MasterClearIrq
  5786  045D                     _I2C_MasterClearIrq:
  5787  045D                     l2352:	
  5788                           ;incstack = 0
  5789                           ; Regs used in _I2C_MasterClearIrq: []
  5790                           
  5791                           
  5792                           ;../src/i2c_master.c: 501:     PIR1bits.SSP1IF = 0;
  5793  045D  0020               	movlb	0	; select bank0
  5794  045E  1191               	bcf	17,3	;volatile
  5795  045F                     l269:
  5796  045F  0008               	return
  5797  0460                     __end_of_I2C_MasterClearIrq:
  5798                           
  5799                           	psect	text56
  5800  0467                     __ptext56:	
  5801 ;; *************** function _Get_Master_TMR1_flag *****************
  5802 ;; Defined at:
  5803 ;;		line 32 in file "../src/vertebra.c"
  5804 ;; Parameters:    Size  Location     Type
  5805 ;;		None
  5806 ;; Auto vars:     Size  Location     Type
  5807 ;;		None
  5808 ;; Return value:  Size  Location     Type
  5809 ;;                  1    wreg      unsigned char 
  5810 ;; Registers used:
  5811 ;;		wreg
  5812 ;; Tracked objects:
  5813 ;;		On entry : 0/0
  5814 ;;		On exit  : 0/0
  5815 ;;		Unchanged: 0/0
  5816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5821 ;;Total ram usage:        0 bytes
  5822 ;; Hardware stack levels used:    1
  5823 ;; Hardware stack levels required when called:    3
  5824 ;; This function calls:
  5825 ;;		Nothing
  5826 ;; This function is called by:
  5827 ;;		_main
  5828 ;; This function uses a non-reentrant model
  5829 ;;
  5830                           
  5831                           
  5832                           ;psect for function _Get_Master_TMR1_flag
  5833  0467                     _Get_Master_TMR1_flag:
  5834  0467                     l1518:	
  5835                           ;incstack = 0
  5836                           ; Regs used in _Get_Master_TMR1_flag: [wreg]
  5837                           
  5838                           
  5839                           ;../src/vertebra.c: 33:     return flag;
  5840  0467  087B               	movf	_flag,w
  5841  0468                     l462:
  5842  0468  0008               	return
  5843  0469                     __end_of_Get_Master_TMR1_flag:
  5844                           
  5845                           	psect	text57
  5846  0469                     __ptext57:	
  5847 ;; *************** function _Clear_Master_TMR1_flag *****************
  5848 ;; Defined at:
  5849 ;;		line 36 in file "../src/vertebra.c"
  5850 ;; Parameters:    Size  Location     Type
  5851 ;;		None
  5852 ;; Auto vars:     Size  Location     Type
  5853 ;;		None
  5854 ;; Return value:  Size  Location     Type
  5855 ;;                  1    wreg      void 
  5856 ;; Registers used:
  5857 ;;		status,2
  5858 ;; Tracked objects:
  5859 ;;		On entry : 0/0
  5860 ;;		On exit  : 0/0
  5861 ;;		Unchanged: 0/0
  5862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5867 ;;Total ram usage:        0 bytes
  5868 ;; Hardware stack levels used:    1
  5869 ;; Hardware stack levels required when called:    3
  5870 ;; This function calls:
  5871 ;;		Nothing
  5872 ;; This function is called by:
  5873 ;;		_main
  5874 ;; This function uses a non-reentrant model
  5875 ;;
  5876                           
  5877                           
  5878                           ;psect for function _Clear_Master_TMR1_flag
  5879  0469                     _Clear_Master_TMR1_flag:
  5880  0469                     l1530:	
  5881                           ;incstack = 0
  5882                           ; Regs used in _Clear_Master_TMR1_flag: [status,2]
  5883                           
  5884                           
  5885                           ;../src/vertebra.c: 37:     flag = 0;
  5886  0469  01FB               	clrf	_flag
  5887  046A                     l465:
  5888  046A  0008               	return
  5889  046B                     __end_of_Clear_Master_TMR1_flag:
  5890                           
  5891                           	psect	intentry
  5892  0004                     __pintentry:	
  5893 ;; *************** function _INTERRUPT_InterruptManager *****************
  5894 ;; Defined at:
  5895 ;;		line 4 in file "../src/interrupt_manager.c"
  5896 ;; Parameters:    Size  Location     Type
  5897 ;;		None
  5898 ;; Auto vars:     Size  Location     Type
  5899 ;;		None
  5900 ;; Return value:  Size  Location     Type
  5901 ;;                  1    wreg      void 
  5902 ;; Registers used:
  5903 ;;		wreg, status,2, status,0, pclath, cstack
  5904 ;; Tracked objects:
  5905 ;;		On entry : 0/0
  5906 ;;		On exit  : 0/0
  5907 ;;		Unchanged: 0/0
  5908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5913 ;;Total ram usage:        0 bytes
  5914 ;; Hardware stack levels used:    1
  5915 ;; Hardware stack levels required when called:    2
  5916 ;; This function calls:
  5917 ;;		_TMR1_ISR
  5918 ;; This function is called by:
  5919 ;;		Interrupt level 1
  5920 ;; This function uses a non-reentrant model
  5921 ;;
  5922                           
  5923  0004                     _INTERRUPT_InterruptManager:
  5924                           
  5925                           ;incstack = 0
  5926  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  5927                           
  5928                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  5929  0005  3180               	pagesel	$
  5930  0006                     i1l2144:
  5931                           
  5932                           ;../src/interrupt_manager.c: 7:     if(INTCONbits.PEIE == 1)
  5933  0006  1F0B               	btfss	11,6	;volatile
  5934  0007  2809               	goto	u57_21
  5935  0008  280A               	goto	u57_20
  5936  0009                     u57_21:
  5937  0009  2817               	goto	i1l357
  5938  000A                     u57_20:
  5939  000A                     i1l2146:
  5940                           
  5941                           ;../src/interrupt_manager.c: 8:     {;../src/interrupt_manager.c: 9:         if(PIE1bits
      +                          .TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  5942  000A  0021               	movlb	1	; select bank1
  5943  000B  1C11               	btfss	17,0	;volatile
  5944  000C  280E               	goto	u58_21
  5945  000D  280F               	goto	u58_20
  5946  000E                     u58_21:
  5947  000E  2817               	goto	i1l357
  5948  000F                     u58_20:
  5949  000F                     i1l2148:
  5950  000F  0020               	movlb	0	; select bank0
  5951  0010  1C11               	btfss	17,0	;volatile
  5952  0011  2813               	goto	u59_21
  5953  0012  2814               	goto	u59_20
  5954  0013                     u59_21:
  5955  0013  2817               	goto	i1l357
  5956  0014                     u59_20:
  5957  0014                     i1l2150:
  5958                           
  5959                           ;../src/interrupt_manager.c: 10:         {;../src/interrupt_manager.c: 11:            TM
      +                          R1_ISR();
  5960  0014  3183  230C  3180   	fcall	_TMR1_ISR
  5961  0017                     i1l357:	
  5962                           ;../src/interrupt_manager.c: 12:         }
  5963                           
  5964  0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5965  0018  0009               	retfie
  5966  0019                     __end_of_INTERRUPT_InterruptManager:
  5967                           
  5968                           	psect	text59
  5969  030C                     __ptext59:	
  5970 ;; *************** function _TMR1_ISR *****************
  5971 ;; Defined at:
  5972 ;;		line 58 in file "../src/tmr1.c"
  5973 ;; Parameters:    Size  Location     Type
  5974 ;;		None
  5975 ;; Auto vars:     Size  Location     Type
  5976 ;;		None
  5977 ;; Return value:  Size  Location     Type
  5978 ;;                  1    wreg      void 
  5979 ;; Registers used:
  5980 ;;		wreg, status,2, status,0, pclath, cstack
  5981 ;; Tracked objects:
  5982 ;;		On entry : 0/0
  5983 ;;		On exit  : 0/0
  5984 ;;		Unchanged: 0/0
  5985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5990 ;;Total ram usage:        0 bytes
  5991 ;; Hardware stack levels used:    1
  5992 ;; Hardware stack levels required when called:    1
  5993 ;; This function calls:
  5994 ;;		Absolute function
  5995 ;;		_TMR1_Master_InterruptHandler
  5996 ;;		_TMR1_WriteTimer
  5997 ;; This function is called by:
  5998 ;;		_INTERRUPT_InterruptManager
  5999 ;; This function uses a non-reentrant model
  6000 ;;
  6001                           
  6002                           
  6003                           ;psect for function _TMR1_ISR
  6004  030C                     _TMR1_ISR:
  6005  030C                     i1l2128:	
  6006                           ;incstack = 0
  6007                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  6008                           
  6009                           
  6010                           ;../src/tmr1.c: 62:     PIR1bits.TMR1IF = 0;
  6011  030C  0020               	movlb	0	; select bank0
  6012  030D  1011               	bcf	17,0	;volatile
  6013  030E                     i1l2130:
  6014                           
  6015                           ;../src/tmr1.c: 63:     TMR1_WriteTimer(timer1ReloadVal);
  6016  030E  0855               	movf	_timer1ReloadVal+1,w	;volatile
  6017  030F  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  6018  0310  0854               	movf	_timer1ReloadVal,w	;volatile
  6019  0311  00F0               	movwf	TMR1_WriteTimer@timerVal
  6020  0312  3183  2349  3183   	fcall	_TMR1_WriteTimer
  6021  0315                     i1l2132:
  6022                           
  6023                           ;../src/tmr1.c: 65:     if(TMR1_InterruptHandler)
  6024  0315  0020               	movlb	0	; select bank0
  6025  0316  0852               	movf	_TMR1_InterruptHandler,w
  6026  0317  0453               	iorwf	_TMR1_InterruptHandler+1,w
  6027  0318  1903               	btfsc	3,2
  6028  0319  2B1B               	goto	u55_21
  6029  031A  2B1C               	goto	u55_20
  6030  031B                     u55_21:
  6031  031B  2B21               	goto	i1l435
  6032  031C                     u55_20:
  6033  031C                     i1l2134:
  6034                           
  6035                           ;../src/tmr1.c: 66:     {;../src/tmr1.c: 67:         TMR1_InterruptHandler();
  6036  031C  0853               	movf	_TMR1_InterruptHandler+1,w
  6037  031D  008A               	movwf	10
  6038  031E  0852               	movf	_TMR1_InterruptHandler,w
  6039  031F  000A               	callw
  6040  0320  3183               	pagesel	$
  6041  0321                     i1l435:
  6042  0321  0008               	return
  6043  0322                     __end_of_TMR1_ISR:
  6044                           
  6045                           	psect	text60
  6046  0349                     __ptext60:	
  6047 ;; *************** function _TMR1_WriteTimer *****************
  6048 ;; Defined at:
  6049 ;;		line 36 in file "../src/tmr1.c"
  6050 ;; Parameters:    Size  Location     Type
  6051 ;;  timerVal        2    0[COMMON] unsigned short 
  6052 ;; Auto vars:     Size  Location     Type
  6053 ;;		None
  6054 ;; Return value:  Size  Location     Type
  6055 ;;                  1    wreg      void 
  6056 ;; Registers used:
  6057 ;;		wreg, status,2
  6058 ;; Tracked objects:
  6059 ;;		On entry : 0/0
  6060 ;;		On exit  : 0/0
  6061 ;;		Unchanged: 0/0
  6062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6063 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6066 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6067 ;;Total ram usage:        2 bytes
  6068 ;; Hardware stack levels used:    1
  6069 ;; This function calls:
  6070 ;;		Nothing
  6071 ;; This function is called by:
  6072 ;;		_TMR1_ISR
  6073 ;; This function uses a non-reentrant model
  6074 ;;
  6075                           
  6076                           
  6077                           ;psect for function _TMR1_WriteTimer
  6078  0349                     _TMR1_WriteTimer:
  6079  0349                     i1l2064:	
  6080                           ;incstack = 0
  6081                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  6082                           
  6083                           
  6084                           ;../src/tmr1.c: 36: void TMR1_WriteTimer(uint16_t timerVal);../src/tmr1.c: 37: {;../src/
      +                          tmr1.c: 38:     if (T1CONbits.nT1SYNC == 1)
  6085  0349  0020               	movlb	0	; select bank0
  6086  034A  1D18               	btfss	24,2	;volatile
  6087  034B  2B4D               	goto	u47_21
  6088  034C  2B4E               	goto	u47_20
  6089  034D                     u47_21:
  6090  034D  2B55               	goto	i1l2074
  6091  034E                     u47_20:
  6092  034E                     i1l2066:
  6093                           
  6094                           ;../src/tmr1.c: 39:     {;../src/tmr1.c: 41:         T1CONbits.TMR1ON = 0;
  6095  034E  1018               	bcf	24,0	;volatile
  6096  034F                     i1l2068:
  6097                           
  6098                           ;../src/tmr1.c: 44:         TMR1H = (timerVal >> 8);
  6099  034F  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  6100  0350  0097               	movwf	23	;volatile
  6101  0351                     i1l2070:
  6102                           
  6103                           ;../src/tmr1.c: 45:         TMR1L = timerVal;
  6104  0351  0870               	movf	TMR1_WriteTimer@timerVal,w
  6105  0352  0096               	movwf	22	;volatile
  6106  0353                     i1l2072:
  6107                           
  6108                           ;../src/tmr1.c: 48:         T1CONbits.TMR1ON =1;
  6109  0353  1418               	bsf	24,0	;volatile
  6110                           
  6111                           ;../src/tmr1.c: 49:     }
  6112  0354  2B59               	goto	i1l431
  6113  0355                     i1l2074:
  6114                           
  6115                           ;../src/tmr1.c: 51:     {;../src/tmr1.c: 53:         TMR1H = (timerVal >> 8);
  6116  0355  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  6117  0356  0097               	movwf	23	;volatile
  6118  0357                     i1l2076:
  6119                           
  6120                           ;../src/tmr1.c: 54:         TMR1L = timerVal;
  6121  0357  0870               	movf	TMR1_WriteTimer@timerVal,w
  6122  0358  0096               	movwf	22	;volatile
  6123  0359                     i1l431:
  6124  0359  0008               	return
  6125  035A                     __end_of_TMR1_WriteTimer:
  6126                           
  6127                           	psect	text61
  6128  0460                     __ptext61:	
  6129 ;; *************** function _TMR1_Master_InterruptHandler *****************
  6130 ;; Defined at:
  6131 ;;		line 28 in file "../src/vertebra.c"
  6132 ;; Parameters:    Size  Location     Type
  6133 ;;		None
  6134 ;; Auto vars:     Size  Location     Type
  6135 ;;		None
  6136 ;; Return value:  Size  Location     Type
  6137 ;;                  1    wreg      void 
  6138 ;; Registers used:
  6139 ;;		None
  6140 ;; Tracked objects:
  6141 ;;		On entry : 0/0
  6142 ;;		On exit  : 0/0
  6143 ;;		Unchanged: 0/0
  6144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6149 ;;Total ram usage:        0 bytes
  6150 ;; Hardware stack levels used:    1
  6151 ;; This function calls:
  6152 ;;		Nothing
  6153 ;; This function is called by:
  6154 ;;		_TMR1_Initialize
  6155 ;;		_TMR1_ISR
  6156 ;; This function uses a non-reentrant model
  6157 ;;
  6158                           
  6159                           
  6160                           ;psect for function _TMR1_Master_InterruptHandler
  6161  0460                     _TMR1_Master_InterruptHandler:
  6162  0460                     i1l2078:	
  6163                           ;incstack = 0
  6164                           ; Regs used in _TMR1_Master_InterruptHandler: []
  6165                           
  6166                           
  6167                           ;../src/vertebra.c: 29:     flag = 1;
  6168  0460  01FB               	clrf	_flag
  6169  0461  0AFB               	incf	_flag,f
  6170  0462                     i1l459:
  6171  0462  0008               	return
  6172  0463                     __end_of_TMR1_Master_InterruptHandler:
  6173  007E                     btemp	set	126	;btemp
  6174  007E                     int$flags	set	126
  6175  007E                     wtemp0	set	126
  6176                           
  6177                           	psect	config
  6178                           
  6179                           ;Config register CONFIG1 @ 0x8007
  6180                           ;	Oscillator Selection Bits
  6181                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  6182                           ;	Watchdog Timer Enable
  6183                           ;	WDTE = OFF, WDT disabled
  6184                           ;	Power-up Timer Enable
  6185                           ;	PWRTE = OFF, PWRT disabled
  6186                           ;	MCLR Pin Function Select
  6187                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  6188                           ;	Flash Program Memory Code Protection
  6189                           ;	CP = OFF, Program memory code protection is disabled
  6190                           ;	Brown-out Reset Enable
  6191                           ;	BOREN = ON, Brown-out Reset enabled
  6192                           ;	Clock Out Enable
  6193                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  6194                           ;	Internal/External Switchover Mode
  6195                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  6196                           ;	Fail-Safe Clock Monitor Enable
  6197                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  6198  8007                     	org	32775
  6199  8007  3FE4               	dw	16356
  6200                           
  6201                           ;Config register CONFIG2 @ 0x8008
  6202                           ;	Flash Memory Self-Write Protection
  6203                           ;	WRT = OFF, Write protection off
  6204                           ;	CPU System Clock Selection Bit
  6205                           ;	CPUDIV = NOCLKDIV, NO CPU system divide
  6206                           ;	USB Low SPeed Clock Selection bit
  6207                           ;	USBLSCLK = 48MHz, System clock expects 48 MHz, FS/LS USB CLKENs divide-by is set to 8.
  6208                           ;	PLL Multipler Selection Bit
  6209                           ;	PLLMULT = 4x, 4x Output Frequency Selected
  6210                           ;	PLL Enable Bit
  6211                           ;	PLLEN = DISABLED, 3x or 4x PLL Disabled
  6212                           ;	Stack Overflow/Underflow Reset Enable
  6213                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  6214                           ;	Brown-out Reset Voltage Selection
  6215                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  6216                           ;	Low-Power Brown Out Reset
  6217                           ;	LPBOR = OFF, Low-Power BOR is disabled
  6218                           ;	Low-Voltage Programming Enable
  6219                           ;	LVP = ON, Low-voltage programming enabled
  6220  8008                     	org	32776
  6221  8008  3E4F               	dw	15951

Data Sizes:
    Strings     0
    Constant    32
    Data        3
    BSS         35
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     16      57
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    I2C_DO_TX$1301$0	PTR void  size(1) Largest target is 1
		 -> I2C_Write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    I2C_DO_TX$1306	PTR void  size(1) Largest target is 1
		 -> I2C_Write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    I2C_DO_TX$1301	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> wr1RegCompleteHandler(), I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), 

    I2C_MasterFsm$1300	const PTR FTN()enum E2552 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 1
		 -> I2C_Write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 1
		 -> I2C_Write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 1
		 -> I2C_Write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 1
		 -> I2C_Write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 1
		 -> I2C_Write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    S116$0$0	PTR void  size(1) Largest target is 1
		 -> I2C_Write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Master_InterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Master_InterruptHandler(), Absolute function(), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 1
		 -> I2C_Write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    I2C_SetCallback@ptr	PTR void  size(1) Largest target is 1
		 -> I2C_Write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> wr1RegCompleteHandler(), Absolute function(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 1
		 -> I2C_Write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> wr1RegCompleteHandler(), Absolute function(), 

    I2C_SetBuffer@buffer	PTR void  size(1) Largest target is 1
		 -> I2C_Write1ByteRegister@reg(BANK0[1]), I2C_Write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    S116$data_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> I2C_Write1ByteRegister@reg(BANK0[1]), I2C_Write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    I2C_Status.data_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> I2C_Write1ByteRegister@reg(BANK0[1]), I2C_Write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    S116$callbackPayload	PTR void [6] size(1) Largest target is 1
		 -> I2C_Write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    I2C_Status.callbackPayload	PTR void [6] size(1) Largest target is 1
		 -> I2C_Write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    S116$callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> wr1RegCompleteHandler(), I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> wr1RegCompleteHandler(), I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), 

    i2c_fsmStateTable	const PTR FTN()enum E2552[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 


Critical Paths under _main in COMMON

    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _I2C_Write1ByteRegister->_I2C_SetAddressNackCallback
    _I2C_Write1ByteRegister->_I2C_SetDataCompleteCallback
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_DO_TX->_I2C_MasterSendTxData
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_Rotar_All_Slaves
    _Rotar_All_Slaves->_Rotar_Slave
    _Rotar_Slave->_SetServo
    _SetServo->_I2C_Write1ByteRegister
    _I2C_MasterWrite->_I2C_MasterOperation

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9758
             _Clear_Master_TMR1_flag
               _Get_Master_TMR1_flag
                   _Rotar_All_Slaves
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0      98
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Rotar_All_Slaves                                     3     3      0    9660
                                             13 BANK0      3     3      0
                        _Rotar_Slave
 ---------------------------------------------------------------------------------
 (2) _Rotar_Slave                                          3     3      0    9592
                                             10 BANK0      3     3      0
                           _SetServo
 ---------------------------------------------------------------------------------
 (3) _SetServo                                             4     3      1    9437
                                              6 BANK0      4     3      1
             _I2C_Write1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _I2C_Write1ByteRegister                               4     2      2    9105
                                              2 BANK0      4     2      2
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _I2C_SetAddressNackCallback                           4     1      3     819
                                              7 COMMON     4     1      3
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C_Open                                             3     3      0      68
                                              2 COMMON     3     3      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterWrite                                      0     0      0    6577
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterOperation                                  3     3      0    6577
                                              9 COMMON     1     1      0
                                              0 BANK0      2     2      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (7) _I2C_Poller                                           0     0      0    6509
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterFsm                                        3     3      0    6509
                                              6 COMMON     3     3      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_TX_EMPTY                                      3     3      0    1604
                                              2 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _wr1RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterSetIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_TX                                            3     3      0    1635
                                              3 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _wr1RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_RESTART_WRITE                           0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_RESTART_READ                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_ADR_WRITE                                0     0      0      31
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_ADR_READ                                 0     0      0      31
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterSendTxData                                1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RX                                            3     3      0    1604
                                              2 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _wr1RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterSendAck                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterSendNack                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterStartRx                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_ADDRESS_NACK                                  3     3      0    1604
                                              2 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _wr1RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler                               1     0      1    1604
                                              0 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _I2C_SetDataCompleteCallback                          4     1      3     999
                                              7 COMMON     4     1      3
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C_SetCallback                                      5     2      3     577
                                              2 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (5) _I2C_SetBuffer                                        4     2      2     314
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_STOP                                    0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_RESTART                                 0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_CallbackReturnStop                              1     0      1       0
                                              0 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (10) _I2C_CallbackReturnReset                             1     0      1       0
                                              0 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_Close                                            2     2      0      37
                                              2 COMMON     2     2      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Get_Master_TMR1_flag                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Clear_Master_TMR1_flag                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          0     0      0     164
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR1_ISR                                            0     0      0     164
                   Absolute function *
       _TMR1_Master_InterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR1_WriteTimer                                     2     0      2     164
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR1_Master_InterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Clear_Master_TMR1_flag
   _Get_Master_TMR1_flag
   _Rotar_All_Slaves
     _Rotar_Slave
       _SetServo
         _I2C_Write1ByteRegister
           _I2C_Close
             _I2C_MasterClearIrq
             _I2C_MasterClose
             _I2C_MasterDisableIrq
           _I2C_MasterWrite
             _I2C_MasterOperation
               _I2C_MasterStart
               _I2C_Poller
                 _I2C_MasterFsm
                   _I2C_DO_ADDRESS_NACK *
                     Absolute function(Fake) *
                     _I2C_CallbackReturnReset *
                     _I2C_CallbackReturnStop *
                     _I2C_DO_SEND_RESTART *
                       _I2C_MasterEnableRestart
                     _I2C_DO_SEND_STOP *
                       _I2C_MasterStop
                     _wr1RegCompleteHandler *
                       _I2C_SetBuffer
                       _I2C_SetDataCompleteCallback
                         _I2C_SetCallback
                   _I2C_DO_IDLE *
                   _I2C_DO_RCEN *
                     _I2C_MasterStartRx
                   _I2C_DO_RESET *
                   _I2C_DO_RX *
                     Absolute function(Fake) *
                     _I2C_CallbackReturnReset *
                     _I2C_CallbackReturnStop *
                     _I2C_DO_RX_NACK_RESTART *
                       _I2C_MasterSendNack
                     _I2C_DO_RX_NACK_STOP *
                       _I2C_MasterSendNack
                     _I2C_MasterGetRxData *
                     _I2C_MasterSendAck *
                     _wr1RegCompleteHandler *
                       _I2C_SetBuffer
                       _I2C_SetDataCompleteCallback
                         _I2C_SetCallback
                   _I2C_DO_RX_ACK *
                     _I2C_MasterSendAck
                   _I2C_DO_RX_NACK_RESTART *
                     _I2C_MasterSendNack
                   _I2C_DO_RX_NACK_STOP *
                     _I2C_MasterSendNack
                   _I2C_DO_SEND_ADR_READ *
                     _I2C_MasterSendTxData
                   _I2C_DO_SEND_ADR_WRITE *
                     _I2C_MasterSendTxData
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_RESTART_READ *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_RESTART_WRITE *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_DO_TX *
                     Absolute function(Fake) *
                     _I2C_CallbackReturnReset *
                     _I2C_CallbackReturnStop *
                     _I2C_DO_SEND_RESTART_READ *
                       _I2C_MasterEnableRestart
                     _I2C_DO_SEND_RESTART_WRITE *
                       _I2C_MasterEnableRestart
                     _I2C_DO_SEND_STOP *
                       _I2C_MasterStop
                     _I2C_MasterIsNack *
                     _I2C_MasterSendTxData *
                     _wr1RegCompleteHandler *
                       _I2C_SetBuffer
                       _I2C_SetDataCompleteCallback
                         _I2C_SetCallback
                   _I2C_DO_TX_EMPTY *
                     Absolute function(Fake) *
                     _I2C_CallbackReturnReset *
                     _I2C_CallbackReturnStop *
                     _I2C_DO_SEND_RESTART *
                       _I2C_MasterEnableRestart
                     _I2C_DO_SEND_STOP *
                       _I2C_MasterStop
                     _I2C_MasterSetIrq *
                     _wr1RegCompleteHandler *
                       _I2C_SetBuffer
                       _I2C_SetDataCompleteCallback
                         _I2C_SetCallback
                   _I2C_MasterClearIrq *
                   _I2C_MasterIsNack *
                 _I2C_MasterWaitForEvent
           _I2C_Open
             _I2C_MasterClearIrq
             _I2C_MasterOpen
           _I2C_SetAddressNackCallback
             _I2C_SetCallback
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
   _SYSTEM_Initialize
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_Master_InterruptHandler *
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      39       5       71.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      45      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      45      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Nov 23 14:00:43 2020

                  ??_I2C_DO_SEND_ADR_READ 0072               __size_of_I2C_MasterSendNack 0004  
                      __size_of_I2C_Close 001C                   ??_I2C_DO_SEND_ADR_WRITE 0073  
                                      l99 03CE                       __size_of_I2C_Poller 000D  
                   ??_I2C_DO_SEND_RESTART 0072              __size_of_I2C_MasterOperation 001F  
                                     l102 0185                                       l103 0186  
                                     l120 0379                                       l200 0421  
                                     l113 02A4                                       l107 02DD  
                                     l131 0265                                       l123 03BC  
                                     l203 041C                                       l212 040D  
                                     l116 0403                                       l221 0214  
                                     l141 023F                                       l150 03DF  
                                     l206 0417                                       l126 0395  
                                     l215 0408                                       l144 0430  
                                     l304 01B9             __size_of_I2C_MasterSendTxData 0005  
                                     l153 00EA                                       l209 0412  
                                     l137 03AF                                       l233 03A2  
                                     l226 0466                                       l242 0435  
                                     l170 014C                                       l251 0456  
                                     l307 0348                                       l147 03D7  
                                     l236 045C                                       l260 043D  
                                     l156 0106                                       l332 0369  
                                     l245 0453                                       l229 0464  
                                     l181 03E6                                       l254 0450  
                                     l263 0441                                       l239 044A  
                                     l335 03C5                                       l248 044D  
                                     l272 0447                                       l257 03FE  
                                     l169 0124                                       l266 0459  
                                     l194 042B                                       l426 02F5  
                                     l338 0439                                       l187 01E8  
                                     l275 03F3                                       l269 045F  
                                     l197 0426                                       l462 0468  
                                     l438 03F2                                       l279 03F8  
                                     l471 0044                                       l465 046A  
                                     l482 00B1                                       l468 0388  
                                     l478 0071                                       l399 0336  
                                     l488 02C1                                       u400 039B  
                                     u401 039A                                       u610 0247  
                                     u611 0246                                       u620 0370  
                                     u700 028E                                       u621 036F  
                                     u701 028D                                       u630 00BA  
                                     u710 0295                                       u631 00B9  
                                     u711 0294                                       u640 0103  
                                     u720 0155                                       u800 0054  
                                     u641 0102                                       u721 0154  
                                     u801 0053                                       u730 02C9  
                                     u650 011F                                       u810 005F  
                                     u731 02C8                                       u651 011E  
                                     u811 005E                                       u660 03F8  
                                     u740 0193                                       u820 00AE  
                                     u661 03F7                                       u741 0192  
                                     u821 00AD                                       u670 021D  
                                     u750 01B9                                       u830 02C1  
                                     u671 021C                                       u751 01B8  
                                     u831 02C0                                       u680 0225  
                                     u760 003C                                       u840 0303  
                                     u681 0224                                       u761 003B  
                                     u841 0302                                       u690 03AF  
                                     u770 0040                                       u691 03AE  
                                     u771 003F                                       u835 02BD  
                                     u780 004A                                       u781 0049  
                                     u790 0050                                       u791 004F  
                         _timer1ReloadVal 0054                    _I2C_MasterWaitForEvent 03F3  
                                     wreg 0009              ??_I2C_SetAddressNackCallback 007A  
                  _I2C_Write1ByteRegister 0187                  ??_I2C_CallbackReturnStop 007B  
                            _I2C_DO_RESET 0404                                      l1400 0324  
                                    l1410 0330                                      l1402 0326  
                                    l2050 02E0                                      l1420 03C1  
                                    l1412 0332                                      l1404 0329  
                                    l2044 03ED                                      l2060 02EB  
                                    l2052 02E2                                      l2302 0418  
                                    l1422 03C3                                      l1414 0334  
                                    l1406 032B                                      l2062 02F2  
                                    l2054 02E4                                      l2126 035A  
                                    l2312 043A                                      l2400 00F8  
                                    l2304 041B                                      l2320 040E  
                                    l1416 03BD                                      l1408 032E  
                                    l2056 02E5                                      l2048 02DE  
                                    l1424 0436                                      l1530 0469  
                                    l2402 0103                                      l2330 0420  
                                    l2322 0411                                      l2314 0409  
                                    l1418 03C0                                      l2058 02E9  
                                    l2340 0463                                      l2308 0448  
                                    l2404 0105                                      l2420 0122  
                                    l2412 0107                                      l2316 040C  
                                    l1518 0467                                      l2270 036B  
                                    l2326 044B                                      l2334 0445  
                                    l2430 012A                                      l2414 0111  
                                    l2502 01F8                                      l2510 0215  
                                    l1390 03C6                                      l2352 045D  
                                    l2520 0454                                      l2280 044E  
                                    l2272 0370                                      l2264 0241  
                                    l2344 0337                                      l2336 0465  
                                    l2416 0115                                      l2328 041D  
                                    l2512 0218                                      l2600 03FF  
                                    l1392 03C8                                      l2274 0378  
                                    l2266 0247                                      l2346 0340  
                                    l2282 043E                                      l2450 01BA  
                                    l2354 042C                                      l2362 03CF  
                                    l2370 03D8                                      l2426 0126  
                                    l2418 011F                                      l2442 03E0  
                                    l2290 0427                                      l2514 021D  
                                    l2522 03A3                                      l2530 0288  
                                    l2610 0193                                      l1394 03CA  
                                    l2268 0258                                      l2276 03B0  
                                    l2348 0347                                      l2284 03F9  
                                    l2452 01BD                                      l2356 042E  
                                    l2364 03D1                                      l2372 03DA  
                                    l2436 012E                                      l2444 03E2  
                                    l2292 042A                                      l2516 0225  
                                    l2524 03A4                                      l2540 0298  
                                    l2532 028E                                      l2604 0389  
                                    l2612 019F                                      l2620 037C  
                                    l1396 03CD                                      l2278 0451  
                                    l2462 01C6                                      l2358 042F  
                                    l2366 03D6                                      l2374 03DE  
                                    l2390 00C3                                      l2382 00BB  
                                    l2446 03E5                                      l2518 022A  
                                    l2526 03A7                                      l2542 029C  
                                    l2534 028F                                      l2550 014E  
                                    l2614 01A7                                      l2606 0189  
                                    l2630 0050                                      l2622 0036  
                                    l1398 0322                                      l2288 0432  
                                    l2456 01C1                                      l2296 0422  
                                    l2480 0404                                      l2528 03AA  
                                    l2544 029F                                      l2536 0290  
                                    l2560 0164                                      l2552 0155  
                                    l2616 01AE                                      l2608 0189  
                                    l2640 0065                                      l2632 0054  
                                    l2624 003C                                      l2458 01C4  
                                    l2386 00BF                                      l2378 00B2  
                                    l2298 0425                                      l2474 0413  
                                    l2482 0406                                      l2490 01EB  
                                    l2538 0295                                      l2546 02A2  
                                    l2570 0178                                      l2562 0169  
                                    l2554 0159                                      l2618 01B1  
                                    l2650 0082                                      l2642 006D  
                                    l2634 0059                                      l2626 0040  
                                    l2468 01CA                                      l2396 00C7  
                                    l2476 0416                                      l2484 0407  
                                    l2492 01F0                                      l1940 039B  
                                    l2572 0179                                      l2564 016A  
                                    l2556 015A                                      l2660 00A8  
                                    l2652 008A                                      l2644 0073  
                                    l2636 005F                                      l2628 004A  
                                    l1950 0457                                      l2590 02D1  
                                    l2582 02C2                                      l2398 00EC  
                                    l1942 039C                                      l2574 017E  
                                    l2566 016F                                      l2558 015B  
                                    l2662 00AE                                      l2646 007B  
                                    l2638 0064                                      l2670 02A9  
                                    l1952 045A                                      l2592 02D4  
                                    l2584 02C9                                      l2496 01F4  
                                    l2488 01E9                                      l1944 039E  
                                    l2576 0181                                      l2568 0173  
                                    l2648 007E                                      l2656 0090  
                                    l2672 02AF                                      l2680 02FA  
                                    l2594 02D7                                      l2586 02CA  
                                    l1946 03A1                                      l1938 0396  
                                    l2578 0184                                      l2658 00A3  
                                    l2674 02B4                                      l2682 02FB  
                                    l2588 02CE                                      l2596 02DC  
                                    l2668 02A5                                      l2684 0303  
                                    l2676 02F6                                      l2790 020C  
                                    l2686 0306                                      l2678 02F9  
                                    l2792 013E                                      l2794 00DC  
                                    l2796 01DA                                      l2788 0098  
                                    _LATA 010C                                      _LATC 010E  
                                    _WPUA 020C                          _estado_mov_nuevo 0040  
                        _estado_mov_viejo 0041                                      _flag 007B  
                                    _main 02F6                  ?_I2C_CallbackReturnReset 0042  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                        __end_of_I2C_Open 0187                                      btemp 007E  
                                    start 0019                ??_TMR1_SetInterruptHandler 0074  
                        ?_I2C_MasterClose 0070              __end_of_Get_Master_TMR1_flag 0469  
     __size_of_I2C_SetAddressNackCallback 000D            __size_of_OSCILLATOR_Initialize 0009  
                        ?_I2C_MasterStart 0070                             _I2C_DO_RX_ACK 0413  
                        ?_I2C_MasterWrite 0070             __end_of_OSCILLATOR_Initialize 03C6  
                       ?_Rotar_All_Slaves 0070                                     ?_main 0070  
                                   _T1CON 0018                                     i1l431 0359  
                                   i1l435 0321                                     i1l357 0017  
                                   i1l459 0462              __size_of_I2C_DO_RX_NACK_STOP 0005  
                                   _TMR1H 0017                                     _TMR1L 0016  
                                   u47_20 034E                                     u55_20 031C  
                                   u47_21 034D                                     u55_21 031B  
                      ??_Rotar_All_Slaves 004F                                     u57_20 000A  
                       ??_I2C_DO_TX_EMPTY 0072                                     u57_21 0009  
                                   _TRISA 008C                                     _TRISC 008E  
                                   u58_20 000F                                     u58_21 000E  
                                   u59_20 0014                                     u59_21 0013  
                        __end_of_TMR1_ISR 0322                         __end_of_I2C_DO_RX 014D  
                       __end_of_I2C_DO_TX 0107                                     _ciclo 003F  
                          _WDT_Initialize 0436                         __end_of_I2C_Close 02DE  
                  __size_of_I2C_MasterFsm 002B            I2C_MasterOperation@returnValue 0043  
                 _I2C_MasterEnableRestart 0451                   __end_of_TMR1_Initialize 02F6  
                                   pclath 000A                          ?_I2C_SetCallback 0072  
            I2C_SetAddressNackCallback@cb 0077                                     status 0003  
                                   wtemp0 007E                         ?_I2C_DO_SEND_STOP 0070  
                  __size_of_I2C_SetBuffer 0010                           _TMR1_WriteTimer 0349  
                      ??_I2C_DO_SEND_STOP 0072                           __initialization 001B  
                            __end_of_main 030C         __size_of_I2C_DO_SEND_RESTART_READ 0005  
               ?_I2C_DO_SEND_RESTART_READ 0070                            ?_I2C_DO_RX_ACK 0070  
             ?_INTERRUPT_InterruptManager 0070                                    ??_main 007B  
                       ?_I2C_MasterIsNack 0070                          __end_of_SetServo 0389  
                       ?_I2C_MasterSetIrq 0070                        ??_I2C_MasterIsNack 0072  
                  __end_of_WDT_Initialize 043A                        ??_I2C_MasterSetIrq 0072  
         __end_of_I2C_CallbackReturnReset 0465                                    _ACTCON 039B  
         __size_of_I2C_CallbackReturnStop 0002                                    _APFCON 011D  
           I2C_SetDataCompleteCallback@cb 0077                                    _ANSELA 018C  
                                  _ANSELC 018E                                    _BORCON 0116  
                                  _T1GCON 0019                              ??_I2C_Poller 0079  
                 TMR1_WriteTimer@timerVal 0070                                    i1l2130 030E  
                                  i1l2132 0315                                    i1l2070 0351  
                                  i1l2134 031C                                    i1l2150 0014  
                                  i1l2072 0353                                    i1l2064 0349  
                                  i1l2128 030C                                    i1l2144 0006  
                                  i1l2066 034E                                    i1l2074 0355  
                                  i1l2146 000A                                    i1l2076 0357  
                                  i1l2068 034F                                    i1l2148 000F  
                                  i1l2078 0460                                    _OSCCON 0099  
                                  _WDTCON 0097                       _I2C_MasterGetRxData 0448  
                           SetServo@ciclo 0048                             _I2C_MasterFsm 0215  
                           SetServo@slave 004B                         I2C_SetCallback@cb 0072  
                 __size_of_I2C_MasterOpen 000D                   __size_of_I2C_MasterStop 0003  
                 __size_of_I2C_Initialize 0009                             _I2C_SetBuffer 036A  
                      __end_of_I2C_Poller 03B0              __end_of_I2C_MasterDisableIrq 045A  
                     _I2C_DO_ADDRESS_NACK 01E9                      ?_I2C_MasterGetRxData 0070  
                               ?_I2C_Open 0070        __end_of_I2C_SetAddressNackCallback 0396  
              _I2C_SetAddressNackCallback 0389                           ?_WDT_Initialize 0070  
               ??_I2C_MasterEnableRestart 0072  TMR1_SetInterruptHandler@InterruptHandler 0072  
                 __end_of_TMR1_WriteTimer 035A                          ?_TMR1_Initialize 0070  
                       _SYSTEM_Initialize 035A                   __end_of__initialization 0030  
                    _Get_Master_TMR1_flag 0467                       _I2C_MasterOperation 0286  
                      ?_SYSTEM_Initialize 0070                             ??_Rotar_Slave 004C  
                    ?_I2C_DO_ADDRESS_NACK 0070                            __pcstackCOMMON 0070  
                          ?_I2C_MasterFsm 0070                           ??_I2C_DO_RX_ACK 0072  
                            __pidataBANK0 0442                    _I2C_CallbackReturnStop 0465  
                     ??_SYSTEM_Initialize 0074                                 ?_TMR1_ISR 0070  
                          ?_I2C_SetBuffer 0072                   ?_I2C_MasterWaitForEvent 0070  
          __size_of_I2C_DO_SEND_ADR_WRITE 0008        __size_of_I2C_DO_SEND_RESTART_WRITE 0005  
           __end_of_I2C_DO_SEND_ADR_WRITE 03E0                ?_I2C_DO_SEND_RESTART_WRITE 0070  
                    ?_I2C_MasterOperation 0070                     ??_I2C_MasterGetRxData 0072  
                ??_Clear_Master_TMR1_flag 0072                   ?_I2C_Write1ByteRegister 0044  
                          _OPTION_REGbits 0095                                ??_I2C_Open 0072  
              __end_of_I2C_MasterClearIrq 0460                 __end_of_SYSTEM_Initialize 036A  
                       _I2C_MasterSendAck 043A                                __pbssBANK0 0020  
                           ??_I2C_DO_IDLE 0072                     ?_Get_Master_TMR1_flag 0070  
                           ??_I2C_DO_RCEN 0072              __end_of_I2C_MasterSendTxData 0436  
                      ?_I2C_MasterSendAck 0070                         _I2C_MasterStartRx 044B  
                   ??_I2C_DO_ADDRESS_NACK 0072                       _I2C_DO_RX_NACK_STOP 040E  
                      ?_I2C_MasterStartRx 0070                __end_of_I2C_MasterSendNack 0442  
                               ?_SetServo 0048                     _wr1RegCompleteHandler 0337  
                              __pmaintext 02F6                       ??_I2C_MasterSendAck 0072  
             __end_of_I2C_DO_SEND_RESTART 0422                           _I2C_DO_TX_EMPTY 01BA  
                     I2C_SetBuffer@buffer 0075                                ??_TMR1_ISR 0072  
                              __pintentry 0004            __end_of_I2C_MasterWaitForEvent 03F9  
                     __end_of_Rotar_Slave 00B2                       ??_I2C_MasterStartRx 0072  
           __size_of_I2C_DO_SEND_ADR_READ 0009          __size_of_I2C_CallbackReturnReset 0002  
                   ??_I2C_MasterOperation 0079            I2C_SetDataCompleteCallback@ptr 0079  
          __end_of_I2C_Write1ByteRegister 01BA                  ??_I2C_DO_RX_NACK_RESTART 0072  
       __end_of_I2C_DO_SEND_RESTART_WRITE 0427                      ?_I2C_DO_RX_NACK_STOP 0070  
               __end_of_I2C_MasterSendAck 043E                                   _OSCTUNE 0098  
                                 _SSP1ADD 0212                                   _SSP1BUF 0211  
                        ?_TMR1_WriteTimer 0070                 __end_of_I2C_MasterStartRx 044E  
                    I2C_Close@returnValue 0073              ?_I2C_SetDataCompleteCallback 0077  
                               _I2C_DO_RX 0107                                 _I2C_DO_TX 00B2  
        __end_of_I2C_DO_SEND_RESTART_READ 042C                 __size_of_Rotar_All_Slaves 001D  
                               _I2C_Close 02C2                      _I2C_MasterDisableIrq 0457  
                         ??_I2C_MasterFsm 0076                                ??_SetServo 0049  
                     __end_of_I2C_DO_IDLE 0431                       __end_of_I2C_DO_RCEN 03E7  
                         ??_I2C_SetBuffer 0074                   I2C_SetBuffer@bufferSize 0072  
                          _I2C_MasterOpen 0396                            _I2C_MasterStop 044E  
                          _I2C_Initialize 03C6                 __size_of_I2C_DO_SEND_STOP 0005  
                                 __ptext1 035A                                   __ptext2 0436  
                                 __ptext3 02DE                                   __ptext4 03ED  
                                 __ptext5 0322                                   __ptext6 03BD  
                                 __ptext7 03C6                                   __ptext8 02A5  
                                 __ptext9 0034                     ??_I2C_DO_RX_NACK_STOP 0072  
                               _T1CONbits 0018                     _OSCILLATOR_Initialize 03BD  
         __size_of_Clear_Master_TMR1_flag 0002         __size_of_TMR1_SetInterruptHandler 0006  
                      I2C_SetCallback@idx 0076                  __size_of_I2C_MasterClose 0003  
                ??_PIN_MANAGER_Initialize 0072             I2C_CallbackReturnReset@funPtr 0042  
               ?_TMR1_SetInterruptHandler 0072                        I2C_SetCallback@ptr 0074  
                wr1RegCompleteHandler@ptr 0042                 I2C_Write1ByteRegister@reg 0044  
                __size_of_I2C_MasterStart 0003                  __size_of_I2C_MasterWrite 0005  
              __size_of_SYSTEM_Initialize 0010                                   clrloop0 03E8  
                  ??_Get_Master_TMR1_flag 0072                      end_of_initialization 0030  
                              ?_I2C_DO_RX 0070                                ?_I2C_DO_TX 0070  
               __size_of_I2C_MasterIsNack 0006                                ?_I2C_Close 0070  
                 __end_of_I2C_DO_TX_EMPTY 01E9                 __size_of_I2C_MasterSetIrq 0003  
                   ?_I2C_MasterDisableIrq 0070                    ?_wr1RegCompleteHandler 0042  
                             _Rotar_Slave 0034                  __size_of_I2C_SetCallback 0026  
                  __end_of_I2C_MasterOpen 03A3                    __end_of_I2C_MasterStop 0451  
    __end_of_TMR1_Master_InterruptHandler 0463     __size_of_TMR1_Master_InterruptHandler 0003  
            _TMR1_Master_InterruptHandler 0460                    __end_of_I2C_Initialize 03CF  
                        ??_WDT_Initialize 0072                      _I2C_MasterSendTxData 0431  
         __size_of_I2C_DO_RX_NACK_RESTART 0005               ?_I2C_SetAddressNackCallback 0077  
              __size_of_I2C_MasterSendAck 0004                         __size_of_I2C_Open 003A  
                      Rotar_Slave@esclavo 004E                __size_of_I2C_MasterStartRx 0003  
                             _I2C_DO_IDLE 042C                               _I2C_DO_RCEN 03E0  
           I2C_Write1ByteRegister@address 0047                    _Clear_Master_TMR1_flag 0469  
                 ?_I2C_CallbackReturnStop 0042                  _I2C_DO_SEND_RESTART_READ 0427  
            I2C_CallbackReturnStop@funPtr 0042                           ?_I2C_MasterOpen 0070  
                         ?_I2C_MasterStop 0070                           ?_I2C_Initialize 0070  
                 _I2C_CallbackReturnReset 0463      __size_of_I2C_SetDataCompleteCallback 000D  
           ?_TMR1_Master_InterruptHandler 0070                         __size_of_TMR1_ISR 0016  
                   ?_I2C_MasterSendTxData 0070                    ?_OSCILLATOR_Initialize 0070  
             ??_I2C_DO_SEND_RESTART_WRITE 0072                       start_initialization 001B  
         __size_of_PIN_MANAGER_Initialize 0015                             ?_I2C_DO_RESET 0070  
                             ??_I2C_DO_RX 0072                               ??_I2C_DO_TX 0073  
                       ??_I2C_MasterClose 0072                          _Rotar_All_Slaves 02A5  
                  ??_I2C_MasterDisableIrq 0072                               ??_I2C_Close 0072  
                       ??_I2C_MasterStart 0072                         ??_I2C_MasterWrite 007A  
          __end_of_I2C_CallbackReturnStop 0467                    _I2C_DO_RX_NACK_RESTART 0409  
                        ?_I2C_DO_TX_EMPTY 0070                        _I2C_MasterClearIrq 045D  
                __size_of_TMR1_Initialize 0018                         __size_of_SetServo 000F  
                     ?_I2C_MasterClearIrq 0070               __end_of_I2C_MasterGetRxData 044B  
                             __pdataBANK0 0056                     __end_of_I2C_DO_RX_ACK 0418  
                        _I2C_DO_SEND_STOP 0418                         ??_I2C_SetCallback 0075  
                     I2C_Open@returnValue 0074                        _I2C_MasterSendNack 043E  
                ?_I2C_MasterEnableRestart 0070                         _i2c_fsmStateTable 0266  
                   _I2C_DO_SEND_ADR_WRITE 03D8                               __pbssCOMMON 007B  
                               ___latbits 0002                             __pcstackBANK0 0042  
                          ??_I2C_DO_RESET 0072                       ?_I2C_MasterSendNack 0070  
            __end_of_I2C_DO_SEND_ADR_READ 03D8                      ??_I2C_MasterClearIrq 0072  
             __end_of_I2C_DO_ADDRESS_NACK 0215                               _cicloReposo 0057  
                       Rotar_All_Slaves@n 0050                          _I2C_MasterIsNack 03F9  
               _I2C_DO_SEND_RESTART_WRITE 0422                          _I2C_MasterSetIrq 0445  
                               __pnvBANK0 0052                    _PIN_MANAGER_Initialize 0322  
               ??_I2C_CallbackReturnReset 007B               __end_of_I2C_MasterOperation 02A5  
                    ??_I2C_MasterSendNack 0072          __end_of_TMR1_SetInterruptHandler 03F3  
                  ??_I2C_MasterSendTxData 0072                 __end_of_i2c_fsmStateTable 0286  
            ??_INTERRUPT_InterruptManager 0072              __size_of_I2C_DO_SEND_RESTART 0005  
                 I2C_MasterOperation@read 0042                                  _I2C_Open 014D  
          ??_TMR1_Master_InterruptHandler 0070                   ??_wr1RegCompleteHandler 007B  
                               clear_ram0 03E7                                  _PIE1bits 0091  
                            ?_Rotar_Slave 0070                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 0015                                  _PIR1bits 0011  
                   __end_of_I2C_MasterFsm 0240               __end_of_I2C_DO_RX_NACK_STOP 0413  
                                _SSP1CON1 0215                                  _SSP1CON2 0216  
                                _TMR1_ISR 030C           __end_of_I2C_MasterEnableRestart 0454  
                                _SSP1STAT 0214                     __end_of_I2C_SetBuffer 037A  
                       ??_TMR1_Initialize 0074                    ?_I2C_DO_SEND_ADR_WRITE 0070  
                I2C_MasterSendTxData@data 0072                ??_I2C_DO_SEND_RESTART_READ 0072  
                              _I2C_Poller 03A3                   ?_Clear_Master_TMR1_flag 0070  
                              _I2C_Status 0020                              ?_I2C_DO_IDLE 0070  
           __size_of_Get_Master_TMR1_flag 0002                              ?_I2C_DO_RCEN 0070  
                        ??_I2C_MasterOpen 0072                          ??_I2C_MasterStop 0072  
                ??_I2C_MasterWaitForEvent 0072                          ??_I2C_Initialize 0072  
                                _SetServo 037A                      __end_of_I2C_DO_RESET 0409  
                ??_I2C_Write1ByteRegister 0046                   ??_OSCILLATOR_Initialize 0072  
                    _I2C_DO_SEND_ADR_READ 03CF                  __end_of_Rotar_All_Slaves 02C2  
                _TMR1_SetInterruptHandler 03ED                     _TMR1_InterruptHandler 0052  
                         _I2C_MasterClose 045A             I2C_SetAddressNackCallback@ptr 0079  
                         I2C_Open@address 0073                           _I2C_MasterStart 0454  
                                _cicloMax 0056                                  _cicloMin 0058  
                         _I2C_MasterWrite 03FF                                  __ptext10 037A  
                                __ptext11 0187                                  __ptext20 01E9  
                                __ptext12 0389                                  __ptext21 0404  
                                __ptext13 014D                                  __ptext30 0107  
                                __ptext22 0409                                  __ptext14 0396  
                                __ptext31 00B2                                  __ptext23 040E  
                                __ptext15 03FF                                  __ptext40 0448  
                                __ptext32 03D8                                  __ptext24 0413  
                                __ptext16 0286                                  __ptext41 043E  
                                __ptext33 03CF                                  __ptext25 0418  
                                __ptext17 03A3                                  __ptext50 0451  
                                __ptext42 044B                                  __ptext34 042C  
                                __ptext26 041D                                  __ptext18 03F3  
                                __ptext51 0454                                  __ptext43 0463  
                                __ptext35 01BA                                  __ptext27 0422  
                                __ptext19 0215                                  __ptext60 0349  
                                __ptext52 02C2                                  __ptext44 0465  
                                __ptext36 0445                                  __ptext28 0427  
                                __ptext61 0460                                  __ptext53 0457  
                                __ptext45 0337                                  __ptext37 03F9  
                                __ptext29 03E0                                  __ptext54 045A  
                                __ptext46 03B0                                  __ptext38 0431  
                                __ptext55 045D                                  __ptext47 0240  
                                __ptext39 043A                                  __ptext56 0467  
                                __ptext48 036A                                  __ptext57 0469  
                                __ptext49 044E                                  __ptext59 030C  
                            _SSP1CON1bits 0215                              _SSP1CON2bits 0216  
          __end_of_Clear_Master_TMR1_flag 046B       __end_of_I2C_SetDataCompleteCallback 03BD  
             _I2C_SetDataCompleteCallback 03B0                   ?_I2C_DO_RX_NACK_RESTART 0070  
                __end_of_I2C_DO_SEND_STOP 041D                             __size_of_main 0016  
                         _I2C_SetCallback 0240             ??_I2C_SetDataCompleteCallback 007A  
              I2C_Write1ByteRegister@data 0045                                  int$flags 007E  
                   ?_I2C_DO_SEND_ADR_READ 0070        __end_of_INTERRUPT_InterruptManager 0019  
              _INTERRUPT_InterruptManager 0004                         ??_TMR1_WriteTimer 0072  
                __end_of_I2C_MasterIsNack 03FF                  __end_of_I2C_MasterSetIrq 0448  
                              _INTCONbits 000B            __end_of_I2C_DO_RX_NACK_RESTART 040E  
                 __size_of_WDT_Initialize 0004                                  intlevel1 0000  
                             ?_I2C_Poller 0070          __size_of_I2C_MasterEnableRestart 0003  
                 ?_PIN_MANAGER_Initialize 0070                       _I2C_DO_SEND_RESTART 041D  
           __size_of_I2C_MasterDisableIrq 0003           __size_of_I2C_MasterWaitForEvent 0006  
                    __size_of_Rotar_Slave 007E           __size_of_I2C_Write1ByteRegister 0033  
                 __end_of_I2C_MasterClose 045D                  __size_of_I2C_DO_TX_EMPTY 002F  
                 __end_of_I2C_MasterStart 0457                   __end_of_I2C_MasterWrite 0404  
                           __pstringtext1 0266                      ?_I2C_DO_SEND_RESTART 0070  
            __size_of_I2C_MasterGetRxData 0003               __size_of_I2C_MasterClearIrq 0003  
                 __end_of_I2C_SetCallback 0266            __end_of_PIN_MANAGER_Initialize 0337  
                  __size_of_I2C_DO_RX_ACK 0005            __size_of_wr1RegCompleteHandler 0012  
                   __size_of_I2C_DO_RESET 0005             __end_of_wr1RegCompleteHandler 0349  
                   _MSSP_InterruptHandler 003D              __size_of_I2C_DO_ADDRESS_NACK 002C  
                    __size_of_I2C_DO_IDLE 0005                      __size_of_I2C_DO_RCEN 0007  
                         _TMR1_Initialize 02DE                        __size_of_I2C_DO_RX 0046  
                      __size_of_I2C_DO_TX 0055  
